{"version":3,"sources":["Site.ts","EditorParam.ts","EditorObject.ts","EditorProp.ts","Vertex.ts","Feature.ts","Level.ts","ToolID.ts","Store.ts","SiteTreeView.tsx","SceneDoor.tsx","SceneFeature.tsx","SceneFloor.tsx","SceneLane.tsx","SceneImage.tsx","SceneMeasurement.tsx","SceneModel.tsx","SceneVertex.tsx","SceneWall.tsx","SceneLevel.tsx","SceneSite.tsx","SceneMapTile.tsx","SceneMap.tsx","EditorScene.tsx","PropertyEditor.tsx","YAMLParser.ts","OpenDialog.tsx","MainMenu.tsx","App.tsx","index.tsx"],"names":["CoordinateSystem","EditorParam","type_idx","name","value","uuid","_name","data","p","generate_uuid","EditorObject","params","props","object_type_name","params_yaml","param_name","this","push","fromYAML","node","YAML","YAMLMap","param","param_value_node","YAMLSeq","add","flow","key","Math","round","EditorProp","_getter","get_value","set_value","v","Vertex","x","y","roundNicely","length","paramsToYAML","vertex","paramsFromYAML","Feature","feature","Level","elevation","scale","doors","vertices","walls","measurements","floors","lanes","models","images","features","constraints","map","constraint","toYAML","door","isLegacyDefaultImage","filename","floor","lane","layers_node","image","toLayerYAML","measurement","model","wall","sum","count","meas","dx","start_idx","end_idx","dy","d_pixels","sqrt","distance","level","EditorImage","layer_name","EditorConstraint","EditorDoor","EditorFloor","fromLayerYAML","EditorLane","EditorModel","EditorMeasurement","EditorWall","calculateScale","ToolID","Site","url_base","levels","reference_level_name","coordinate_system","Legacy","yaml_doc","Document","levels_node","get","lifts_node","toString","lineWidth","minContentWidth","vec_min","THREE","Infinity","vec_max","bb","computeBoundingBox","cx","min","max","cy","transformPoint","t_cx","t_cy","target","position","z","zoom","site","WebMercator","yaml_text","yaml","parse","level_name","level_data","parseDocument","vertex_indices","vertices_node","vertex_index","vertex_idx","offset","yaw","color","visible","blob","Blob","color_node","transform_node","_blob","console","log","size","feature_yaml","ids","model_name","instance_name","is_static","useStore","create","set","selection","editorMode","enableMotionControls","activeTool","SELECT","activeMotionTool","NONE","propertyRepaintCount","repaintCount","disableEditorTools","activeUUID","cameraInitialPose","cameraPose","fn","produce","setSelection","setStore","newSelection","state","clearSelection","setActiveTool","newTool","setState","setActiveMotionTool","repaintPropertyEditor","updateModelPoint","level_uuid","model_uuid","updateFeaturePoint","feature_level","feature_uuid","FeatureTreeItem","TreeItem","nodeId","label","onClick","event","ModelTreeItem","ConstraintTreeItem","substring","ParamTreeItem","DoorTreeItem","ImageTreeItem","FloorTreeItem","idx","join","WallTreeItem","MeasurementTreeItem","LaneTreeItem","VertexTreeItem","LevelTreeItem","SiteTreeView","style","margin","TreeView","defaultCollapseIcon","defaultExpandIcon","SceneDoor","v1","vertex_start","v2","vertex_end","len","xyrot","atan2","React","useMemo","setRGB","rotation","stopPropagation","args","SceneFeature","isMoveToolActive","MOVE","useState","dragActive","setDragActive","PI","onPointerDown","setPointerCapture","pointerId","onPointerUp","releasePointerCapture","onPointerMove","inverseTransformPoint","unprojectedPoint","px","py","intersection_point","ray","intersectPlane","Text","SceneFloor","shape","started","t_x","t_y","lineTo","moveTo","v0_x","v0_y","SceneLane","coordinateSystem","laneWidth","SceneImage","useLoader","TextureLoader","texture","width_meters","height_meters","magFilter","minFilter","width","height","SceneMeasurement","SceneModel","SceneVertex","captureTools","ADD_LANE","activeMotionLinePoint","setActiveMotionLinePoint","showActiveMotionGeometry","setShowActiveMotionGeometry","updateActiveMotionGeometry","useCallback","self","setFromPoints","vertexDiameter","newUUID","includes","start_uuid","end_uuid","getState","i","addLane","mouse_x","mouse_y","vertex_uuid","updateVertexPoint","attach","onUpdate","linewidth","linecap","SceneWall","SceneLevel","fallback","filter","SceneSite","useFrame","camera","c","center_x","matrixWorld","elements","center_y","center_z","SceneMapTile","side_len","pow","wx","wy","url","setTexture","useEffect","load","ADD_VERTEX","addVertex","clamp","v_min","v_max","SceneMap","tiles","setTiles","viewport","useThree","canvasSize","currentPerformance","performance","current","right_x","right","left_x","left","top_y","top","bottom_y","bottom","zoom_level","ceil","disable","left_x_grid_idx","right_x_grid_idx","top_y_grid_idx","bottom_y_grid_idx","max_cell","next_tiles","Array","y_idx","x_idx","tile_desc","EditorScene","showMap","Controls","DefaultUp","perspective_camera","useRef","orthographic_camera","PerspectiveCamera","ref","fov","makeDefault","OrthographicCamera","OrbitControls","enableDamping","screenSpacePanning","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","mouseButtons","LEFT","PAN","MIDDLE","RIGHT","ROTATE","touches","ONE","TWO","enabled","regress","frameloop","mode","linear","onPointerMissed","intensity","useStyles","makeStyles","theme","noSelectionDiv","table","padding","tableHead","tableHeadRow","borderBottomStyle","borderBottom","borderBottomColor","palette","primary","main","tableHeadCell","fontWeight","paddingLeft","tableCell","PropertyEditor","classes","Table","className","TableHead","TableCell","TableBody","prop","TableRow","YAMLParser","computeInitialCameraPose","YAMLRetriever","resource_name","a","fetch","then","response","text","YAMLRetrieveDemo","process","YAMLSender","Object","getPrototypeOf","maxFlowStringSingleLineLength","toYAMLString","yaml_size","method","headers","body","directoryButton","fontSize","typography","h5","textDecoration","dialog","backgroundColor","background","paper","OpenDialog","buildingFileNames","setBuildingFileNames","directoryHandle","setDirectoryHandle","onDirectoryClick","window","showDirectoryPicker","handle","entry","endsWith","previous","values","loadFile","getFileHandle","fileHandle","getFile","file","onOpen","Dialog","open","onClose","onCancel","DialogTitle","DialogContent","Button","variant","List","subheader","ListSubheader","component","ListItem","button","ListItemIcon","ListItemText","e","buildingFileList","DialogActions","StyledToggleButtonGroup","withStyles","root","light","spacing","marginRight","grouped","contrastText","dark","ToggleButtonGroup","flex","menuButton","marginLeft","appTitle","filler","MainMenu","menuAnchorEl","setMenuAnchorEl","isOpenDialogOpen","setIsOpenDialogOpen","snackOpen","setSnackOpen","snackMessage","setSnackMessage","mapType","setMapType","save","snackClose","keyDown","toLowerCase","ctrlKey","preventDefault","addEventListener","removeEventListener","AppBar","IconButton","aria-label","currentTarget","keepMounted","anchorEl","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","transitionDuration","MenuItem","fromNewCommand","Divider","Typography","exclusive","onChange","ToggleButton","Tooltip","title","disabled","ADD_WALL","newMode","setEditorMode","Snackbar","autoHideDuration","TransitionProps","appear","action","Fragment","severity","flexGrow","minHeight","toolbarMargin","mixins","toolbar","workingArea","gridLeftColumn","borderRight","borderRightStyle","borderRightColor","propertyGridItem","borderTop","borderTopStyle","borderTopColor","App","Grid","container","xs","direction","item","overflow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.037526dc.chunk.js","sourcesContent":["import YAML from 'yaml';\nimport * as THREE from 'three';\nimport { v4 as generate_uuid } from 'uuid';\nimport { EditorObject } from './EditorObject';\nimport { CameraPose } from './Store';\nimport { Level } from './Level';\n\nexport enum CoordinateSystem {\n  Legacy,\n  WGS84,\n  WebMercator\n}\n\nexport class Site extends EditorObject {\n  name: string = '';\n  url_base: string = '';\n  levels: Level[] = [];\n  reference_level_name: string = '';\n  uuid: string = '';\n  params = [];\n  props = [];\n  object_type_name = 'Site';\n  coordinate_system: CoordinateSystem = CoordinateSystem.Legacy;\n  yaml_doc: YAML.Document = new YAML.Document();;\n\n  static fromNewCommand(): Site {\n    let site = new Site();\n    site.uuid = generate_uuid();\n    site.name = 'Unnamed Site';\n    site.coordinate_system = CoordinateSystem.WebMercator;\n    return site;\n  }\n\n  static fromYAML(yaml_text: string): Site {\n    const yaml = YAML.parse(yaml_text);\n    let site = new Site();\n    site.uuid = generate_uuid();\n    site.name = yaml['name'];\n    for (const level_name in yaml['levels']) {\n      const level_data = yaml['levels'][level_name];\n      site.levels.push(Level.fromYAML(level_name, level_data));\n    }\n    if (yaml['reference_level_name']) {\n      site.reference_level_name = yaml['reference_level_name'];\n    }\n    else {\n      if (site.levels.length > 0) {\n        site.reference_level_name = site.levels[0].name;\n      }\n    }\n    site.yaml_doc = YAML.parseDocument(yaml_text);\n    return site;\n  }\n\n  toYAMLString(): string {\n    let yaml_doc = new YAML.Document(new YAML.YAMLMap());\n    let levels_node = new YAML.YAMLMap();\n    for (const level of this.levels) {\n      levels_node.add({ key: level.name, value: level.toYAML() });\n    }\n    yaml_doc.add({ key: 'crowd_sim', value: this.yaml_doc.get('crowd_sim') });\n    yaml_doc.add({ key: 'levels', value: levels_node });\n\n    let lifts_node = new YAML.YAMLMap();\n    // todo: add lifts to this map node\n    // only use flow style to enforce whitespace similarity for empty maps\n    lifts_node.flow = true;\n\n    yaml_doc.add({ key: 'lifts', value: lifts_node });\n    yaml_doc.add({ key: 'name', value: this.name });\n    return yaml_doc.toString({lineWidth: 0, minContentWidth: 2});\n  }\n\n  computeBoundingBox(): THREE.Box3 {\n    let vec_min = new THREE.Vector3(Infinity, Infinity, Infinity);\n    let vec_max = new THREE.Vector3(-Infinity, -Infinity, -Infinity);\n    for (const level of this.levels) {\n      for (const vertex of level.vertices) {\n        if (vertex.x < vec_min.x)\n          vec_min.x = vertex.x;\n        if (vertex.x > vec_max.x)\n          vec_max.x = vertex.x;\n  \n        if (vertex.y < vec_min.y)\n          vec_min.y = vertex.y;\n        if (vertex.y > vec_max.y)\n          vec_max.y = vertex.y;\n      }\n    }\n    return new THREE.Box3(vec_min, vec_max);\n  }\n\n  computeInitialCameraPose(): CameraPose {\n    if (this.levels.length) {\n      const bb = this.computeBoundingBox();\n      const cx = (bb.min.x + bb.max.x) / 2;\n      const cy = (bb.min.y + bb.max.y) / 2;\n      const [t_cx, t_cy] = this.levels[0].transformPoint(cx, cy);\n      const target = new THREE.Vector3(t_cx, t_cy, 0);\n      const position = new THREE.Vector3(\n        target.x + 10,\n        target.y - 10,\n        target.z + 10);\n      return {\n        position: position,\n        target: target,\n        zoom: 20,\n      };\n    }\n    else {\n      if (this.coordinate_system === CoordinateSystem.Legacy) {\n        return {\n          position: new THREE.Vector3(10, 10, 10),\n          target: new THREE.Vector3(0, 0, 0),\n          zoom: 20,\n        };\n      }\n      else {\n        // center on singapore\n        return {\n          position: new THREE.Vector3(201830, -127030, 10),\n          target: new THREE.Vector3(201830, -127030, 0),\n          zoom: 5,\n        };\n      }\n    }\n  }\n}\n","//import YAML from 'yaml'\nimport { v4 as generate_uuid } from 'uuid'\n\nexport class EditorParam {\n  type_idx: number = 0;\n  name: string = '';\n  value: any = 0;\n  uuid: string = '';\n\n  static fromYAML(_name: string, data: any): EditorParam {\n    let p = new EditorParam();\n    p.name = _name;\n    p.type_idx = data[0];\n    p.value = data[1];\n    p.uuid = generate_uuid();\n    return p;\n  }\n}\n","import YAML from 'yaml'\nimport { EditorParam } from './EditorParam';\nimport { EditorProp } from './EditorProp';\n\nexport class EditorObject {\n  uuid: string = '';\n  params: EditorParam[] = [];\n  props: EditorProp[] = [];\n  object_type_name: string = '';\n\n  paramsFromYAML(params_yaml: any): void {\n    for (const param_name in params_yaml) {\n      this.params.push(EditorParam.fromYAML(param_name, params_yaml[param_name]));\n    }\n  }\n\n  paramsToYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    for (const param of this.params) {\n      let param_value_node = new YAML.YAMLSeq();\n      param_value_node.add(param.type_idx);\n      param_value_node.add(param.value);\n      param_value_node.flow = true;\n      node.add({ key: param.name, value: param_value_node });\n    }\n    node.flow = true;\n    return node;\n  }\n\n  static roundNicely(value: number): number {\n    return Math.round(value * 1000) / 1000;\n  }\n}\n","import { v4 as generate_uuid } from 'uuid'\n\nexport class EditorProp {\n  name: string = '';\n  get_value: () => any = () => '';\n  set_value: (_: any) => void = (v: any) => { };\n  uuid: string = '';\n\n  constructor(_name: string, _getter: () => any) {\n    this.name = _name;\n    this.get_value = _getter;\n    this.uuid = generate_uuid();\n  }\n}\n","import { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport { v4 as generate_uuid } from 'uuid';\nimport YAML from 'yaml';\n\nexport class Vertex extends EditorObject {\n  x: number = 0;\n  y: number = 0;\n  name: string = '';\n\n  constructor() {\n    super();\n    this.props.push(new EditorProp('name', () => this.name));\n    this.props.push(new EditorProp('x', () => { return EditorObject.roundNicely(this.x)} ));\n    this.props.push(new EditorProp('y', () => { return EditorObject.roundNicely(this.y)} ));\n  }\n\n  static fromYAML(data: any): Vertex {\n    let vertex = new Vertex();\n    vertex.object_type_name = 'Vertex';\n    vertex.uuid = generate_uuid();\n    vertex.x = data[0];\n    vertex.y = -data[1];\n    vertex.name = data[3];\n    vertex.paramsFromYAML(data[4]);\n\n    return vertex;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.x);\n    node.add(-this.y);\n    node.add(0.0);\n    node.add(this.name);\n    if (this.params.length)\n      node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n","import { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport YAML from 'yaml';\n//import { v4 as generate_uuid } from 'uuid';\n\nexport class Feature extends EditorObject {\n  name: string = '';\n  x: number = 0;\n  y: number = 0;\n\n  static fromYAML(data: any): Feature {\n    let feature = new Feature();\n    feature.object_type_name = 'Feature';\n    feature.uuid = data['id'];\n    feature.name = data['name'];\n    feature.x = data['x'];\n    feature.y = -data['y'];\n\n    feature.props.push(new EditorProp('name', () => feature.name));\n    feature.props.push(new EditorProp('x', () => { return EditorObject.roundNicely(feature.x)} ));\n    feature.props.push(new EditorProp('y', () => { return EditorObject.roundNicely(feature.y)} ));\n\n    return feature;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'id', value: this.uuid });\n    node.add({ key: 'name', value: this.name });\n    node.add({ key: 'x', value: this.x });\n    node.add({ key: 'y', value: -this.y });\n    node.flow = true;\n    return node;\n  }\n}\n","import YAML from 'yaml';\nimport { v4 as generate_uuid } from 'uuid';\nimport { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport { Vertex } from './Vertex';\nimport { Feature } from './Feature';\n\n//import { EditorParam } from './EditorParam';\nimport {\n  EditorDoor,\n  EditorWall,\n  EditorMeasurement,\n  EditorFloor,\n  EditorImage,\n  EditorLane,\n  EditorModel,\n  EditorConstraint\n} from './Store';\n\nexport class Level extends EditorObject {\n  name: string = '';\n  elevation: number = 0;\n  scale: number = 1.234;\n  doors: EditorDoor[] = [];\n  vertices: Vertex[] = [];\n  walls: EditorWall[] = [];\n  measurements: EditorMeasurement[] = [];\n  floors: EditorFloor[] = [];\n  lanes: EditorLane[] = [];\n  models: EditorModel[] = [];\n  images: EditorImage[] = [];\n  features: Feature[] = [];\n  constraints: EditorConstraint[] = [];\n\n  constructor() {\n    super();\n    this.props.push(new EditorProp('name', () => this.name));\n    this.props.push(new EditorProp('elevation', () => this.elevation));\n    this.props.push(new EditorProp('scale', () => this.scale));\n  }\n\n  static fromYAML(_name: string, data: any): Level {\n    let level = new Level();\n    level.object_type_name = 'Level';\n    level.uuid = generate_uuid();\n    level.name = _name;\n\n    if (data['drawing'] && data['drawing']['filename']) {\n      let image = new EditorImage();\n      image.uuid = generate_uuid();\n      image.filename = data['drawing']['filename'];\n      image.isLegacyDefaultImage = true;\n      level.images.push(image);\n    }\n\n    level.elevation = data['elevation'];\n    level.constraints = data['constraints'].map((constraint: any) => EditorConstraint.fromYAML(constraint));\n    level.doors = data['doors'].map((door: any) => EditorDoor.fromYAML(door));\n    level.features = data['features'].map((feature: any) => Feature.fromYAML(feature));\n    level.floors = data['floors'].map((floor: any) => EditorFloor.fromYAML(floor));\n    for (const layer_name in data['layers']) {\n      level.images.push(EditorImage.fromLayerYAML(layer_name, data['layers'][layer_name]));\n    }\n    level.lanes = data['lanes'].map((lane: any) => EditorLane.fromYAML(lane));\n    level.models = data['models'].map((model: any) => EditorModel.fromYAML(model));\n    level.measurements = data['measurements'].map((measurement: any) => EditorMeasurement.fromYAML(measurement));\n    level.vertices = data['vertices'].map((vertex: any) => Vertex.fromYAML(vertex));\n    level.walls = data['walls'].map((wall: any) => EditorWall.fromYAML(wall));\n\n    level.calculateScale();\n\n    return level;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n\n    node.add({ key: 'constraints', value: this.constraints.map(constraint => constraint.toYAML()) });\n    node.add({ key: 'doors', value: this.doors.map(door => door.toYAML()) });\n\n    if (this.images.length > 0 && this.images[0].isLegacyDefaultImage) {\n      node.add({ key: 'drawing', value: { 'filename': this.images[0].filename } });\n    }\n\n    node.add({ key: 'elevation', value: this.elevation });\n    node.add({ key: 'features', value: this.features.map(feature => feature.toYAML()) });\n    node.add({ key: 'flattened_x_offset', value: 0 });\n    node.add({ key: 'flattened_y_offset', value: 0 });\n    node.add({ key: 'floors', value: this.floors.map(floor => floor.toYAML()) });\n    node.add({ key: 'lanes', value: this.lanes.map(lane => lane.toYAML()) });\n\n    let layers_node = new YAML.YAMLMap();\n    for (const image of this.images) {\n      if (!image.isLegacyDefaultImage) {\n        layers_node.add({ key: image.name, value: image.toLayerYAML() });\n      }\n    }\n    node.add({ key: 'layers', value: layers_node });\n    node.add({ key: 'measurements', value: this.measurements.map(measurement => measurement.toYAML()) });\n    node.add({ key: 'models', value: this.models.map(model => model.toYAML()) });\n    node.add({ key: 'vertices', value: this.vertices.map(vertex => vertex.toYAML()) });\n    node.add({ key: 'walls', value: this.walls.map(wall => wall.toYAML()) });\n    return node;\n  }\n\n  calculateScale(): void {\n    let sum = 0.0;\n    let count = 0;\n    for (const meas of this.measurements) {\n      count++;\n      const dx = this.vertices[meas.start_idx].x - this.vertices[meas.end_idx].x;\n      const dy = this.vertices[meas.start_idx].y - this.vertices[meas.end_idx].y;\n      const d_pixels = Math.sqrt(dx*dx + dy*dy);\n      sum += meas.distance / d_pixels;\n    }\n\n    if (count > 0) {\n      this.scale = sum / count;\n    }\n    else {\n      this.scale = 0.05;  // just use something sane...\n    }\n  }\n\n  transformPoint(x: number, y: number): [number, number] {\n    return [\n      x * this.scale,\n      y * this.scale,\n    ];\n  }\n\n  inverseTransformPoint(x: number, y: number): [number, number] {\n    return [\n      x / this.scale,\n      y / this.scale,\n    ];\n  }\n}\n","export enum ToolID {\n  SELECT,\n  MOVE,\n  ADD_VERTEX,\n  ADD_LANE,\n  ADD_WALL,\n  NONE\n}\n","import create from 'zustand';\nimport produce from 'immer';\nimport * as THREE from 'three';\nimport { v4 as generate_uuid } from 'uuid';\nimport YAML from 'yaml';\n//import { EditorParam } from './EditorParam'\nimport { EditorObject } from './EditorObject';\nimport { Site, CoordinateSystem } from './Site';\nimport { Feature } from './Feature';\nimport { Level } from './Level';\nimport { Vertex } from './Vertex';\nimport { ToolID } from './ToolID';\n//import { unstable_batchedUpdates } from 'react-dom';\n\nexport class EditorWall extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorWall {\n    let wall = new EditorWall();\n    wall.object_type_name = 'Wall';\n    wall.uuid = generate_uuid();\n    wall.paramsFromYAML(data[2]);\n    wall.start_idx = data[0];\n    wall.end_idx = data[1];\n    return wall;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorMeasurement extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n  distance: number = 1;\n\n  static fromYAML(data: any): EditorMeasurement {\n    let measurement = new EditorMeasurement();\n    measurement.object_type_name = 'Measurement'\n    measurement.uuid = generate_uuid();\n    measurement.start_idx = data[0];\n    measurement.end_idx = data[1];\n    measurement.distance = data[2]['distance'][1];\n    return measurement;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    let params_yaml = this.paramsToYAML();\n    params_yaml.add({ key: 'distance', value: [3, this.distance] });\n    node.add(params_yaml);\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorLane extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorLane {\n    let lane = new EditorLane();\n    lane.object_type_name = 'Lane';\n    lane.uuid = generate_uuid();\n    lane.paramsFromYAML(data[2]);\n    lane.start_idx = data[0];\n    lane.end_idx = data[1];\n    return lane;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorDoor extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorDoor {\n    let door = new EditorDoor();\n    door.object_type_name = 'Door';\n    door.uuid = generate_uuid();\n    door.paramsFromYAML(data[2]);\n    door.start_idx = data[0];\n    door.end_idx = data[1];\n    return door;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorFloor extends EditorObject {\n  vertex_indices: number[] = [];\n\n  static fromYAML(data: any): EditorFloor {\n    let floor = new EditorFloor();\n    floor.uuid = generate_uuid();\n    floor.paramsFromYAML(data['parameters']);\n    floor.vertex_indices = data['vertices'].map((vertex_idx: number) => vertex_idx);\n    return floor;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'parameters', value: this.paramsToYAML() });\n\n    let vertices_node = new YAML.YAMLSeq();\n    for (const vertex_index of this.vertex_indices) {\n      vertices_node.add(vertex_index);\n    }\n    vertices_node.flow = true;\n    node.add({ key: 'vertices', value: vertices_node });\n    return node;\n  }\n}\n\nexport class EditorImage extends EditorObject {\n  name: string = '';\n  filename: string = '';\n  offset: THREE.Vector3 = new THREE.Vector3(0, 0, 0);\n  yaw: number = 0;\n  scale: number = 1;\n  isLegacyDefaultImage: boolean = false;\n  color: number[] = [1, 1, 1, 1];\n  visible: boolean = true;\n  features: Feature[] = [];\n  blob: Blob = new Blob([]);\n\n  static fromLayerYAML(layer_name: string, data: any): EditorImage {\n    //console.log(data);\n    let image = new EditorImage();\n    image.object_type_name = 'Image';\n    image.uuid = generate_uuid();\n    image.name = layer_name;\n    image.filename = data['filename'];\n    image.color = data['color'];\n    image.offset.x = data['transform']['translation_x'];\n    image.offset.y = data['transform']['translation_y'];\n    image.scale = data['transform']['scale'];\n    image.yaw = data['transform']['yaw'];\n    image.isLegacyDefaultImage = false;\n    image.visible = data['visible'];\n    image.features = data['features'].map((feature_yaml: any) => Feature.fromYAML(feature_yaml));\n    return image;\n  }\n\n  toLayerYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    let color_node = new YAML.YAMLSeq();\n    color_node.add(this.color[0]);\n    color_node.add(this.color[1]);\n    color_node.add(this.color[2]);\n    color_node.add(this.color[3]);\n    color_node.flow = true;\n    node.add({ key: 'color', value: color_node });\n    node.add({ key: 'features', value: this.features.map(feature => feature.toYAML()) });\n    node.add({ key: 'filename', value: this.filename });\n    let transform_node = new YAML.YAMLMap();\n    transform_node.add({ key: 'scale', value: this.scale });\n    transform_node.add({ key: 'translation_x', value: this.offset.x });\n    transform_node.add({ key: 'translation_y', value: this.offset.y });\n    transform_node.add({ key: 'yaw', value: this.yaw });\n    node.add({ key: 'transform', value: transform_node });\n    node.add({ key: 'visible', value: this.visible });\n    return node;\n  }\n\n  loadBlob(_blob: Blob): void {\n    this.blob = _blob;\n    console.log(`image ${this.filename} retrieved ${this.blob.size} bytes`);\n  }\n}\n\nexport class EditorConstraint extends EditorObject {\n  ids: string[] = [];\n\n  static fromYAML(data: any): EditorConstraint {\n    let constraint = new EditorConstraint();\n    constraint.uuid = generate_uuid();\n    constraint.ids = [ data['ids'][0], data['ids'][1] ];\n    return constraint;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'ids', value: this.ids });\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorModel extends EditorObject {\n  model_name: string = '';\n  instance_name: string = '';\n  is_static: boolean = true;\n  x: number = 0;\n  y: number = 0;\n  z: number = 0;\n  yaw: number = 0;\n\n  static fromYAML(data: any): EditorModel {\n    let model = new EditorModel();\n    model.object_type_name = 'Model';\n    model.uuid = generate_uuid();\n    model.model_name = data['model_name'];\n    model.instance_name = data['name'];\n    model.is_static = data['static'];\n    model.x = data['x'];\n    model.y = -data['y'];\n    model.yaw = data['yaw'];\n    model.z = data['z'];\n    return model;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'model_name', value: this.model_name });\n    node.add({ key: 'name', value: this.instance_name });\n    node.add({ key: 'static', value: this.is_static });\n    node.add({ key: 'x', value: this.x });\n    node.add({ key: 'y', value: -this.y });\n    node.add({ key: 'yaw', value: this.yaw });\n    node.add({ key: 'z', value: this.z });\n    node.flow = true;\n    return node;\n  }\n}\n\nexport interface CameraPose {\n  position: THREE.Vector3,\n  target: THREE.Vector3,\n  zoom: number,\n}\n\nexport interface StoreState {\n  site: Site,\n  selection: EditorObject | null,\n  editorMode: string,\n  enableMotionControls: boolean,\n  activeTool: ToolID,\n  activeMotionTool: ToolID,\n  cameraInitialPose: CameraPose,\n  cameraPose: CameraPose,\n  propertyRepaintCount: number,\n  repaintCount: number,\n  disableEditorTools: boolean,\n  activeUUID: string,\n  set: (fn: (draftState: StoreState) => void) => void\n}\n\nexport const useStore = create<StoreState>(set => ({\n  site: new Site(),\n  selection: null,\n  editorMode: '2d',\n  enableMotionControls: true,\n  activeTool: ToolID.SELECT,\n  activeMotionTool: ToolID.NONE,\n  propertyRepaintCount: 0,\n  repaintCount: 0,\n  disableEditorTools: false,\n  activeUUID: '',\n  cameraInitialPose: {\n    position: new THREE.Vector3(0, 0, 100),\n    target: new THREE.Vector3(0, 0, 0),\n    zoom: 20,\n  },\n  cameraPose: {\n    position: new THREE.Vector3(0, 0, 100),\n    target: new THREE.Vector3(0, 0, 0),\n    zoom: 20,\n  },\n  set: fn => set(produce(fn)),\n}));\n\nexport type StoreSetter = (fn: (draftState: StoreState) => void) => void;\n\nexport function setSelection(setStore: StoreSetter, newSelection: EditorObject) {\n  setStore(state => {\n    state.selection = newSelection;\n  });\n}\n\nexport function clearSelection(setStore: StoreSetter) {\n  setStore(state => {\n    state.selection = null;\n  });\n}\n\nexport function setEditorMode(setStore: StoreSetter, newMode: string) {\n  setStore(state => {\n    state.editorMode = newMode;\n  });\n}\n\nexport function setActiveTool(newTool: ToolID) {\n  useStore.setState({\n    activeTool: newTool,\n    activeUUID: ''\n  });\n}\n\nexport function setActiveMotionTool(newTool: ToolID) {\n  useStore.setState({ activeMotionTool: newTool });\n}\n\nexport function setActiveUUID(newUUID: string) {\n  useStore.setState({ activeUUID: newUUID });\n}\n\nexport function repaintPropertyEditor(setStore: StoreSetter) {\n  setStore(state => {\n    state.propertyRepaintCount += 1;\n  });\n}\n\nexport function disableEditorTools(disable: boolean) {\n  let currentState = useStore.getState().disableEditorTools;\n  if (currentState === disable)\n    return; // nothing to do\n  useStore.setState({ disableEditorTools: disable });\n}\n\nexport function addVertex(x: number, y: number) {\n  console.log(`addVertex(${x}, ${y})`);\n  //\n  //let site = useStore(state => state.site);\n  let vertex = new Vertex();\n  vertex.uuid = generate_uuid();\n  vertex.x = x;\n  vertex.y = y;\n\n  let site = useStore.getState().site;\n\n  if (site.levels.length === 0) {\n    // add a default level\n    let level = new Level();\n    level.uuid = generate_uuid();\n\n    level.name = 'default';\n    level.scale = site.coordinate_system === CoordinateSystem.Legacy ? 0.05 : 1;\n    vertex.x *= level.scale;\n    vertex.y *= level.scale;\n\n    level.vertices = [vertex];\n\n    site.levels = [level];\n  }\n  else {\n    // todo: some way of defining the active level\n    let level = site.levels[0];\n    vertex.x *= level.scale;\n    vertex.y *= level.scale;\n    level.vertices = [...level.vertices, vertex];\n  }\n\n  useStore.setState({\n    site: site,\n    repaintCount: useStore.getState().repaintCount + 1,\n  });\n}\n\nexport function updateVertexPoint(\n  setStore: StoreSetter,\n  level_uuid: string,\n  vertex_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.site.levels.map(level => {\n      if (level.uuid === level_uuid) {\n        level.vertices.map(vertex => {\n          if (vertex.uuid === vertex_uuid) {\n            vertex.x = x;\n            vertex.y = y;\n          }\n          return vertex;\n        })\n      }\n      return level;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n\nexport function updateModelPoint(\n  setStore: StoreSetter,\n  level_uuid: string,\n  model_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.site.levels.map(level => {\n      if (level.uuid === level_uuid) {\n        level.models.map(model => {\n          if (model.uuid === model_uuid) {\n            model.x = x;\n            model.y = y;\n          }\n          return model;\n        })\n      }\n      return level;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n\nexport function updateFeaturePoint(\n  setStore: StoreSetter,\n  feature_level: Level,\n  feature_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.site.levels.map(level => {\n      if (level === feature_level) {\n        level.features.map(feature => {\n          if (feature.uuid === feature_uuid) {\n            feature.x = x;\n            feature.y = y;\n          }\n          return feature;\n        })\n      }\n      return level;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n\nexport function addLane(start_uuid: string, end_uuid: string, level_uuid: string) {\n  console.log(`addLane(${start_uuid}, ${end_uuid})`);\n  let site = useStore.getState().site;\n  for (let level of site.levels) {\n    if (level.uuid === level_uuid) {\n      // look up the vertex indices\n      // TODO: something cooler than this\n      let start_idx = -1;\n      let end_idx = -1;\n      for (let i = 0; i < level.vertices.length; i++) {\n        if (level.vertices[i].uuid === start_uuid) {\n          start_idx = i;\n        }\n        if (level.vertices[i].uuid === end_uuid) {\n          end_idx = i;\n        }\n      }\n      if (start_idx < 0 || end_idx < 0) {\n        return;\n      }\n\n      let lane = new EditorLane();\n      lane.uuid = generate_uuid();\n      lane.start_idx = start_idx;\n      lane.end_idx = end_idx;\n\n      level.lanes = [...level.lanes, lane];\n      break;\n    }\n  }\n\n  useStore.setState({\n    site: site,\n    repaintCount: useStore.getState().repaintCount + 1,\n  });\n}\n","import React from 'react';\nimport {\n  EditorConstraint,\n  EditorDoor,\n  EditorFloor,\n  EditorImage,\n  EditorLane,\n  EditorMeasurement,\n  EditorModel,\n  EditorWall,\n  setSelection,\n  useStore,\n} from './Store';\nimport { EditorParam } from './EditorParam';\nimport { Level } from './Level';\nimport { Vertex } from './Vertex';\nimport { Feature } from './Feature';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nfunction FeatureTreeItem(props: { feature: Feature }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.feature.uuid}\n      key={props.feature.uuid}\n      label={`${props.feature.x}, ${props.feature.y}`}\n      onClick={(event) => {\n        setSelection(setStore, props.feature);\n      }}\n    >\n    </TreeItem>\n  );\n}\n\nfunction ModelTreeItem(props: { model: EditorModel }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.model.uuid}\n      key={props.model.uuid}\n      label={`${props.model.instance_name}`}\n      onClick={(event) => {\n        setSelection(setStore, props.model);\n      }}\n    >\n    </TreeItem>\n  );\n}\n\n\nfunction ConstraintTreeItem(props: { constraint: EditorConstraint }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.constraint.uuid}\n      key={props.constraint.uuid}\n      label={`${props.constraint.ids[0].substring(1, 9)} - ${props.constraint.ids[1].substring(1, 9)}`}\n      onClick={(event) => {\n        setSelection(setStore, props.constraint);\n      }}\n    >\n      {props.constraint.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction DoorTreeItem(props: { door: EditorDoor }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.door.start_idx} => ${props.door.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.door.uuid}\n      key={props.door.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.door);\n      }}\n      label={label} />\n  );\n}\n\nfunction ParamTreeItem(props: { param: EditorParam }): JSX.Element {\n  return (\n    <TreeItem\n      nodeId={props.param.uuid}\n      key={props.param.uuid}\n      label={`${props.param.name} = ${props.param.value}`}\n    />\n  );\n}\n\nfunction ImageTreeItem(props: { image: EditorImage }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.image.uuid}\n      key={props.image.uuid}\n      label={props.image.filename}\n      onClick={(event) => {\n        setSelection(setStore, props.image);\n      }}\n    >\n      {props.image.params.map((param) => <ParamTreeItem param={param} />)}\n      <TreeItem\n        nodeId={`${props.image.uuid}_features`}\n        key={`${props.image.uuid}_features`}\n        label=\"features\"\n      >\n        {props.image.features.map((feature) => <FeatureTreeItem feature={feature} />)}\n      </TreeItem>\n    </TreeItem>\n  );\n}\n\nfunction FloorTreeItem(props: { floor: EditorFloor }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = 'floor (' + props.floor.vertex_indices.map((idx) => idx.toString()).join(', ') + ')';\n  return(\n    <TreeItem\n      nodeId={props.floor.uuid}\n      key={props.floor.uuid}\n      label={label}\n      onClick={(event) => {\n        setSelection(setStore, props.floor);\n      }}\n    >\n      {props.floor.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction WallTreeItem(props: { wall: EditorWall }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.wall.start_idx} => ${props.wall.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.wall.uuid}\n      key={props.wall.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.wall);\n      }}\n      label={label} />\n  );\n}\n\nfunction MeasurementTreeItem(props: { measurement: EditorMeasurement }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.measurement.start_idx}-${props.measurement.end_idx}) = ${props.measurement.distance}`;\n  return(\n    <TreeItem\n      nodeId={props.measurement.uuid}\n      key={props.measurement.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.measurement);\n      }}\n      label={label} />\n  );\n}\n\nfunction LaneTreeItem(props: { lane: EditorLane }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.lane.start_idx} => ${props.lane.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.lane.uuid}\n      key={props.lane.uuid}\n      label={label}\n      onClick={(event) => {\n        setSelection(setStore, props.lane);\n      }}\n    />\n  );\n}\n\nfunction VertexTreeItem(props: { vertex: Vertex }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  let label = \"(\" + props.vertex.x + \", \" + props.vertex.y + \")\";\n  if (props.vertex.name)\n    label = props.vertex.name + ': ' + label;\n  return (\n    <TreeItem\n      nodeId={props.vertex.uuid}\n      key={props.vertex.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.vertex);\n      }}\n      label={label}>\n      {props.vertex.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction LevelTreeItem(props: { level: Level }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.level.uuid}\n      key={props.level.uuid}\n      label={props.level.name}\n      onClick={(event) => {\n        setSelection(setStore, props.level);\n      }}>\n\n      <TreeItem nodeId={props.level.uuid + '_constraints'} label=\"constraints\">\n        {props.level.constraints.map(constraint => <ConstraintTreeItem constraint={constraint} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_doors'} label=\"doors\">\n        {props.level.doors.map(door => <DoorTreeItem door={door} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_features'} label=\"features\">\n        {props.level.features.map(feature => <FeatureTreeItem feature={feature} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_floors'} label=\"floors\">\n        {props.level.floors.map(floor => <FloorTreeItem floor={floor} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_images'} label=\"images\">\n        {props.level.images.map(image => <ImageTreeItem image={image} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_lanes'} label=\"lanes\">\n        {props.level.lanes.map(lane => <LaneTreeItem lane={lane} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_measurements'} label=\"measurements\">\n        {props.level.measurements.map(measurement => <MeasurementTreeItem measurement={measurement} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_models'} label=\"models\">\n        {props.level.models.map(model => <ModelTreeItem model={model} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_vertices'} label=\"vertices\">\n        {props.level.vertices.map(vertex => <VertexTreeItem vertex={vertex} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_walls'} label=\"walls\">\n        {props.level.walls.map(wall => <WallTreeItem wall={wall} /> )}\n      </TreeItem>\n    </TreeItem>\n  );\n}\n\nexport function SiteTreeView(): JSX.Element {\n  const site = useStore(state => state.site);\n\n  if (site.name === '') {\n    return (\n      <div style={{margin: '1em'}}>\n        <p>\n          No map loaded.\n        </p>\n        <p>\n          To load a map, click the menu icon in the upper-left.\n        </p>\n      </div>\n    );\n  }\n \n  // defaultExpanded={[building.uuid + '_levels']}\n  return (\n    <TreeView\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId={site.uuid + '_name'} label={\"site name: \" + site.name} />\n      <TreeItem\n        nodeId={site.uuid + '_ref'}\n        label={\"reference level: \" + site.reference_level_name }\n      />\n      <TreeItem nodeId={site.uuid + '_levels'} label=\"levels\">\n        {site.levels.map(level => <LevelTreeItem level={level} /> )}\n      </TreeItem>\n    </TreeView>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorDoor, setSelection } from './Store';\n\ninterface SceneDoorProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  door: EditorDoor,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneDoor(props: SceneDoorProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.1, 0.4, 0.4);\n    if (selection && selection.uuid === props.door.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.door.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 1.0 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.door.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.door);\n      }}\n    >\n      <boxGeometry args={[len, 0.5, 2]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Text } from '@react-three/drei'\nimport { Feature } from './Feature';\nimport { Level } from './Level';\nimport {\n  useStore,\n  repaintPropertyEditor,\n  setSelection,\n  updateFeaturePoint,\n} from './Store';\nimport { ToolID } from './ToolID';\n\ninterface SceneFeatureProps {\n  feature: Feature,\n  elevation: number,\n  level: Level,\n}\n\nexport function SceneFeature(props: SceneFeatureProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const isMoveToolActive = useStore(state => state.activeTool === ToolID.MOVE);\n  const [ dragActive, setDragActive ] = React.useState(false);\n\n  const [x, y] = props.level.transformPoint(props.feature.x, props.feature.y);\n\n  let color = \"rgb(200, 200, 0)\";\n  if (selection && selection.uuid === props.feature.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  return (\n    <group>\n      <mesh\n        position={[x, y, 0.25 + props.elevation]}\n        scale={1.0}\n        rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n        key={props.feature.uuid}\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n        onPointerDown={(event) => {\n          setSelection(setStore, props.feature);\n          if (!isMoveToolActive)\n            return;\n          event.stopPropagation();\n          setDragActive(true);\n          if (event.target) {\n            (event.target as HTMLElement).setPointerCapture(event.pointerId);\n          }\n        }}\n        onPointerUp={(event) => {\n          event.stopPropagation();\n          setDragActive(false);\n          if (event.target) {\n            (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n          }\n          repaintPropertyEditor(setStore);\n        }}\n        onPointerMove={(event) => {\n          if (dragActive) {\n            event.stopPropagation();\n            if (editorMode === '2d') {\n              const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n              updateFeaturePoint(setStore, props.level, props.feature.uuid, px, py);\n            }\n            else {\n              let intersection_point = new THREE.Vector3();\n              event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n              const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n              updateFeaturePoint(setStore, props.level, props.feature.uuid, px, py);\n            }\n          }\n        }}\n      >\n        <cylinderGeometry args={[0.05, 0.15, 0.4, 16]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <Text color=\"blue\" position={[x, y, 0.36 + props.elevation]}>\n        {props.feature.name}\n      </Text>\n    </group>\n  );\n}\n","import React from 'react';\nimport * as THREE from 'three';\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorFloor, setSelection } from './Store';\n\ntype SceneFloorProps = {\n  floor: EditorFloor;\n  level: Level;\n  vertices: Vertex[];\n  elevation: number;\n}\n\nexport function SceneFloor(props: SceneFloorProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const shape = React.useMemo(() => {\n    const shape = new THREE.Shape();\n    let started = false;\n\n    for (const v of props.vertices) {\n      const [t_x, t_y] = props.level.transformPoint(v.x, v.y);\n      if (!started)\n      {\n        shape.moveTo(t_x, t_y);\n        started = true;\n      }\n      else\n        shape.lineTo(t_x, t_y);\n    }\n    const [v0_x, v0_y] = props.level.transformPoint(props.vertices[0].x, props.vertices[0].y);\n    shape.lineTo(v0_x, v0_y);\n    return shape;\n  }, [props.vertices, props.level])\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(1, 1, 1);\n    if (selection && selection.uuid === props.floor.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.floor.uuid]);\n\n  return (\n    <mesh\n      key={props.floor.uuid}\n      onClick={(event) => {\n        event.stopPropagation()\n        console.log('floor onClick')\n        setSelection(setStore, props.floor)\n      }}\n    >\n      <extrudeGeometry args={[shape, { 'depth': 0.1, 'bevelEnabled': false } ]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n\n  /*\n      <meshStandardMaterial color={color} transparent={true} opacity={0.5} />\n  return (\n    <gridHelper\n      args={[100, 100]}\n      rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n      position={new THREE.Vector3(50, -50, elevation)}/>\n  );\n   */\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorLane, setSelection } from './Store';\nimport { CoordinateSystem } from './Site';\n\ninterface SceneLaneProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  lane: EditorLane,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneLane(props: SceneLaneProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n  const coordinateSystem = useStore(state => state.site.coordinate_system);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const laneWidth = coordinateSystem === CoordinateSystem.Legacy ? 0.5 : 0.02;\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.6, 0.05, 0.05);\n    if (selection && selection.uuid === props.lane.uuid) {\n      color.setRGB(0.8, 0.3, 0.01);\n    }\n    return color;\n  }, [selection, props.lane.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 0.2 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.lane.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.lane);\n      }}\n    >\n      <boxGeometry args={[len, laneWidth, 0.1]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n//<meshStandardMaterial color={color} transparent={true} opacity={0.7} />\n","import React from 'react'\nimport * as THREE from 'three'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\nimport { useLoader } from '@react-three/fiber';\nimport { Level } from './Level';\nimport { useStore, EditorImage } from './Store';\n\ntype SceneImageProps = {\n  image: EditorImage,\n  elevation: number,\n  level: Level,\n}\n\nexport function SceneImage(props: SceneImageProps): JSX.Element {\n  //const selection = useStore(state => state.selection)\n  const url_base = useStore(state => state.site.url_base);\n  //const setStore = useStore(state => state.set);\n  const [ texture ] = useLoader(TextureLoader, [url_base + props.image.filename]);\n  //useLoader.preload(TextureLoader, [url_base + props.image.filename]);\n\n  let width_meters = 50.0;\n  let height_meters = 50.0;\n\n  if (texture) {\n    texture.magFilter = THREE.NearestFilter;\n    texture.minFilter = THREE.NearestFilter;\n    width_meters = texture.image.width * props.level.scale;\n    height_meters = texture.image.height * props.level.scale;\n    // console.log(`texture size: ${width_meters}, ${height_meters}`);\n  }\n\n  const x = props.image.offset.x;\n  const y = props.image.offset.y;\n  const scale = 1; // todo...\n  const yaw = props.image.yaw;\n\n  return (\n    <mesh\n      position={[x + width_meters / 2, y - height_meters / 2, props.elevation + 0.1]}\n      scale={scale}\n      rotation={new THREE.Euler(0, yaw, 0)}\n      key={props.image.uuid}\n    >\n      <boxGeometry args={[width_meters, height_meters, 0.1, 8]} />\n      <meshStandardMaterial map={texture} color={[1.0, 1.0, 1.0]} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorMeasurement, setSelection } from './Store';\n\ninterface SceneMeasurementProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  measurement: EditorMeasurement,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneMeasurement(props: SceneMeasurementProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.6, 0.1, 0.6);\n    if (selection && selection.uuid === props.measurement.uuid) {\n      color.setRGB(0.8, 0.3, 0.01);\n    }\n    return color;\n  }, [selection, props.measurement.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 0.2 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.measurement.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.measurement);\n      }}\n    >\n      <boxGeometry args={[len, 0.5, 0.1]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Level } from './Level';\nimport { useStore, EditorModel, setSelection, updateModelPoint } from './Store';\nimport { ToolID } from './ToolID';\n\ninterface SceneModelProps {\n  model: EditorModel,\n  elevation: number,\n  level: Level,\n  level_uuid: string,\n}\n\nexport function SceneModel(props: SceneModelProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const isMoveToolActive = useStore(state => state.activeTool === ToolID.MOVE);\n  const [ dragActive, setDragActive ] = React.useState(false);\n\n  const [x, y] = props.level.transformPoint(props.model.x, props.model.y);\n\n  let color = \"rgb(128, 128, 128)\";\n  if (selection && selection.uuid === props.model.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  return (\n    <mesh\n      position={[x, y, 0.25 + props.elevation]}\n      scale={1.0}\n      rotation={new THREE.Euler(Math.PI / 2, props.model.yaw, 0)}\n      key={props.model.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.model);\n      }}\n      onPointerDown={(event) => {\n        if (!isMoveToolActive)\n          return;\n        event.stopPropagation();\n        setDragActive(true);\n        if (event.target) {\n          (event.target as HTMLElement).setPointerCapture(event.pointerId);\n        }\n      }}\n      onPointerUp={(event) => {\n        event.stopPropagation();\n        setDragActive(false);\n        if (event.target) {\n          (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n        }\n      }}\n      onPointerMove={(event) => {\n        if (dragActive) {\n          event.stopPropagation();\n          if (editorMode === '2d') {\n            const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n            updateModelPoint(setStore, props.level_uuid, props.model.uuid, px, py);\n          }\n          else {\n            let intersection_point = new THREE.Vector3();\n            event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n            const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n            updateModelPoint(setStore, props.level_uuid, props.model.uuid, px, py);\n          }\n        }\n      }}\n    >\n      <boxGeometry args={[0.4, 0.4, 0.4, 8]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Text } from '@react-three/drei'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport {\n  useStore,\n  repaintPropertyEditor,\n  setSelection,\n  setActiveUUID,\n  setActiveMotionTool,\n  updateVertexPoint,\n  addLane,\n} from './Store';\nimport { ToolID } from './ToolID';\nimport { CoordinateSystem } from './Site';\n\ninterface SceneVertexProps {\n  vertex: Vertex,\n  elevation: number,\n  level: Level,\n  level_uuid: string,\n}\n\nexport function SceneVertex(props: SceneVertexProps): JSX.Element {\n  //console.log('SceneVertex()');\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const activeTool = useStore(state => state.activeTool);\n  const activeUUID = useStore(state => state.activeUUID);\n  const activeMotionTool = useStore(state => state.activeMotionTool);\n  const coordinateSystem = useStore(state => state.site.coordinate_system);\n  const captureTools = [ToolID.MOVE, ToolID.ADD_LANE];\n\n  const [activeMotionLinePoint, setActiveMotionLinePoint] = React.useState<[number, number]>([0, 0]);\n  const [showActiveMotionGeometry, setShowActiveMotionGeometry] = React.useState(false);\n  const updateActiveMotionGeometry = React.useCallback(self => {\n    self.setFromPoints(\n      [\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(activeMotionLinePoint[0], activeMotionLinePoint[1], 0)\n      ]);\n  }, [activeMotionLinePoint]);\n\n  // todo: inflate vertex diameter when far away?\n  const vertexDiameter = coordinateSystem === CoordinateSystem.Legacy ? 0.1 : 0.01;\n\n  const [x, y] = props.level.transformPoint(props.vertex.x, props.vertex.y);\n\n  let color = \"rgb(0, 128, 0)\";\n  if (selection && selection.uuid === props.vertex.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  //const lineGeometry = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(0, 0, 0), new THREE.Vector3(1, 1, 1)]);\n  return (\n    <group>\n      <mesh\n        position={[x, y, 0.25 + props.elevation]}\n        scale={1.0}\n        rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n        key={props.vertex.uuid}\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n        onPointerDown={(event) => {\n          //console.log(`vertex onPointerDown uuid=${props.vertex.uuid}`);\n          if (activeTool === ToolID.SELECT) {\n            setSelection(setStore, props.vertex);\n            return;\n          }\n          else if (captureTools.includes(activeTool)) {\n            event.stopPropagation();\n            setActiveMotionTool(activeTool);\n            setActiveUUID(props.vertex.uuid);\n            if (event.target) {\n              (event.target as HTMLElement).setPointerCapture(event.pointerId);\n            }\n          }\n        }}\n        onPointerUp={(event) => {\n          event.stopPropagation();\n          if (event.target) {\n            (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n          }\n          setShowActiveMotionGeometry(false);\n          repaintPropertyEditor(setStore);\n\n          //console.log(`vertex onPointerUp uuid=${props.vertex.uuid} activeMotionTool=${activeMotionTool}`);\n          if (activeMotionTool === ToolID.ADD_LANE) {\n            // calculate if we released the pointer on an existing vertex\n            // if so, add a new lane between those vertices\n            //console.log(`activeUUID: ${activeUUID} props.vertex.uuid: ${props.vertex.uuid}`);\n            if (activeUUID !== props.vertex.uuid) {\n              addLane(activeUUID, props.vertex.uuid, props.level.uuid);\n            }\n          }\n          setActiveMotionTool(ToolID.NONE);\n        }}\n        onPointerMove={(event) => {\n          if (activeMotionTool === ToolID.NONE)\n            return;\n\n          event.stopPropagation();\n\n          let [mouse_x, mouse_y] = [0, 0];\n          if (editorMode === '2d') {\n            [mouse_x, mouse_y] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n          }\n          else if (editorMode === '3d') {\n            let intersection_point = new THREE.Vector3();\n            event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n            [mouse_x, mouse_y] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n          }\n          else {\n            return;\n          }\n\n          if (activeMotionTool === ToolID.MOVE) {\n            updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, mouse_x, mouse_y);\n          }\n          else if (activeMotionTool === ToolID.ADD_LANE) {\n            setShowActiveMotionGeometry(true);\n            setActiveMotionLinePoint([mouse_x - x, mouse_y - y]);\n          }\n        }}\n      >\n        <cylinderGeometry args={[vertexDiameter, vertexDiameter, 0.2, 16]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <Text color=\"blue\" position={[x, y, 0.36 + props.elevation]}>\n        {props.vertex.name}\n      </Text>\n      {showActiveMotionGeometry && <lineSegments position={[x, y, props.elevation + 0.3]}>\n        <bufferGeometry attach=\"geometry\" onUpdate={updateActiveMotionGeometry} />\n        <lineBasicMaterial attach=\"material\" color={'#000000'} linewidth={20} linecap={'round'} />\n      </lineSegments>}\n    </group>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorWall, setSelection } from './Store';\n\ninterface SceneWallProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  wall: EditorWall,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneWall(props: SceneWallProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.1, 0.1, 0.9);\n    if (selection && selection.uuid === props.wall.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.wall.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 1.0 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.wall.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.wall);\n      }}\n    >\n      <boxGeometry args={[len, 0.1, 2]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React, { Suspense } from 'react'\nimport { Level } from './Level';\nimport { SceneDoor } from './SceneDoor';\nimport { SceneFeature } from './SceneFeature';\nimport { SceneFloor } from './SceneFloor';\nimport { SceneLane } from './SceneLane';\nimport { SceneImage } from './SceneImage';\nimport { SceneMeasurement } from './SceneMeasurement';\nimport { SceneModel } from './SceneModel';\nimport { SceneVertex } from './SceneVertex';\nimport { SceneWall } from './SceneWall';\nimport { useStore } from './Store';\n\ntype SceneLevelProps = {\n  level: Level\n}\n\nexport function SceneLevel(props: SceneLevelProps): JSX.Element {\n  const z = props.level.elevation / 2;\n  useStore(state => state.selection);  // needed to ensure repaints after de-selection\n\n  return (\n    <group>\n      {props.level.models.map(model =>\n        <SceneModel\n          key={model.uuid}\n          model={model}\n          level={props.level}\n          level_uuid={props.level.uuid}\n          elevation={z} />)}\n\n      {props.level.vertices.map((vertex) =>\n        <SceneVertex\n          key={vertex.uuid}\n          vertex={vertex}\n          level={props.level}\n          level_uuid={props.level.uuid}\n          elevation={z} />)}\n\n      {props.level.features.map(feature =>\n        <SceneFeature\n          key={feature.uuid}\n          feature={feature}\n          level={props.level}\n          elevation={z} />)}\n\n      {props.level.walls.map((wall) =>\n        <SceneWall\n          key={wall.uuid}\n          wall={wall}\n          level={props.level}\n          vertex_start={props.level.vertices[wall.start_idx]}\n          vertex_end={props.level.vertices[wall.end_idx]}\n          elevation={z} />)}\n\n      {props.level.doors.map((door) =>\n        <SceneDoor\n          key={door.uuid}\n          door={door}\n          level={props.level}\n          vertex_start={props.level.vertices[door.start_idx]}\n          vertex_end={props.level.vertices[door.end_idx]}\n          elevation={z} />)}\n\n      {props.level.floors.map((floor) =>\n        <SceneFloor\n          key={floor.uuid}\n          floor={floor}\n          level={props.level}\n          vertices={floor.vertex_indices.map((idx) => props.level.vertices[idx])}\n          elevation={z} />)}\n\n      {props.level.lanes.map(lane =>\n        <SceneLane\n          key={lane.uuid}\n          lane={lane}\n          level={props.level}\n          vertex_start={props.level.vertices[lane.start_idx]}\n          vertex_end={props.level.vertices[lane.end_idx]}\n          elevation={z} />)}\n\n      <Suspense fallback={null}>\n        {props.level.images.filter(image => image.isLegacyDefaultImage).map(image =>\n          <SceneImage\n            key={image.uuid}\n            image={image}\n            level={props.level}\n            elevation={z} />)}\n      </Suspense>\n\n      {props.level.measurements.map(meas =>\n        <SceneMeasurement\n          key={meas.uuid}\n          measurement={meas}\n          level={props.level}\n          vertex_start={props.level.vertices[meas.start_idx]}\n          vertex_end={props.level.vertices[meas.end_idx]}\n          elevation={z} />)}\n    </group>\n  );\n}\n","import * as THREE from 'three'\nimport React from 'react'\nimport { useStore } from './Store';\nimport { SceneLevel } from './SceneLevel';\nimport { CoordinateSystem } from './Site';\nimport { useFrame } from '@react-three/fiber';\n\ntype SceneSiteProps = {\n}\n\nexport function SceneSite(props: SceneSiteProps): JSX.Element {\n  const site = useStore(state => state.site);\n  useStore(state => state.selection);  // needed to ensure repaints after de-selection\n  useStore(state => state.repaintCount);  // needed to ensure repaints after tweaks\n  const setStore = useStore(state => state.set);\n\n  useFrame(state => {\n    if (state.camera instanceof THREE.OrthographicCamera) {\n      const c: THREE.OrthographicCamera = state.camera as THREE.OrthographicCamera;\n      //const scale = 1000;\n      const center_x = c.matrixWorld.elements[12];\n      const center_y = c.matrixWorld.elements[13];\n      const center_z = c.matrixWorld.elements[14];\n      setStore(state => {\n        state.cameraPose = {\n          position: state.cameraPose.position.set(center_x, center_y, center_z),\n          target: state.cameraPose.target,\n          zoom: state.cameraPose.zoom,\n        };\n      });\n    }\n  });\n\n  return (\n    <group>\n      {(site.coordinate_system === CoordinateSystem.Legacy) && <pointLight position={[10, 10, 10]} />}\n      {site.levels.map((level) => <SceneLevel key={level.uuid} level={level} />)}\n    </group>\n  );\n}\n","import React from 'react';\nimport { Text } from '@react-three/drei'\nimport * as THREE from 'three'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\nimport { useStore, addVertex } from './Store';\nimport { ToolID } from './ToolID';\n\ntype SceneMapTileProps = {\n  x: number,\n  y: number,\n  zoom: number,\n}\n\nexport function SceneMapTile(props: SceneMapTileProps): JSX.Element {\n  const activeTool = useStore(state => state.activeTool);\n  const editorMode = useStore(state => state.editorMode);\n  //const site = useStore(state => state.site);\n  //const setStore = useStore(state => state.set);\n\n  const key = `${props.zoom}_${props.x}_${props.y}`;\n\n  // compute the world distance of a side of this tile\n  const scale = 1000;\n  const side_len = 1.000 * 256 * scale / Math.pow(2, props.zoom);\n\n  // compute the world x and y coords of the center of this tile\n  const wx = props.x * 256 * scale / Math.pow(2, props.zoom) + side_len / 2;\n  const wy = -1 * (props.y * 256 * scale / Math.pow(2, props.zoom) + side_len / 2);\n\n  const url = `https://tiles.demo.open-rmf.org/tiles/${props.zoom}/${props.x}/${props.y}.png`;\n  const [texture, setTexture] = React.useState<THREE.Texture>();\n  React.useEffect(() => { new TextureLoader().load(url, setTexture)}, [url]);\n  if (texture && props.zoom === 18) {\n    texture.magFilter = THREE.NearestFilter;\n    //texture.minFilter = THREE.NearestFilter;\n    //texture.encoding = THREE.LinearEncoding; // not sure why this is needed...\n    //texture.encoding = THREE.sRGBEncoding; // not sure why this is needed...\n  }\n\n  return (\n    <group>\n      <mesh\n        position={[wx, wy, 0]}\n        scale={1}\n        rotation={new THREE.Euler(0, 0, 0)}\n        key={key}\n        onPointerDown={event => {\n          event.stopPropagation();\n          if (activeTool === ToolID.ADD_VERTEX) {\n            if (editorMode === '2d') {\n              addVertex(event.unprojectedPoint.x, event.unprojectedPoint.y);\n              \n              /*\n              const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n              updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, px, py);\n              */\n            }\n            else {\n              /*\n              let intersection_point = new THREE.Vector3();\n              event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n              const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n              updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, px, py);\n              */\n            }\n          }\n        }}\n      >\n        <boxGeometry args={[side_len, side_len, 0.1, 8]} />\n        <meshStandardMaterial key={texture ? 'texture' : 'notexture'} map={texture} color={[1, 1, 1]} />\n      </mesh>\n    </group>\n  );\n}\n\n/*\n * debugging debris here...\n<Text fontSize={10 * scale / Math.pow(2, props.zoom)} color=\"blue\" position={[wx, wy, 10.2]}>\n  {key}\n</Text>\n */\n","import * as THREE from 'three'\nimport React from 'react';\n//import { useStore } from './Store';\nimport { useThree } from '@react-three/fiber';\nimport { SceneMapTile } from './SceneMapTile';\nimport { disableEditorTools } from './Store';\n\ntype SceneMapProps = {\n}\n\n/*\nfunction r(value: number): string {\n  return (value >= 0 ? '+' : '') + (Math.round(value * 10000) / 10000).toFixed(4);\n}\n\nfunction printMatrix(name: string, m: THREE.Matrix4) {\n  console.log(name);\n  const e = m.elements;\n  // it's stored column-major...\n  console.log(`${r(e[0])} ${r(e[4])} ${r(e[8])} ${r(e[12])}`);\n  console.log(`${r(e[1])} ${r(e[5])} ${r(e[9])} ${r(e[13])}`);\n  console.log(`${r(e[2])} ${r(e[6])} ${r(e[10])} ${r(e[14])}`);\n  console.log(`${r(e[3])} ${r(e[7])} ${r(e[11])} ${r(e[15])}`);\n}\n\nfunction printVector(name: string, v: THREE.Vector4) {\n  console.log(`${name}: ${r(v.x)} ${r(v.y)} ${r(v.z)} ${r(v.w)}`);\n}\n*/\n\nfunction clamp(v: number, v_min: number, v_max: number): number {\n  if (v < v_min)\n    return v_min;\n  else if (v > v_max)\n    return v_max;\n  return v;\n}\n\ntype TileDescription = {\n  x: number,\n  y: number,\n  zoom: number,\n}\n\nexport function SceneMap(props: SceneMapProps): JSX.Element {\n  const [tiles, setTiles] = React.useState<TileDescription[]>([]);\n  const viewport = useThree(state => state.viewport);\n  const camera = useThree(state => state.camera);\n  const canvasSize = useThree(state => state.size);\n  const currentPerformance = useThree(state => state.performance.current);\n\n  React.useEffect(() => {\n    // recalculate visible tiles after camera-control motion is completed\n    // in the future, could also have a useFrame() handler checking if \n    // currentPerformance is <1 to have the tiles recalculate while the\n    // motion is in-flight\n    if (currentPerformance === 1) {\n      //console.log('recalculate tiles');\n      if (camera instanceof THREE.OrthographicCamera) {\n        const c: THREE.OrthographicCamera = camera as THREE.OrthographicCamera;\n        /*\n        console.log(`orthographic camera: ${c.left} ${c.right}, ${c.top}, ${c.bottom}, ${c.zoom}`);\n        console.log(`  viewport: ${viewport.width}, ${viewport.height}`);\n        console.log(`  dpr: ${viewport.dpr}`);\n        console.log(`  aspect: ${viewport.aspect}`);\n        console.log(`  canvas size: ${canvasSize.width}, ${canvasSize.height}`);\n        printMatrix('projection', camera.projectionMatrix);\n        printMatrix('projectionMatrixInverse', camera.projectionMatrixInverse);\n        printMatrix('matrixWorld', camera.matrixWorld);\n        printMatrix('matrixWorldInverse', camera.matrixWorldInverse);\n         */\n        // find world-coordinate bounds of the viewport: web mercator (0, 0) => (256, -256)\n        const scale = 1000;\n\n        const center_x = camera.matrixWorld.elements[12];\n        const center_y = camera.matrixWorld.elements[13];\n        const right_x = (center_x + c.right / c.zoom);\n        const left_x = (center_x + c.left / c.zoom);\n        const top_y = -(center_y + c.top / c.zoom);\n        const bottom_y = -(center_y + c.bottom / c.zoom);\n        //console.log(`extents: (${r(left_x)}, ${r(top_y)}) - (${r(right_x)}, ${r(bottom_y)})`);\n\n        // calculate web mercator zoom level do put a few tiles on the screen\n        // todo: incorporate the number of pixels in the canvas; small resolutions don't need as many.\n        let zoom_level = Math.ceil(1.5 + Math.log(scale * 256 / (right_x - left_x)) / Math.log(2));\n        const MAX_ZOOM = 18;\n        if (zoom_level < 0)\n          zoom_level = 0;\n        else if (zoom_level > MAX_ZOOM)\n          zoom_level = MAX_ZOOM;\n        //console.log(`  zoom: ${zoom_level}`);\n\n        disableEditorTools(zoom_level < 17);\n\n        let left_x_grid_idx = Math.floor(left_x / (256 * scale) * Math.pow(2, zoom_level));\n        let right_x_grid_idx = Math.floor(right_x / (256 * scale) * Math.pow(2, zoom_level));\n        // invert Y since we're operating in 4th quadrant to keep +z = \"up\"\n        let top_y_grid_idx = Math.floor(top_y / (256 * scale) * Math.pow(2, zoom_level));\n        let bottom_y_grid_idx = Math.floor(bottom_y / (256 * scale) * Math.pow(2, zoom_level));\n        //console.log(`  grid: (${left_x_grid_idx}, ${top_y_grid_idx}) - (${right_x_grid_idx}, ${bottom_y_grid_idx})`);\n\n\n        //const PHI_MAX = 85.05112877980659;  // web mercator... 2*atan(e^pi) - pi/2\n        //let top_y_grid_idx = Math.pow(2, zoom_level) - 1 - Math.floor(1 / (2 * PHI_MAX) * Math.pow(2, zoom_level) * (top_y + PHI_MAX));\n        //let bottom_y_grid_idx = Math.pow(2, zoom_level) - 1 - Math.ceil(1 / (2 * PHI_MAX) * Math.pow(2, zoom_level) * (bottom_y + PHI_MAX));\n        //const bottom_y_grid_idx = Math.floor(1 / 360 * Math.pow(2, zoom_level) * (right_x + 180));\n\n        const max_cell = Math.pow(2, zoom_level) - 1;\n        left_x_grid_idx = clamp(left_x_grid_idx, 0, max_cell);\n        right_x_grid_idx = clamp(right_x_grid_idx, 0, max_cell);\n        top_y_grid_idx = clamp(top_y_grid_idx, 0, max_cell);\n        bottom_y_grid_idx = clamp(bottom_y_grid_idx, 0, max_cell);\n\n        /*\n        console.log(`horizontal ${left_x},${right_x} => ${left_x_grid_idx},${right_x_grid_idx}`);\n        console.log(`vertical ${bottom_y},${top_y} => ${bottom_y_grid_idx},${top_y_grid_idx}`);\n         */\n\n        let next_tiles = Array<TileDescription>();\n        for (let y_idx = top_y_grid_idx; y_idx <= bottom_y_grid_idx; y_idx++) {\n          for (let x_idx = left_x_grid_idx; x_idx <= right_x_grid_idx; x_idx++) {\n            //console.log(`looking for tile (${x_idx}, ${y_idx}, ${zoom_level})`);\n            //const tile_str = `${x_idx}_${y_idx}_${zoom_level}`;\n            const tile_desc = { x: x_idx, y: y_idx, zoom: zoom_level, visible: true };\n            next_tiles.push(tile_desc);\n          }\n        }\n        setTiles(next_tiles);\n        console.log('setTiles()');\n\n        /*\n        const upper_left = new THREE.Vector4(c.left, c.top, 0, 1);\n        upper_left.applyMatrix4(camera.projectionMatrix);\n        upper_left.applyMatrix4(camera.matrixWorld);\n        //const upper_left_cast: THREE.Vector4 = camera.matrixWorld * camera.projectionMatrix * upper_left;\n        printVector('upper_left', upper_left);\n         */\n      }\n    }\n  }, [currentPerformance, camera, viewport, canvasSize]);\n\n  /*\n  useFrame(state => {\n    //console.log(`viewport: ${state.viewport.width}, ${state.viewport.height}, ${state.viewport.factor}`);\n    //console.log(`camera: ${state.camera.projectionMatrix.elements}  ${state.camera.matrixWorld.elements}`);\n    //console.log(`viewport: ${state.viewport.width}, ${state.viewport.height}, ${state.viewport.factor}`);\n    //console.log(`camera class: ${typeof state.camera.constructor.name}`);\n  });\n  */\n\n  return (\n    <group>\n      {tiles.map(tile_desc =>\n        <SceneMapTile\n          x={tile_desc.x}\n          y={tile_desc.y}\n          zoom={tile_desc.zoom}\n          key={`${tile_desc.zoom}_${tile_desc.x}_${tile_desc.y}`}\n        />\n      )}\n    </group>\n  );\n}\n","import * as THREE from 'three';\nimport { Canvas } from '@react-three/fiber';\nimport React, { useRef } from 'react';\nimport { OrbitControls } from '@react-three/drei';\nimport { PerspectiveCamera, OrthographicCamera } from '@react-three/drei';\nimport { CoordinateSystem } from './Site';\n\nimport { useStore, clearSelection } from './Store';\nimport { SceneSite } from './SceneSite';\nimport { SceneMap } from './SceneMap';\n\ntype EditorSceneProps = {\n};\n\nexport function EditorScene(props: EditorSceneProps): JSX.Element {\n  const showMap = useStore(state => (state.site.coordinate_system !== CoordinateSystem.Legacy));\n  const setStore = useStore(state => state.set);\n  //const clearSelection = useStore(state => state.clearSelection);\n  const editorMode = useStore(state => state.editorMode);\n  const cameraInitialPose = useStore(state => state.cameraInitialPose);\n\n  const Controls = (): JSX.Element => {\n    THREE.Object3D.DefaultUp = new THREE.Vector3(0, 0, 1);\n    const perspective_camera = useRef<THREE.Camera>(null);\n    const orthographic_camera = useRef<THREE.Camera>(null);\n    const enableMotionControls = useStore(state => state.enableMotionControls);\n\n    // todo: there is probably a better way to do this than having two cameras\n    return (\n      <>\n        <PerspectiveCamera\n          ref={perspective_camera}\n          position={cameraInitialPose.position}\n          fov={60}\n          makeDefault={editorMode === '3d'}\n        />\n        <OrthographicCamera\n          ref={orthographic_camera}\n          position={[cameraInitialPose.target.x, cameraInitialPose.target.y, cameraInitialPose.target.z + 100]}\n          zoom={cameraInitialPose.zoom}\n          makeDefault={editorMode === '2d'}\n        />\n        {perspective_camera && orthographic_camera && <OrbitControls\n          enableDamping={false}\n          screenSpacePanning={editorMode === '3d' ? false : true}\n          target={cameraInitialPose.target}\n          camera={editorMode === '3d' ? perspective_camera.current! : orthographic_camera.current!}\n          maxPolarAngle={editorMode === '3d' ? Infinity : 0}\n          minAzimuthAngle={editorMode === '3d' ? -Infinity : 0}\n          maxAzimuthAngle={editorMode === '3d' ? Infinity : 0}\n          mouseButtons={{\n            LEFT: THREE.MOUSE.PAN,\n            MIDDLE: -1,\n            RIGHT: THREE.MOUSE.ROTATE,\n          }}\n          touches={{\n            ONE: THREE.TOUCH.PAN,\n            TWO: THREE.TOUCH.ROTATE\n          }}\n          enabled={enableMotionControls}\n          regress={true}\n        />}\n      </>\n    );\n  }\n\n  console.log('EditorScene()');\n  return (\n    <Canvas\n      frameloop=\"demand\"\n      mode=\"concurrent\"\n      linear={true}\n      onPointerMissed={() => {\n        clearSelection(setStore);\n      }}\n    >\n      <Controls />\n      <axesHelper />\n      <ambientLight intensity={1.0}/>\n      <SceneSite />\n      {showMap && <SceneMap />}\n\n    </Canvas>\n  )\n}\n/*\n      <Suspense fallback={null} >\n      <pointLight position={[10, 10, 10]} />\n      </Suspense>\n*/\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { useStore } from './Store';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  noSelectionDiv: {\n  },\n  table: {\n    padding: '0px',\n    margin: '0px'\n  },\n  tableHead: {\n  },\n  tableHeadRow: {\n    borderBottomStyle: 'solid',\n    borderBottom: '1px',\n    borderBottomColor: theme.palette.primary.main,\n  },\n  tableHeadCell: {\n    fontWeight: 'bold',\n    padding: '0px',\n    paddingLeft: '5px',\n  },\n  tableCell: {\n    padding: '0px',\n    paddingLeft: '5px',\n  }\n}));\n\n/*\n      <TableHead className={classes.tableHead}>\n        <TableRow className={classes.tableHeadRow}>\n          <TableCell className={classes.tableHeadCell}>Property Name</TableCell>\n          <TableCell className={classes.tableHeadCell}>Property Value</TableCell>\n        </TableRow>\n      </TableHead>\n */\n\nexport default function PropertyEditor(): JSX.Element {\n  const classes = useStyles();\n  const selection = useStore(state => state.selection);\n  useStore(state => state.propertyRepaintCount);  // repaint during tool moves\n\n  if (!selection) {\n    return (<div className={classes.noSelectionDiv}></div>);\n  }\n\n  return (\n    <Table className={classes.table}>\n      <TableHead>\n        <TableCell className={classes.tableHeadCell}>{selection.object_type_name}</TableCell>\n        <TableCell className={classes.tableHeadCell}></TableCell>\n      </TableHead>\n      <TableBody>\n        {selection.props.map(prop =>\n          <TableRow>\n            <TableCell className={classes.tableCell}>{prop.name}</TableCell>\n            <TableCell className={classes.tableCell}>{prop.get_value()}</TableCell>\n          </TableRow>\n        )}\n        {selection.params.map(param =>\n          <TableRow>\n            <TableCell className={classes.tableCell}>{param.name}</TableCell>\n            <TableCell className={classes.tableCell}>{param.value.toString()}</TableCell>\n          </TableRow>\n        )}\n      </TableBody>\n    </Table>\n  );\n}\n","import { useStore } from './Store';\nimport { Site } from './Site';\nimport YAML from 'yaml';\n\n\nexport function YAMLParser(yaml_text: string, url_base: string): Site {\n  const site = Site.fromYAML(yaml_text);\n  site.url_base = url_base;\n  const cameraInitialPose = site.computeInitialCameraPose();\n\n  useStore.setState({\n    site: site,\n    selection: null,\n    cameraInitialPose: cameraInitialPose\n  });\n\n  return site;\n}\n\nexport async function YAMLRetriever(url_base: string, resource_name: string): Promise<void> {\n  await fetch(url_base + resource_name)\n    .then(response => response.text())\n    .then(text => YAMLParser(text, url_base))\n}\n\nexport async function YAMLRetrieveDemo(name: string): Promise<void> {\n  await YAMLRetriever(\n    process.env.PUBLIC_URL + `/demos/${name}/`,\n    `${name}.building.yaml`);\n}\n\nexport async function YAMLSender(url: string): Promise<void> {\n  Object.getPrototypeOf(YAML.YAMLMap).maxFlowStringSingleLineLength = 10000;\n  const { site } = useStore.getState();\n  let yaml_text: string = site.toYAMLString();\n  let yaml_size = new Blob([yaml_text]).size;  // utf-8 encoding length\n  await fetch(url, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/x-yaml',\n      'content-length': yaml_size.toString(),\n    },\n    body: yaml_text,\n  });\n}\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MapIcon from '@material-ui/icons/Map';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { YAMLParser } from './YAMLParser';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  directoryButton: {\n    fontSize: theme.typography.h5.fontSize\n  },\n  filename: {\n    fontSize: theme.typography.h5.fontSize,\n    textDecoration: 'underline'\n  },\n  dialog: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\ntype OpenDialogProps = {\n  open: boolean;\n  onOpen: () => void; //filename: string, handle: FileSystemDirectoryHandle | undefined) => void;\n  onCancel: () => void;\n};\n\nexport default function OpenDialog(props: OpenDialogProps): JSX.Element {\n  const classes = useStyles(props);\n  const [buildingFileNames, setBuildingFileNames] = React.useState<string[]>([]);\n  const [directoryHandle, setDirectoryHandle] = React.useState<FileSystemDirectoryHandle>();\n\n  const onDirectoryClick = async () => {\n    setBuildingFileNames([]);\n    const handle = await window.showDirectoryPicker();\n    await setDirectoryHandle(handle);\n    for await (const entry of handle.values()) {\n      if (entry.name.endsWith('.building.yaml'))\n        setBuildingFileNames(previous => [...previous, entry.name]);\n    }\n  }\n\n  const loadFile = async(filename: string) => {\n    if (directoryHandle) {\n      const fileHandle = await directoryHandle.getFileHandle(filename);\n      const file = await fileHandle.getFile();\n      const text = await file.text();\n      YAMLParser(text, '');\n    }\n    props.onOpen();\n  }\n\n  const buildingFileList = () => {\n    if (buildingFileNames.length > 0)\n      return (\n        <div>\n          <List\n            subheader={\n              <ListSubheader component=\"div\">\n                Available Files\n              </ListSubheader>\n            }\n          >\n            {buildingFileNames.map((filename) =>\n              <ListItem button key={filename}>\n                <ListItemIcon>\n                  <MapIcon />\n                </ListItemIcon>\n                <ListItemText primary={filename} onClick={e => {loadFile(filename)}} />\n              </ListItem>)\n            }\n          </List>\n        </div>\n      );\n  }\n\n  return (\n    <Dialog open={props.open} onClose={props.onCancel}>\n      <DialogTitle>Open Building Map</DialogTitle>\n      <DialogContent className={classes.dialog}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onDirectoryClick}>\n          Select Directory...\n        </Button>\n        {buildingFileList()}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onCancel} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useCallback } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport { useStore, setEditorMode, clearSelection, setActiveTool } from './Store';\nimport { ToolID } from './ToolID';\nimport { Site } from './Site';\nimport OpenDialog from './OpenDialog';\nimport { YAMLRetriever, YAMLRetrieveDemo, YAMLSender } from './YAMLParser';\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\nimport PanToolIcon from '@material-ui/icons/PanTool';\n\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DirectionsCarIcon from '@material-ui/icons/DirectionsCar';\nimport TextureIcon from '@material-ui/icons/Texture'; \n\nimport * as THREE from 'three';\n\nconst StyledToggleButtonGroup = withStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(0.5),\n    marginRight: 5\n  },\n  grouped: {\n    //marginRight: theme.spacing(0.5),\n    //marginLeft: theme.spacing(0.5),\n    //margin: theme.spacing(0.5),\n    color: theme.palette.primary.contrastText,\n    //background: theme.palette.primary.dark,\n    \"&.Mui-selected:hover, &:hover\": {\n      background: theme.palette.primary.dark,\n    },\n    \"&.Mui-selected\": {\n      background: theme.palette.primary.dark,\n      color: theme.palette.primary.contrastText\n    },\n    /*\n    '&:not(:first-child)': {\n      borderRadius: '5px',\n    },\n    '&:first-child': {\n      borderRadius: '5px',\n    },\n    */\n  },\n}))(ToggleButtonGroup);\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  appTitle: {\n    marginRight: 20\n  },\n  filler: {\n    flex: 1\n  }\n}));\n\nexport default function MainMenu(props: React.PropsWithChildren<{}>): JSX.Element {\n  const classes = useStyles(props);\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState(null);\n  const [isOpenDialogOpen, setIsOpenDialogOpen] = React.useState(false);\n  const [snackOpen, setSnackOpen] = React.useState(false);\n  const [snackMessage, setSnackMessage] = React.useState('');\n  const [mapType, setMapType] = React.useState('');\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const activeTool = useStore(state => state.activeTool);\n  const disableEditorTools = useStore(state => state.disableEditorTools);\n\n  const onModeChange = (event: React.MouseEvent<HTMLElement>, newMode: string | null) => {\n    if (newMode !== null) {\n      if (editorMode === '2d') {\n        /*\n        const x = store.cameraPose.position.x;\n        const y = store.cameraPose.position.y;\n        console.log(`previous 2d center point: ${x}, ${y}`);\n         */\n        setStore(state => {\n          state.cameraInitialPose = {\n            position: new THREE.Vector3(state.cameraPose.position.x + 2, state.cameraPose.position.y - 2, 10),\n            target: new THREE.Vector3(state.cameraPose.position.x, state.cameraPose.position.y, 0),\n            zoom: 20,\n          };\n        });\n      }\n      setEditorMode(setStore, newMode);\n      clearSelection(setStore);\n    }\n  };\n\n  const onToolChange = (event: React.MouseEvent<HTMLElement>, newTool: ToolID | null) => {\n    if (newTool !== null) {\n      setActiveTool(newTool);\n      clearSelection(setStore);\n    }\n  }\n\n  const save = useCallback(\n    async () => {\n      if (mapType === 'local_file') {\n        setSnackMessage('Cannot save. Local file save not yet implemented.');\n        setSnackOpen(true);\n      }\n      else if (mapType === 'local_rest') {\n        try {\n          await YAMLSender('http://localhost:8000/map_file');\n        } catch (error) {\n          setSnackMessage('Error while saving to local REST server');\n          setSnackOpen(true);\n        }\n      }\n      else if (mapType === 'demo') {\n        setSnackMessage('Cannot save. Demo maps are read-only.');\n        setSnackOpen(true);\n      }\n      else {\n        setSnackMessage('Cannot save. No map loaded.');\n        setSnackOpen(true);\n      }\n    },\n    [mapType]\n  );\n\n  const snackClose = () => {\n    setSnackOpen(false);\n  }\n\n  React.useEffect(() => {\n    if (disableEditorTools)\n      return;\n\n    const keyDown = (event: KeyboardEvent) => {\n      let key = event.key.toLowerCase();\n      if (key === 'm') {\n        setActiveTool(ToolID.MOVE);\n        clearSelection(setStore);\n      } else if (key === 'escape') {\n        setActiveTool(ToolID.SELECT);\n        clearSelection(setStore);\n      } else if (key === 'v') {\n        setActiveTool(ToolID.ADD_VERTEX);\n        clearSelection(setStore);\n      } else if (key === 'l') {\n        setActiveTool(ToolID.ADD_LANE);\n        clearSelection(setStore);\n      } else if (key === 's' && event.ctrlKey) {\n        event.preventDefault();\n        save();\n        return false;\n      }\n    };\n\n    window.addEventListener('keydown', keyDown);\n    return () => {\n      window.removeEventListener('keydown', keyDown);\n    };\n  }, [setStore, save, disableEditorTools]);\n\n  React.useEffect(() => {\n    setStore(state => {\n      state.enableMotionControls = (activeTool === ToolID.SELECT);\n    });\n  }, [activeTool, setStore]);\n\n  return (\n    <AppBar position=\"fixed\">\n      <ToolBar>\n        <IconButton\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"Menu\"\n          onClick={(e: any) => { setMenuAnchorEl(e.currentTarget); }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          keepMounted\n          anchorEl={menuAnchorEl}\n          open={Boolean(menuAnchorEl)}\n          onClose={() => setMenuAnchorEl(null)}\n          getContentAnchorEl={null}\n          anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\n          transformOrigin={{vertical: 'top', horizontal: 'center'}}\n          transitionDuration={0.0}\n        >\n          <MenuItem\n            onClick={() => {\n              const site = Site.fromNewCommand();\n              const cameraInitialPose = site.computeInitialCameraPose();\n              useStore.setState({\n                site: site,\n                selection: null,\n                cameraInitialPose: cameraInitialPose,\n              });\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <InsertDriveFileIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Create new geo-located site\n            </ListItemText>\n          </MenuItem>\n          <Divider />\n          <MenuItem\n            onClick={async () => {\n              try {\n                await YAMLRetriever('http://localhost:8000/', 'map_file');\n                setMapType('local_rest');\n              } catch (error) {\n                setSnackMessage('could not open file from localhost:8000');\n                setSnackOpen(true);\n              }\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open map from localhost:8000\n            </ListItemText>\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              await YAMLRetrieveDemo('office');\n              setMapType('demo');\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open demo map\n            </ListItemText>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              setIsOpenDialogOpen(true);\n              setMapType('local_file');\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open map from local file...\n            </ListItemText>\n          </MenuItem>\n          <Divider />\n          <MenuItem\n            onClick={() => {\n              save();\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <SaveIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Save\n            </ListItemText>\n          </MenuItem>\n        </Menu>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.appTitle}>\n          Traffic Editor\n        </Typography>\n        <div className={classes.filler} />\n        <StyledToggleButtonGroup\n          value={activeTool}\n          size=\"small\"\n          exclusive\n          onChange={onToolChange}\n          aria-label=\"tool\"\n        >\n          <ToggleButton value={ToolID.SELECT}>\n            <Tooltip title=\"Select tool [Escape]\">\n              <PanToolIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={ToolID.MOVE} disabled={disableEditorTools}>\n            <Tooltip title=\"Move tool [M]\">\n              <OpenWithIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={ToolID.ADD_VERTEX} disabled={disableEditorTools}>\n            <Tooltip title=\"Add vertex [V]\">\n              <AddCircleIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={ToolID.ADD_LANE} disabled={disableEditorTools}>\n            <Tooltip title=\"Add lane [L]\">\n              <DirectionsCarIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={ToolID.ADD_WALL} disabled={disableEditorTools}>\n            <Tooltip title=\"Add wall [W]\">\n              <TextureIcon />\n            </Tooltip>\n          </ToggleButton>\n        </StyledToggleButtonGroup>\n        <StyledToggleButtonGroup\n          value={editorMode}\n          size=\"small\"\n          exclusive\n          onChange={onModeChange}\n          aria-label=\"editor mode\"\n        >\n          <ToggleButton value=\"3d\">\n            3D\n          </ToggleButton>\n          <ToggleButton value=\"2d\">\n            2D\n          </ToggleButton>\n        </StyledToggleButtonGroup>\n      </ToolBar>\n      <OpenDialog\n        open={isOpenDialogOpen}\n        onOpen={() => setIsOpenDialogOpen(false)}\n        onCancel={() => setIsOpenDialogOpen(false)}\n      />\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        open={snackOpen}\n        onClose={snackClose}\n        autoHideDuration={2000}\n        transitionDuration={0}\n        TransitionProps={{\n          appear: false,\n        }}\n        action={\n          <React.Fragment>\n            <IconButton onClick={snackClose}>\n              <CloseIcon />\n            </IconButton>\n          </React.Fragment>\n        }\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={snackClose}>\n          {snackMessage}\n        </MuiAlert>\n      </Snackbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport { SiteTreeView } from './SiteTreeView';\nimport { EditorScene } from './EditorScene';\nimport PropertyEditor from './PropertyEditor';\nimport MainMenu from './MainMenu';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    minHeight: '100vh',\n  },\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar,\n  workingArea: {\n    backgroundColor: \"black\",\n    height: `calc(100vh - 64px)`,\n  },\n  gridLeftColumn: {\n    borderRight: '5px',\n    borderRightStyle: 'solid',\n    borderRightColor: theme.palette.primary.main,\n  },\n  propertyGridItem: {\n    borderTop: '5px',\n    borderTopStyle: 'solid',\n    borderTopColor: theme.palette.primary.main,\n  }\n}));\n\nexport default function App(props: React.PropsWithChildren<{}>): JSX.Element {\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes.root}>\n      <MainMenu />\n      <div className={classes.toolbarMargin} />\n      <Grid container spacing={0}>\n        <Grid className={classes.gridLeftColumn} container xs={3} direction=\"column\" spacing={0}>\n          <Grid item style={{height: '40vh', overflow: 'auto'}}>\n            <SiteTreeView />\n          </Grid>\n          <Grid item className={classes.propertyGridItem} style={{height: '40vh', overflow: 'auto'}}>\n            <PropertyEditor />\n          </Grid>\n        </Grid>\n        <Grid item xs={9} className={classes.workingArea}>\n          <EditorScene />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}