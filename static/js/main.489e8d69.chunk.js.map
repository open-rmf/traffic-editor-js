{"version":3,"sources":["CoordinateSystem.ts","EditorParam.ts","EditorObject.ts","EditorProp.ts","Lane.ts","Vertex.ts","Feature.ts","Level.ts","ToolID.ts","Graph.ts","Site.ts","YAMLParser.ts","Store.ts","SiteTreeView.tsx","SceneDoor.tsx","SceneFeature.tsx","SceneFloor.tsx","SceneLane.tsx","SceneImage.tsx","SceneMeasurement.tsx","SceneModel.tsx","SceneVertex.tsx","SceneWall.tsx","SceneLevel.tsx","SceneRobot.tsx","SceneSite.tsx","SceneMapTile.tsx","SceneMap.tsx","ShortcutKeys.tsx","EditorScene.tsx","PropertyEditorParam.tsx","PropertyEditorProp.tsx","PropertyEditor.tsx","OpenDialog.tsx","NewDialog.tsx","MqttDialog.tsx","MainMenu.tsx","App.tsx","index.tsx"],"names":["CoordinateSystem","EditorParam","type_idx","name","value","uuid","optional","_name","data","p","generate_uuid","EditorObject","params","props","object_type_name","params_yaml","param_name","paramFromYaml","fromYAML","found","map","param","push","node","YAML","YAMLMap","this","param_value_node","YAMLSeq","add","flow","key","defaultValue","Math","round","EditorProp","_getter","_setter","undefined","get_value","set_value","v","canModify","Lane","start_idx","end_idx","graph_idx","paramsToYAML","addParam","lane","length","paramsFromYAML","Vertex","x","y","s","roundNicely","R","meters_north","PI","atan","exp","coord_scale","vertex","Feature","feature","CoordinateSystemToString","cs","Legacy","CartesianMeters","WebMercator","CoordinateSystemScale","ToolID","Level","elevation","scale","doors","vertices","walls","measurements","floors","lanes","models","images","features","constraints","coordinateSystem","constraint","toYAML","door","isLegacyDefaultImage","filename","console","log","floor","layers_node","image","toLayerYAML","measurement","model","wall","sum","count","meas","dx","dy","d_pixels","sqrt","distance","_coordinateSystem","level","EditorImage","layer_name","EditorConstraint","EditorDoor","EditorFloor","fromLayerYAML","EditorModel","EditorMeasurement","EditorWall","calculateScale","Graph","id","default_lane_width","graph","Site","url_base","levels","graphs","reference_level_name","yaml_doc","Document","save","levels_node","get","lifts_node","toString","lineWidth","minContentWidth","vec_min","THREE","Infinity","vec_max","bb","computeBoundingBox","cx","min","max","cy","transformPoint","t_cx","t_cy","target","position","z","zoom","site","yaml_text","yaml","parse","graph_id","Undefined","CoordinateSystemFromString","level_name","level_data","parseDocument","YAMLParser","cameraInitialPose","computeInitialCameraPose","useStore","setState","selection","YAMLRetriever","resource_name","a","fetch","then","response","text","YAMLRetrieveDemo","process","YAMLSender","url","Object","getPrototypeOf","maxFlowStringSingleLineLength","getState","toYAMLString","yaml_size","Blob","size","method","headers","body","vertex_indices","vertices_node","vertex_index","vertex_idx","offset","yaw","color","visible","blob","color_node","transform_node","_blob","feature_yaml","ids","model_name","instance_name","is_static","create","set","editorMode","enableMotionControls","activeTool","SELECT","activeMotionTool","NONE","propertyRepaintCount","repaintCount","disableEditorTools","activeUUID","cameraPose","fn","produce","mqtt_client","mqtt_robot_telemetry","mapType","setSelection","zoomTo","getCenterXY","pose","clearSelection","setStore","state","setActiveTool","newTool","setActiveMotionTool","repaintPropertyEditor","updateModelPoint","level_uuid","model_uuid","updateFeaturePoint","feature_level","feature_uuid","saveStore","FeatureTreeItem","TreeItem","nodeId","label","onClick","event","GraphTreeItem","ModelTreeItem","ConstraintTreeItem","substring","ParamTreeItem","DoorTreeItem","ImageTreeItem","FloorTreeItem","idx","join","WallTreeItem","MeasurementTreeItem","LaneTreeItem","VertexTreeItem","LevelTreeItem","SiteTreeView","style","margin","TreeView","defaultCollapseIcon","defaultExpandIcon","SceneDoor","v1","vertex_start","v2","vertex_end","len","xyrot","atan2","React","useMemo","setRGB","rotation","stopPropagation","args","SceneFeature","isMoveToolActive","MOVE","useState","dragActive","setDragActive","onPointerDown","setPointerCapture","pointerId","onPointerUp","releasePointerCapture","onPointerMove","inverseTransformPoint","unprojectedPoint","px","py","intersection_point","ray","intersectPlane","Text","SceneFloor","shape","started","t_x","t_y","lineTo","moveTo","v0_x","v0_y","SceneLane","width","height","isBidirectional","getParam","uvRef","useRef","uvs","Float32Array","texture","useLoader","TextureLoader","wrapS","wrapT","geometry","update","useCallback","parent","attributes","uv","needsUpdate","transparent","opacity","ref","attachObject","itemSize","array","onUpdate","SceneImage","width_meters","height_meters","magFilter","minFilter","SceneMeasurement","SceneModel","SceneVertex","captureTools","ADD_LANE","ADD_WALL","activeMotionLinePoint","setActiveMotionLinePoint","showActiveMotionGeometry","setShowActiveMotionGeometry","updateActiveMotionGeometry","self","setFromPoints","radius","newUUID","includes","start_uuid","end_uuid","i","addDefaultParams","addLane","addWall","mouse_x","mouse_y","vertex_uuid","updateVertexPoint","fontSize","attach","linewidth","linecap","SceneWall","SceneLevel","fallback","filter","SceneRobot","color_pointer","color_text","heading","telemetry","pointer_x","cos","pointer_y","sin","SceneSite","robots","useThree","scene","background","useFrame","camera","c","center_x","matrixWorld","elements","center_y","center_z","robot","SceneMapTile","side_len","pow","wx","wy","setTexture","useEffect","load","ADD_VERTEX","addVertex","clamp","v_min","v_max","SceneMap","tiles","setTiles","viewport","canvasSize","currentPerformance","performance","current","right_x","right","left_x","left","top_y","top","bottom_y","bottom","zoom_level","ceil","disable","left_x_grid_idx","right_x_grid_idx","top_y_grid_idx","bottom_y_grid_idx","max_cell","next_tiles","Array","y_idx","x_idx","tile_desc","ShortcutKeys","canvas","gl","domElement","tabIndex","keyDown","toLowerCase","addEventListener","removeEventListener","EditorScene","showMap","Controls","DefaultUp","perspective_camera","orthographic_camera","PerspectiveCamera","fov","makeDefault","OrthographicCamera","OrbitControls","enableDamping","screenSpacePanning","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","mouseButtons","LEFT","PAN","MIDDLE","RIGHT","ROTATE","touches","ONE","TWO","enabled","regress","frameloop","mode","linear","onPointerMissed","intensity","PropertyEditorParam","checked","setChecked","stringValue","setStringValue","string_field","Checkbox","onChange","TextField","inputRef","variant","PropertyEditorProp","field","prop","setValue","useStyles","makeStyles","theme","noSelectionDiv","table","padding","tableHead","tableHeadRow","borderBottomStyle","borderBottom","borderBottomColor","palette","primary","main","tableHeadCell","fontWeight","paddingLeft","tableCell","PropertyEditor","classes","Table","className","TableHead","TableCell","TableBody","TableRow","directoryButton","typography","h5","textDecoration","dialog","backgroundColor","paper","OpenDialog","buildingFileNames","setBuildingFileNames","directoryHandle","setDirectoryHandle","onDirectoryClick","window","showDirectoryPicker","handle","entry","endsWith","previous","values","loadFile","getFileHandle","fileHandle","getFile","file","createWritable","writable","write","close","onOpen","Dialog","open","onClose","onCancel","DialogTitle","DialogContent","Button","List","subheader","ListSubheader","component","ListItem","button","ListItemIcon","ListItemText","e","buildingFileList","DialogActions","spacing","NewDialog","site_name","isFileSystemAccessible","fromNewCommand","broker_host","broker_port","type","client","mqtt","connect","on","subscribe","topic","payload","packet","topic_tokens","split","robot_name","telemetry_payload","JSON","lat_webm","lat_radians","lon_webm","tan","found_robot","updated_robot","robot_telemetry","StyledToggleButtonGroup","withStyles","root","light","marginRight","grouped","contrastText","dark","ToggleButtonGroup","flex","menuButton","marginLeft","appTitle","filler","MainMenu","menuAnchorEl","setMenuAnchorEl","isOpenDialogOpen","setIsOpenDialogOpen","isNewDialogOpen","setIsNewDialogOpen","isMqttDialogOpen","setIsMqttDialogOpen","snackOpen","setSnackOpen","snackMessage","setSnackMessage","ctrlKey","preventDefault","snackClose","AppBar","IconButton","aria-label","currentTarget","keepMounted","anchorEl","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","transitionDuration","MenuItem","Divider","Typography","exclusive","ToggleButton","Tooltip","title","disabled","newMode","setEditorMode","onNew","Snackbar","autoHideDuration","TransitionProps","appear","action","Fragment","severity","flexGrow","minHeight","toolbarMargin","mixins","toolbar","workingArea","gridLeftColumn","borderRight","borderRightStyle","borderRightColor","propertyGridItem","borderTop","borderTopStyle","borderTopColor","App","Grid","container","xs","direction","item","overflow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.489e8d69.chunk.js","sourcesContent":["export enum CoordinateSystem {\n  Undefined = 0,\n  Legacy = 1,\n  CartesianMeters = 2,\n  WebMercator = 3,\n}\n\n// Wanted to have these functions inside a CoordinateSystem\n// namespace, but this triggers @typescript-eslint/no-redeclare\n// so I'll just prefix the function names below. Not sure\n// if there is a nicer way to do this.\n\nexport function CoordinateSystemToString(cs: CoordinateSystem): string {\n  if (cs === CoordinateSystem.Legacy) {\n    return \"legacy\";\n  }\n  else if (cs === CoordinateSystem.CartesianMeters) {\n    return \"cartesian_meters\";\n  }\n  else if (cs === CoordinateSystem.WebMercator) {\n    return \"web_mercator\";\n  }\n  else {\n    return \"unknown\";\n  }\n}\n\nexport function CoordinateSystemFromString(s: string): CoordinateSystem {\n  let cs: CoordinateSystem = CoordinateSystem.Undefined;\n  if (s === \"legacy\") {\n    cs = CoordinateSystem.Legacy;\n  }\n  else if (s === \"cartesian_meters\") {\n    cs = CoordinateSystem.CartesianMeters;\n  }\n  else if (s === \"web_mercator\") {\n    cs = CoordinateSystem.WebMercator;\n  }\n  else {\n    console.log(\"AHHHHH unknown coordinate system: \" + s);\n  }\n  return cs;\n}\n\nexport function CoordinateSystemScale(cs: CoordinateSystem): [number, number] {\n  if (cs === CoordinateSystem.Legacy) {\n    return [1.0, -1.0];\n  }\n  else if (cs === CoordinateSystem.CartesianMeters) {\n    return [1.0, 1.0];\n  }\n  else if (cs === CoordinateSystem.WebMercator) {\n    return [1000.0, 1000.0];\n  }\n  else {\n    return [1.0, 1.0];\n  }\n}\n","//import YAML from 'yaml'\nimport { v4 as generate_uuid } from 'uuid'\n\nexport class EditorParam {\n  type_idx: number = 0;\n  name: string = '';\n  value: any = 0;\n  uuid: string = '';\n  optional: boolean = false;\n\n  static fromYAML(_name: string, data: any): EditorParam {\n    let p = new EditorParam();\n    p.name = _name;\n    p.type_idx = data[0];\n    p.value = data[1];\n    p.uuid = generate_uuid();\n    p.optional = false;\n    return p;\n  }\n}\n","import YAML from 'yaml'\nimport { EditorParam } from './EditorParam';\nimport { EditorProp } from './EditorProp';\nimport { v4 as generate_uuid } from 'uuid'\n\nexport abstract class EditorObject {\n  uuid: string = '';\n  params: EditorParam[] = [];\n  props: EditorProp[] = [];\n  object_type_name: string = '';\n\n  paramsFromYAML(params_yaml: any): void {\n    for (const param_name in params_yaml) {\n      const paramFromYaml = EditorParam.fromYAML(\n        param_name,\n        params_yaml[param_name]);\n\n      // see if this param already exists as an \"optional\" one,\n      // and set it if it's already there\n      let found = false;\n      this.params = this.params.map(param => {\n        if (param.name === param_name) {\n          found = true;\n          return paramFromYaml;\n        }\n        else {\n          return param;\n        }\n      });\n\n      if (!found) {\n        this.params.push(paramFromYaml);\n      }\n    }\n  }\n\n  paramsToYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    for (const param of this.params) {\n      if (param.optional && param.value === '') {\n        continue;  // skip optional params that are empty strings\n      }\n      let param_value_node = new YAML.YAMLSeq();\n      param_value_node.add(param.type_idx);\n      param_value_node.add(param.value);\n      param_value_node.flow = true;\n      node.add({ key: param.name, value: param_value_node });\n    }\n    node.flow = true;\n    return node;\n  }\n\n  static roundNicely(value: number): number {\n    return Math.round(value * 1000) / 1000;\n  }\n\n  getParam<Type>(name: string, defaultValue: Type): Type {\n    for (const param of this.params) {\n      if (param.name === name) {\n        return param.value;\n      }\n    }\n    return defaultValue;\n  }\n\n  addParam<Type>(\n    name: string,\n    value: Type,\n    type_idx: number,\n    optional: boolean): void {\n\n    let param = new EditorParam();\n    param.uuid = generate_uuid();\n    param.name = name;\n    param.value = value;\n    param.type_idx = type_idx;\n    param.optional = optional;\n    this.params = [...this.params, param];\n  }\n\n  abstract getCenterXY(): [number, number];\n}\n","import { v4 as generate_uuid } from 'uuid'\n\nexport class EditorProp {\n  name: string = '';\n  get_value: () => any = () => '';\n  set_value: (_: any) => void = (v: any) => { };\n  canModify: boolean = false;\n  uuid: string = '';\n\n  constructor(_name: string, _getter: () => any, _setter: ((v: any) => void) | undefined = undefined) {\n    this.name = _name;\n    this.get_value = _getter;\n    this.uuid = generate_uuid();\n    if (_setter !== undefined) {\n      this.set_value = _setter;\n      this.canModify = true;\n    }\n  }\n}\n","import { EditorObject } from './EditorObject';\nimport { v4 as generate_uuid } from 'uuid';\nimport YAML from 'yaml';\n\nexport class Lane extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n  graph_idx: number = 0;  // todo: parse this\n\n  static fromYAML(data: any): Lane {\n    let lane = new Lane();\n    lane.object_type_name = 'Lane';\n    lane.uuid = generate_uuid();\n    lane.start_idx = data[0];\n    lane.end_idx = data[1];\n    if (data.length > 2) {\n      lane.paramsFromYAML(data[2]);\n    }\n    return lane;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n\n  addDefaultParams(): void {\n    this.addParam('bidirectional', false, 4, false);\n    this.addParam('graph_idx', 0, 2, false);\n  }\n\n  getCenterXY(): [number, number] {\n    return [0, 0];  // todo: look up vertices somehow\n  }\n}\n","import { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport { v4 as generate_uuid } from 'uuid';\nimport YAML from 'yaml';\n\nexport class Vertex extends EditorObject {\n  x: number = 0;\n  y: number = 0;\n  name: string = '';\n\n  constructor() {\n    super();\n    this.props.push(\n      new EditorProp(\n        'name',\n        () => this.name,\n        (s: string) => { this.name = s; }));\n    this.props.push(new EditorProp('x', () => { return EditorObject.roundNicely(this.x)} ));\n    this.props.push(new EditorProp('y', () => { return EditorObject.roundNicely(this.y)} ));\n\n    this.props.push(new EditorProp('lat', () => {\n      const R = 6378137;\n      const meters_north = R * Math.PI * (128 + this.y / 1000) / 128;\n      //let lat = meters_north / R * 180 / Math.PI;\n      const lat = 180 / Math.PI * (2 * Math.atan(Math.exp(meters_north / R)) - Math.PI / 2);\n      return lat;\n    }));\n\n    this.props.push(new EditorProp('lon', () => {\n      return ((this.x / 1000) - 128) / 128 * 180;\n    }));\n\n    // add a few \"optional\" params that we only save if non-empty:\n    this.addParam<string>('spawn_robot_type', '', 1, true);\n    this.addParam<string>('spawn_robot_name', '', 1, true);\n  }\n\n  static fromYAML(data: any, coord_scale: [number, number]): Vertex {\n    let vertex = new Vertex();\n    vertex.object_type_name = 'Vertex';\n    vertex.uuid = generate_uuid();\n    vertex.x = data[0] * coord_scale[0];\n    vertex.y = data[1] * coord_scale[1];\n    vertex.name = data[3];\n    if (data.length > 4) {\n      vertex.paramsFromYAML(data[4]);\n    }\n\n    return vertex;\n  }\n\n  toYAML(coord_scale: [number, number]): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.x / coord_scale[0]);\n    node.add(this.y / coord_scale[1]);\n    node.add(0.0);\n    node.add(this.name);\n    if (this.params.length) {\n      node.add(this.paramsToYAML());\n    }\n    node.flow = true;\n    return node;\n  }\n\n  addDefaultParams(): void {\n    this.addParam('is_charger', false, 4, false);\n    this.addParam('is_parking_spot', false, 4, false);\n    this.addParam('is_holding_point', false, 4, false);\n  }\n\n  getCenterXY(): [number, number] {\n    return [this.x, this.y];\n  }\n}\n","import { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport YAML from 'yaml';\n//import { v4 as generate_uuid } from 'uuid';\n\nexport class Feature extends EditorObject {\n  name: string = '';\n  x: number = 0;\n  y: number = 0;\n\n  static fromYAML(data: any, coord_scale: [number, number]): Feature {\n    let feature = new Feature();\n    feature.object_type_name = 'Feature';\n    feature.uuid = data['id'];\n    feature.name = data['name'];\n    feature.x = data['x'] * coord_scale[0];\n    feature.y = data['y'] * coord_scale[1];\n\n    feature.props.push(new EditorProp('name', () => feature.name));\n    feature.props.push(new EditorProp('x', () => { return EditorObject.roundNicely(feature.x)} ));\n    feature.props.push(new EditorProp('y', () => { return EditorObject.roundNicely(feature.y)} ));\n\n    return feature;\n  }\n\n  toYAML(coord_scale: [number, number]): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'id', value: this.uuid });\n    node.add({ key: 'name', value: this.name });\n    node.add({ key: 'x', value: this.x / coord_scale[0] });\n    node.add({ key: 'y', value: this.y / coord_scale[1] });\n    node.flow = true;\n    return node;\n  }\n\n  getCenterXY(): [number, number] {\n    return [this.x, this.y];\n  }\n}\n","import YAML from 'yaml';\nimport { v4 as generate_uuid } from 'uuid';\nimport { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport { Lane } from './Lane';\nimport { Vertex } from './Vertex';\nimport { Feature } from './Feature';\nimport {\n  CoordinateSystem,\n  CoordinateSystemToString,\n  CoordinateSystemScale\n} from './CoordinateSystem';\n\n//import { EditorParam } from './EditorParam';\nimport {\n  EditorDoor,\n  EditorWall,\n  EditorMeasurement,\n  EditorFloor,\n  EditorImage,\n  EditorModel,\n  EditorConstraint\n} from './Store';\n\nexport class Level extends EditorObject {\n  name: string = '';\n  elevation: number = 0;\n  scale: number = 1.234;\n  doors: EditorDoor[] = [];\n  vertices: Vertex[] = [];\n  walls: EditorWall[] = [];\n  measurements: EditorMeasurement[] = [];\n  floors: EditorFloor[] = [];\n  lanes: Lane[] = [];\n  models: EditorModel[] = [];\n  images: EditorImage[] = [];\n  features: Feature[] = [];\n  constraints: EditorConstraint[] = [];\n  coordinateSystem: CoordinateSystem = CoordinateSystem.Legacy;\n\n  constructor() {\n    super();\n    this.props.push(new EditorProp('name', () => this.name));\n    this.props.push(new EditorProp('elevation', () => this.elevation));\n    this.props.push(new EditorProp('scale', () => this.scale));\n    this.props.push(new EditorProp('coordinates', () => CoordinateSystemToString(this.coordinateSystem)));\n  }\n\n  static fromYAML(_name: string, data: any, _coordinateSystem: CoordinateSystem): Level {\n    let level = new Level();\n    level.object_type_name = 'Level';\n    level.uuid = generate_uuid();\n    level.name = _name;\n    level.coordinateSystem = _coordinateSystem;\n\n    const coord_scale = CoordinateSystemScale(level.coordinateSystem);\n\n    if (data['drawing'] && data['drawing']['filename']) {\n      let image = new EditorImage();\n      image.uuid = generate_uuid();\n      image.filename = data['drawing']['filename'];\n      image.isLegacyDefaultImage = true;\n      level.images.push(image);\n    }\n\n    if (data['elevation']) {\n      level.elevation = data['elevation'];\n    }\n\n    if (data['constraints']) {\n      level.constraints = data['constraints'].map((constraint: any) => EditorConstraint.fromYAML(constraint));\n    }\n\n    if (data['doors']) {\n      level.doors = data['doors'].map((door: any) => EditorDoor.fromYAML(door));\n    }\n\n    if (data['features']) {\n      level.features = data['features'].map((feature: any) => Feature.fromYAML(feature, coord_scale));\n    }\n\n    if (data['floors']) {\n      level.floors = data['floors'].map((floor: any) => EditorFloor.fromYAML(floor));\n    }\n\n    for (const layer_name in data['layers']) {\n      level.images.push(EditorImage.fromLayerYAML(layer_name, data['layers'][layer_name]));\n    }\n\n    if (data['lanes']) {\n      level.lanes = data['lanes'].map((lane: any) => Lane.fromYAML(lane));\n    }\n\n    if (data['models']) {\n      level.models = data['models'].map((model: any) => EditorModel.fromYAML(model));\n    }\n\n    if (data['measurements']) {\n      level.measurements = data['measurements'].map((measurement: any) => EditorMeasurement.fromYAML(measurement));\n    }\n\n    if (data['vertices']) {\n      level.vertices = data['vertices'].map((vertex: any) => Vertex.fromYAML(vertex, coord_scale));\n    }\n\n    if (data['walls']) {\n      level.walls = data['walls'].map((wall: any) => EditorWall.fromYAML(wall));\n    }\n\n    // if we're in the web_mercator system, we need to scale everything\n    // up by 1000 so that we can use OrbitControls out-of-the-box\n\n    level.calculateScale();\n\n    return level;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n\n    node.add({ key: 'constraints', value: this.constraints.map(constraint => constraint.toYAML()) });\n    node.add({ key: 'doors', value: this.doors.map(door => door.toYAML()) });\n\n    if (this.images.length > 0 && this.images[0].isLegacyDefaultImage) {\n      node.add({ key: 'drawing', value: { 'filename': this.images[0].filename } });\n    }\n\n    const coord_scale = CoordinateSystemScale(this.coordinateSystem);\n    console.log(`Level.toYAML() coord_scale = ${coord_scale}`);\n\n    node.add({ key: 'elevation', value: this.elevation });\n    node.add({ key: 'features', value: this.features.map(feature => feature.toYAML(coord_scale)) });\n    node.add({ key: 'flattened_x_offset', value: 0 });\n    node.add({ key: 'flattened_y_offset', value: 0 });\n    node.add({ key: 'floors', value: this.floors.map(floor => floor.toYAML()) });\n    node.add({ key: 'lanes', value: this.lanes.map(lane => lane.toYAML()) });\n\n    let layers_node = new YAML.YAMLMap();\n    for (const image of this.images) {\n      if (!image.isLegacyDefaultImage) {\n        layers_node.add({ key: image.name, value: image.toLayerYAML() });\n      }\n    }\n    node.add({ key: 'layers', value: layers_node });\n    node.add({ key: 'measurements', value: this.measurements.map(measurement => measurement.toYAML()) });\n    node.add({ key: 'models', value: this.models.map(model => model.toYAML()) });\n\n    node.add({ key: 'vertices', value: this.vertices.map(vertex => vertex.toYAML(coord_scale)) });\n\n    node.add({ key: 'walls', value: this.walls.map(wall => wall.toYAML()) });\n    return node;\n  }\n\n  calculateScale(): void {\n    // if the coordinate system is defined as \"Legacy\", that means it's\n    // scaled relative to pixels of some \"reference\" image.\n    if (this.coordinateSystem === CoordinateSystem.Legacy) {\n      let sum = 0.0;\n      let count = 0;\n      for (const meas of this.measurements) {\n        count++;\n        const dx = this.vertices[meas.start_idx].x - this.vertices[meas.end_idx].x;\n        const dy = this.vertices[meas.start_idx].y - this.vertices[meas.end_idx].y;\n        const d_pixels = Math.sqrt(dx*dx + dy*dy);\n        sum += meas.distance / d_pixels;\n      }\n\n      if (count > 0) {\n        this.scale = sum / count;\n      }\n      else {\n        this.scale = 0.05;  // just use something sane...\n      }\n    }\n    else {\n      // other coordinate systems don't need this arbitrary pixel-scaling.\n      this.scale = 1.0;\n    }\n  }\n\n  transformPoint(x: number, y: number): [number, number] {\n    return [\n      x * this.scale,\n      y * this.scale,\n    ];\n  }\n\n  inverseTransformPoint(x: number, y: number): [number, number] {\n    return [\n      x / this.scale,\n      y / this.scale,\n    ];\n  }\n\n  getCenterXY(): [number, number] {\n    return [0, 0];  // todo: calculate center point\n  }\n}\n","export enum ToolID {\n  SELECT,\n  MOVE,\n  ADD_VERTEX,\n  ADD_LANE,\n  ADD_WALL,\n  NONE\n}\n","import { v4 as generate_uuid } from 'uuid';\nimport { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\n\nexport class Graph extends EditorObject {\n  name: string = '';\n  id: number = 0;\n  default_lane_width: number = 0.5;\n\n  constructor() {\n    super();\n    this.props.push(new EditorProp('name', () => this.name));\n    this.props.push(new EditorProp('default lane width', () => this.default_lane_width));\n  }\n\n  static fromYAML(id: number, data: any): Graph {\n    let graph = new Graph();\n    graph.uuid = generate_uuid();\n    graph.id = id;\n    graph.name = data['name'];\n    graph.default_lane_width = data['default_lane_width'];\n    return graph\n  }\n\n  getCenterXY(): [number, number] {\n    return [0, 0];  // todo: calculate somehow\n  }\n}\n","import YAML from 'yaml';\nimport * as THREE from 'three';\nimport { v4 as generate_uuid } from 'uuid';\nimport { EditorObject } from './EditorObject';\nimport { CameraPose } from './Store';\nimport { Level } from './Level';\nimport { Graph } from './Graph';\nimport {\n  CoordinateSystem,\n  CoordinateSystemFromString,\n  CoordinateSystemToString\n} from './CoordinateSystem';\n\nexport class Site extends EditorObject {\n  name: string = '';\n  filename: string = '';\n  url_base: string = '';\n  levels: Level[] = [];\n  graphs: Graph[] = [];\n  reference_level_name: string = '';\n  uuid: string = '';\n  params = [];\n  props = [];\n  object_type_name = 'Site';\n  coordinateSystem: CoordinateSystem = CoordinateSystem.Legacy;\n  yaml_doc: YAML.Document = new YAML.Document();\n  save: () => void = () => {};\n\n  constructor() {\n    super();\n    this.addParam<string>('generate_crs', '', 1, true);\n    this.addParam<string>('generate_origin_vertex', '', 1, true);\n  }\n\n  static fromNewCommand(): Site {\n    let site = new Site();\n    site.uuid = generate_uuid();\n    site.name = 'Unnamed Site';\n    site.coordinateSystem = CoordinateSystem.WebMercator;\n    return site;\n  }\n\n  static fromYAML(yaml_text: string): Site {\n    const yaml = YAML.parse(yaml_text);\n    let site = new Site();\n    site.uuid = generate_uuid();\n    site.name = yaml['name'];\n    if (yaml['parameters']) {\n      site.paramsFromYAML(yaml['parameters']);\n    }\n\n    if (yaml['coordinate_system']) {\n      site.coordinateSystem = CoordinateSystemFromString(yaml['coordinate_system']);\n    }\n\n    for (const graph_id in yaml['graphs']) {\n      site.graphs.push(Graph.fromYAML(+graph_id, yaml['graphs'][graph_id]));\n    }\n\n    for (const level_name in yaml['levels']) {\n      const level_data = yaml['levels'][level_name];\n      site.levels.push(Level.fromYAML(level_name, level_data, site.coordinateSystem));\n    }\n    if (yaml['reference_level_name']) {\n      site.reference_level_name = yaml['reference_level_name'];\n    }\n    else {\n      if (site.levels.length > 0) {\n        site.reference_level_name = site.levels[0].name;\n      }\n    }\n    site.yaml_doc = YAML.parseDocument(yaml_text);\n    return site;\n  }\n\n  toYAMLString(): string {\n    let yaml_doc = new YAML.Document(new YAML.YAMLMap());\n    let levels_node = new YAML.YAMLMap();\n    for (const level of this.levels) {\n      levels_node.add({ key: level.name, value: level.toYAML() });\n    }\n    yaml_doc.add({ key: 'coordinate_system', value: CoordinateSystemToString(this.coordinateSystem) });\n    yaml_doc.add({ key: 'crowd_sim', value: this.yaml_doc.get('crowd_sim') });\n    yaml_doc.add({ key: 'levels', value: levels_node });\n\n    let lifts_node = new YAML.YAMLMap();\n    // todo: add lifts to this map node\n    // only use flow style to enforce whitespace similarity for empty maps\n    lifts_node.flow = true;\n\n    yaml_doc.add({ key: 'lifts', value: lifts_node });\n    yaml_doc.add({ key: 'name', value: this.name });\n\n    yaml_doc.add({ key: 'parameters', value: this.paramsToYAML() });\n\n    return yaml_doc.toString({lineWidth: 0, minContentWidth: 2});\n  }\n\n  computeBoundingBox(): THREE.Box3 {\n    let vec_min = new THREE.Vector3(Infinity, Infinity, Infinity);\n    let vec_max = new THREE.Vector3(-Infinity, -Infinity, -Infinity);\n    for (const level of this.levels) {\n      for (const vertex of level.vertices) {\n        if (vertex.x < vec_min.x)\n          vec_min.x = vertex.x;\n        if (vertex.x > vec_max.x)\n          vec_max.x = vertex.x;\n\n        if (vertex.y < vec_min.y)\n          vec_min.y = vertex.y;\n        if (vertex.y > vec_max.y)\n          vec_max.y = vertex.y;\n      }\n    }\n    return new THREE.Box3(vec_min, vec_max);\n  }\n\n  computeInitialCameraPose(): CameraPose {\n    if (this.levels.length) {\n      const bb = this.computeBoundingBox();\n      const cx = (bb.min.x + bb.max.x) / 2;\n      const cy = (bb.min.y + bb.max.y) / 2;\n      const [t_cx, t_cy] = this.levels[0].transformPoint(cx, cy);\n      const target = new THREE.Vector3(t_cx, t_cy, 0);\n      const position = new THREE.Vector3(\n        target.x + 10,\n        target.y - 10,\n        target.z + 10);\n      return {\n        position: position,\n        target: target,\n        zoom: 20,\n      };\n    }\n    else {\n      if (this.coordinateSystem === CoordinateSystem.Legacy) {\n        return {\n          position: new THREE.Vector3(10, 10, 10),\n          target: new THREE.Vector3(0, 0, 0),\n          zoom: 20,\n        };\n      }\n      else {\n        // center on singapore\n        return {\n          position: new THREE.Vector3(201830, -127030, 10),\n          target: new THREE.Vector3(201830, -127030, 0),\n          zoom: 5,\n        };\n      }\n    }\n  }\n\n  getCenterXY(): [number, number] {\n    return [0, 0];  // todo: calculate somehow\n  }\n}\n","import { useStore } from './Store';\nimport { Site } from './Site';\nimport YAML from 'yaml';\n\n\nexport function YAMLParser(yaml_text: string, url_base: string): Site {\n  const site = Site.fromYAML(yaml_text);\n  site.url_base = url_base;\n  const cameraInitialPose = site.computeInitialCameraPose();\n\n  useStore.setState({\n    site: site,\n    selection: null,\n    cameraInitialPose: cameraInitialPose\n  });\n\n  return site;\n}\n\nexport async function YAMLRetriever(url_base: string, resource_name: string): Promise<void> {\n  await fetch(url_base + resource_name)\n    .then(response => response.text())\n    .then(text => YAMLParser(text, url_base))\n}\n\nexport async function YAMLRetrieveDemo(name: string): Promise<void> {\n  await YAMLRetriever(\n    process.env.PUBLIC_URL + `/demos/${name}/`,\n    `${name}.building.yaml`);\n}\n\nexport async function YAMLSender(url: string): Promise<void> {\n  Object.getPrototypeOf(YAML.YAMLMap).maxFlowStringSingleLineLength = 10000;\n  const { site } = useStore.getState();\n  let yaml_text: string = site.toYAMLString();\n  let yaml_size = new Blob([yaml_text]).size;  // utf-8 encoding length\n  await fetch(url, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/x-yaml',\n      'content-length': yaml_size.toString(),\n    },\n    body: yaml_text,\n  });\n}\n","import create from 'zustand';\nimport produce from 'immer';\nimport * as THREE from 'three';\n//import * as net from 'net';\nimport { v4 as generate_uuid } from 'uuid';\nimport YAML from 'yaml';\n//import { EditorParam } from './EditorParam'\nimport { EditorObject } from './EditorObject';\nimport { Site } from './Site';\nimport { CoordinateSystem } from './CoordinateSystem';\nimport { Feature } from './Feature';\nimport { Level } from './Level';\nimport { Lane } from './Lane';\nimport { Vertex } from './Vertex';\nimport { ToolID } from './ToolID';\nimport mqtt from 'mqtt';\nimport { YAMLSender } from './YAMLParser';\n\nexport class EditorWall extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorWall {\n    let wall = new EditorWall();\n    wall.object_type_name = 'Wall';\n    wall.uuid = generate_uuid();\n    wall.paramsFromYAML(data[2]);\n    wall.start_idx = data[0];\n    wall.end_idx = data[1];\n    return wall;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n\n  addDefaultParams(): void {\n    this.addParam('texture_name', 'default', 1, false);\n  }\n\n  getCenterXY(): [number, number] {\n    return [0, 0];  // todo: calculate somehow\n  }\n}\n\nexport class EditorMeasurement extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n  distance: number = 1;\n\n  static fromYAML(data: any): EditorMeasurement {\n    let measurement = new EditorMeasurement();\n    measurement.object_type_name = 'Measurement'\n    measurement.uuid = generate_uuid();\n    measurement.start_idx = data[0];\n    measurement.end_idx = data[1];\n    measurement.distance = data[2]['distance'][1];\n    return measurement;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    let params_yaml = this.paramsToYAML();\n    params_yaml.add({ key: 'distance', value: [3, this.distance] });\n    node.add(params_yaml);\n    node.flow = true;\n    return node;\n  }\n\n  getCenterXY(): [number, number] {\n    return [0, 0];  // todo: calculate somehow\n  }\n}\n\nexport class EditorDoor extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorDoor {\n    let door = new EditorDoor();\n    door.object_type_name = 'Door';\n    door.uuid = generate_uuid();\n    door.paramsFromYAML(data[2]);\n    door.start_idx = data[0];\n    door.end_idx = data[1];\n    return door;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n\n  getCenterXY(): [number, number] {\n    return [0, 0];  // todo: calculate somehow\n  }\n}\n\nexport class EditorFloor extends EditorObject {\n  vertex_indices: number[] = [];\n\n  static fromYAML(data: any): EditorFloor {\n    let floor = new EditorFloor();\n    floor.uuid = generate_uuid();\n    floor.paramsFromYAML(data['parameters']);\n    floor.vertex_indices = data['vertices'].map((vertex_idx: number) => vertex_idx);\n    return floor;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'parameters', value: this.paramsToYAML() });\n\n    let vertices_node = new YAML.YAMLSeq();\n    for (const vertex_index of this.vertex_indices) {\n      vertices_node.add(vertex_index);\n    }\n    vertices_node.flow = true;\n    node.add({ key: 'vertices', value: vertices_node });\n    return node;\n  }\n\n  getCenterXY(): [number, number] {\n    return [0, 0];  // todo: calculate somehow\n  }\n}\n\nexport class EditorImage extends EditorObject {\n  name: string = '';\n  filename: string = '';\n  offset: THREE.Vector3 = new THREE.Vector3(0, 0, 0);\n  yaw: number = 0;\n  scale: number = 1;\n  isLegacyDefaultImage: boolean = false;\n  color: number[] = [1, 1, 1, 1];\n  visible: boolean = true;\n  features: Feature[] = [];\n  blob: Blob = new Blob([]);\n\n  static fromLayerYAML(layer_name: string, data: any): EditorImage {\n    //console.log(data);\n    let image = new EditorImage();\n    image.object_type_name = 'Image';\n    image.uuid = generate_uuid();\n    image.name = layer_name;\n    image.filename = data['filename'];\n    image.color = data['color'];\n    image.offset.x = data['transform']['translation_x'];\n    image.offset.y = data['transform']['translation_y'];\n    image.scale = data['transform']['scale'];\n    image.yaw = data['transform']['yaw'];\n    image.isLegacyDefaultImage = false;\n    image.visible = data['visible'];\n    image.features = data['features'].map((feature_yaml: any) => Feature.fromYAML(feature_yaml, [1.0, 1.0]));\n    return image;\n  }\n\n  toLayerYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    let color_node = new YAML.YAMLSeq();\n    color_node.add(this.color[0]);\n    color_node.add(this.color[1]);\n    color_node.add(this.color[2]);\n    color_node.add(this.color[3]);\n    color_node.flow = true;\n    node.add({ key: 'color', value: color_node });\n    node.add({ key: 'features', value: this.features.map(feature => feature.toYAML([1.0, 1.0])) });\n    node.add({ key: 'filename', value: this.filename });\n    let transform_node = new YAML.YAMLMap();\n    transform_node.add({ key: 'scale', value: this.scale });\n    transform_node.add({ key: 'translation_x', value: this.offset.x });\n    transform_node.add({ key: 'translation_y', value: this.offset.y });\n    transform_node.add({ key: 'yaw', value: this.yaw });\n    node.add({ key: 'transform', value: transform_node });\n    node.add({ key: 'visible', value: this.visible });\n    return node;\n  }\n\n  loadBlob(_blob: Blob): void {\n    this.blob = _blob;\n    console.log(`image ${this.filename} retrieved ${this.blob.size} bytes`);\n  }\n\n  getCenterXY(): [number, number] {\n    return [0, 0];  // todo: calculate somehow\n  }\n}\n\nexport class EditorConstraint extends EditorObject {\n  ids: string[] = [];\n\n  static fromYAML(data: any): EditorConstraint {\n    let constraint = new EditorConstraint();\n    constraint.uuid = generate_uuid();\n    constraint.ids = [ data['ids'][0], data['ids'][1] ];\n    return constraint;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'ids', value: this.ids });\n    node.flow = true;\n    return node;\n  }\n\n  getCenterXY(): [number, number] {\n    return [0, 0];  // todo: calculate somehow\n  }\n}\n\nexport class EditorModel extends EditorObject {\n  model_name: string = '';\n  instance_name: string = '';\n  is_static: boolean = true;\n  x: number = 0;\n  y: number = 0;\n  z: number = 0;\n  yaw: number = 0;\n\n  static fromYAML(data: any): EditorModel {\n    let model = new EditorModel();\n    model.object_type_name = 'Model';\n    model.uuid = generate_uuid();\n    model.model_name = data['model_name'];\n    model.instance_name = data['name'];\n    model.is_static = data['static'];\n    model.x = data['x'];\n    model.y = -data['y'];\n    model.yaw = data['yaw'];\n    model.z = data['z'];\n    return model;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'model_name', value: this.model_name });\n    node.add({ key: 'name', value: this.instance_name });\n    node.add({ key: 'static', value: this.is_static });\n    node.add({ key: 'x', value: this.x });\n    node.add({ key: 'y', value: -this.y });\n    node.add({ key: 'yaw', value: this.yaw });\n    node.add({ key: 'z', value: this.z });\n    node.flow = true;\n    return node;\n  }\n\n  getCenterXY(): [number, number] {\n    return [0, 0];  // todo: calculate somehow\n  }\n}\n\nexport interface CameraPose {\n  position: THREE.Vector3,\n  target: THREE.Vector3,\n  zoom: number,\n}\n\nexport interface RobotTelemetry {\n  name: string,\n  x: number,\n  y: number,\n  z: number,\n  heading: number,\n}\n\nexport interface StoreState {\n  site: Site,\n  selection: EditorObject | null,\n  editorMode: string,\n  enableMotionControls: boolean,\n  activeTool: ToolID,\n  activeMotionTool: ToolID,\n  cameraInitialPose: CameraPose,\n  cameraPose: CameraPose,\n  propertyRepaintCount: number,\n  repaintCount: number,\n  disableEditorTools: boolean,\n  activeUUID: string,\n  set: (fn: (draftState: StoreState) => void) => void,\n  mqtt_client: mqtt.MqttClient | null,\n  mqtt_robot_telemetry: RobotTelemetry[],\n  mapType: string,  // todo: enum\n}\n\nexport const useStore = create<StoreState>(set => ({\n  site: new Site(),\n  selection: null,\n  editorMode: '2d',\n  enableMotionControls: true,\n  activeTool: ToolID.SELECT,\n  activeMotionTool: ToolID.NONE,\n  propertyRepaintCount: 0,\n  repaintCount: 0,\n  disableEditorTools: false,\n  activeUUID: '',\n  cameraInitialPose: {\n    position: new THREE.Vector3(0, 0, 100),\n    target: new THREE.Vector3(0, 0, 0),\n    zoom: 20,\n  },\n  cameraPose: {\n    position: new THREE.Vector3(0, 0, 100),\n    target: new THREE.Vector3(0, 0, 0),\n    zoom: 20,\n  },\n  set: fn => set(produce(fn)),\n  mqtt_client: null,\n  mqtt_robot_telemetry: [],\n  mapType: '',\n}));\n\nexport type StoreSetter = (fn: (draftState: StoreState) => void) => void;\n\nexport function setSelection(selection: EditorObject, zoomTo: boolean = false) {\n  useStore.setState({ selection: selection });\n\n  if (zoomTo) {\n    const [x, y] = selection.getCenterXY();\n    const pose = {\n      position: new THREE.Vector3(x, y, 100),\n      target: new THREE.Vector3(x, y, 0),\n      zoom: 20,\n    };\n    useStore.setState({ cameraInitialPose: pose });\n  }\n}\n\nexport function clearSelection(setStore: StoreSetter) {\n  setStore(state => {\n    state.selection = null;\n  });\n}\n\nexport function setEditorMode(setStore: StoreSetter, newMode: string) {\n  setStore(state => {\n    state.editorMode = newMode;\n  });\n}\n\nexport function setActiveTool(newTool: ToolID) {\n  useStore.setState({\n    activeTool: newTool,\n    activeUUID: ''\n  });\n}\n\nexport function setActiveMotionTool(newTool: ToolID) {\n  useStore.setState({ activeMotionTool: newTool });\n}\n\nexport function setActiveUUID(newUUID: string) {\n  useStore.setState({ activeUUID: newUUID });\n}\n\nexport function repaintPropertyEditor(setStore: StoreSetter) {\n  setStore(state => {\n    state.propertyRepaintCount += 1;\n  });\n}\n\nexport function disableEditorTools(disable: boolean) {\n  let currentState = useStore.getState().disableEditorTools;\n  if (currentState === disable)\n    return; // nothing to do\n  useStore.setState({ disableEditorTools: disable });\n}\n\nexport function addVertex(x: number, y: number) {\n  console.log(`addVertex(${x}, ${y})`);\n  //\n  //let site = useStore(state => state.site);\n  let vertex = new Vertex();\n  vertex.uuid = generate_uuid();\n  vertex.x = x;\n  vertex.y = y;\n  vertex.addDefaultParams();\n\n  let site = useStore.getState().site;\n\n  if (site.levels.length === 0) {\n    // add a default level\n    let level = new Level();\n    level.uuid = generate_uuid();\n    level.coordinateSystem = site.coordinateSystem;\n    level.name = 'default';\n    level.scale = site.coordinateSystem === CoordinateSystem.Legacy ? 0.05 : 1;\n    vertex.x *= level.scale;\n    vertex.y *= level.scale;\n\n    level.vertices = [vertex];\n\n    site.levels = [level];\n  }\n  else {\n    // todo: some way of defining the active level\n    let level = site.levels[0];\n    vertex.x *= level.scale;\n    vertex.y *= level.scale;\n    level.vertices = [...level.vertices, vertex];\n  }\n\n  useStore.setState({\n    site: site,\n    repaintCount: useStore.getState().repaintCount + 1,\n  });\n}\n\nexport function updateVertexPoint(\n  setStore: StoreSetter,\n  level_uuid: string,\n  vertex_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.site.levels.map(level => {\n      if (level.uuid === level_uuid) {\n        level.vertices.map(vertex => {\n          if (vertex.uuid === vertex_uuid) {\n            vertex.x = x;\n            vertex.y = y;\n          }\n          return vertex;\n        })\n      }\n      return level;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n\nexport function updateModelPoint(\n  setStore: StoreSetter,\n  level_uuid: string,\n  model_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.site.levels.map(level => {\n      if (level.uuid === level_uuid) {\n        level.models.map(model => {\n          if (model.uuid === model_uuid) {\n            model.x = x;\n            model.y = y;\n          }\n          return model;\n        })\n      }\n      return level;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n\nexport function updateFeaturePoint(\n  setStore: StoreSetter,\n  feature_level: Level,\n  feature_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.site.levels.map(level => {\n      if (level === feature_level) {\n        level.features.map(feature => {\n          if (feature.uuid === feature_uuid) {\n            feature.x = x;\n            feature.y = y;\n          }\n          return feature;\n        })\n      }\n      return level;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n\nexport function addLane(start_uuid: string, end_uuid: string, level_uuid: string) {\n  console.log(`addLane(${start_uuid}, ${end_uuid})`);\n  let site = useStore.getState().site;\n  for (let level of site.levels) {\n    if (level.uuid === level_uuid) {\n      // look up the vertex indices\n      // TODO: something cooler than this\n      let start_idx = -1;\n      let end_idx = -1;\n      for (let i = 0; i < level.vertices.length; i++) {\n        if (level.vertices[i].uuid === start_uuid) {\n          start_idx = i;\n        }\n        if (level.vertices[i].uuid === end_uuid) {\n          end_idx = i;\n        }\n      }\n      if (start_idx < 0 || end_idx < 0) {\n        return;\n      }\n\n      let lane = new Lane();\n      lane.uuid = generate_uuid();\n      lane.start_idx = start_idx;\n      lane.end_idx = end_idx;\n      lane.addDefaultParams();\n      level.lanes = [...level.lanes, lane];\n      break;\n    }\n  }\n\n  useStore.setState({\n    site: site,\n    repaintCount: useStore.getState().repaintCount + 1,\n  });\n}\n\nexport function addWall(start_uuid: string, end_uuid: string, level_uuid: string) {\n  console.log(`addWall(${start_uuid}, ${end_uuid})`);\n  let site = useStore.getState().site;\n  for (let level of site.levels) {\n    if (level.uuid === level_uuid) {\n      // look up the vertex indices\n      // TODO: something cooler than this\n      let start_idx = -1;\n      let end_idx = -1;\n      for (let i = 0; i < level.vertices.length; i++) {\n        if (level.vertices[i].uuid === start_uuid) {\n          start_idx = i;\n        }\n        if (level.vertices[i].uuid === end_uuid) {\n          end_idx = i;\n        }\n      }\n      if (start_idx < 0 || end_idx < 0) {\n        return;\n      }\n\n      let wall = new EditorWall();\n      wall.uuid = generate_uuid();\n      wall.start_idx = start_idx;\n      wall.end_idx = end_idx;\n      wall.addDefaultParams();\n      level.walls = [...level.walls, wall];\n      break;\n    }\n  }\n\n  useStore.setState({\n    site: site,\n    repaintCount: useStore.getState().repaintCount + 1,\n  });\n}\n\nexport async function saveStore() {\n  const mapType = useStore.getState().mapType;\n  if (mapType === 'local_file') {\n    //setSnackMessage('Cannot save. Local file save not yet implemented.');\n    //setSnackOpen(true);\n    useStore.getState().site.save();\n  }\n  else if (mapType === 'local_rest') {\n    try {\n      await YAMLSender('http://localhost:8000/map_file');\n    } catch (error) {\n      //setSnackMessage('Error while saving to local REST server');\n      //setSnackOpen(true);\n    }\n  }\n  else if (mapType === 'demo') {\n    //setSnackMessage('Cannot save. Demo maps are read-only.');\n    //setSnackOpen(true);\n  }\n  else {\n    //setSnackMessage('Cannot save. No map loaded.');\n    //setSnackOpen(true);\n  }\n}\n","import React from 'react';\nimport {\n  EditorConstraint,\n  EditorDoor,\n  EditorFloor,\n  EditorImage,\n  EditorMeasurement,\n  EditorModel,\n  EditorWall,\n  setSelection,\n  useStore,\n} from './Store';\nimport { EditorParam } from './EditorParam';\nimport { Graph } from './Graph';\nimport { Lane } from './Lane';\nimport { Level } from './Level';\nimport { Vertex } from './Vertex';\nimport { Feature } from './Feature';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nfunction FeatureTreeItem(props: { feature: Feature }): JSX.Element {\n  return (\n    <TreeItem\n      nodeId={props.feature.uuid}\n      key={props.feature.uuid}\n      label={`${props.feature.x}, ${props.feature.y}`}\n      onClick={(event) => {\n        setSelection(props.feature);\n      }}\n    >\n    </TreeItem>\n  );\n}\n\nfunction GraphTreeItem(props: { graph: Graph }): JSX.Element {\n  return (\n    <TreeItem\n      nodeId={props.graph.uuid}\n      key={props.graph.uuid}\n      label={`${props.graph.id}: ${props.graph.name}`}\n      onClick={(event) => {\n        setSelection(props.graph);\n      }}\n    >\n    </TreeItem>\n  );\n}\n\nfunction ModelTreeItem(props: { model: EditorModel }): JSX.Element {\n  return (\n    <TreeItem\n      nodeId={props.model.uuid}\n      key={props.model.uuid}\n      label={`${props.model.instance_name}`}\n      onClick={(event) => {\n        setSelection(props.model);\n      }}\n    >\n    </TreeItem>\n  );\n}\n\nfunction ConstraintTreeItem(props: { constraint: EditorConstraint }): JSX.Element {\n  return (\n    <TreeItem\n      nodeId={props.constraint.uuid}\n      key={props.constraint.uuid}\n      label={`${props.constraint.ids[0].substring(1, 9)} - ${props.constraint.ids[1].substring(1, 9)}`}\n      onClick={(event) => {\n        setSelection(props.constraint);\n      }}\n    >\n      {props.constraint.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction DoorTreeItem(props: { door: EditorDoor }): JSX.Element {\n  const label = `(${props.door.start_idx} => ${props.door.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.door.uuid}\n      key={props.door.uuid}\n      onClick={(event) => {\n        setSelection(props.door);\n      }}\n      label={label} />\n  );\n}\n\nfunction ParamTreeItem(props: { param: EditorParam }): JSX.Element {\n  return (\n    <TreeItem\n      nodeId={props.param.uuid}\n      key={props.param.uuid}\n      label={`${props.param.name} = ${props.param.value}`}\n    />\n  );\n}\n\nfunction ImageTreeItem(props: { image: EditorImage }): JSX.Element {\n  return (\n    <TreeItem\n      nodeId={props.image.uuid}\n      key={props.image.uuid}\n      label={props.image.filename}\n      onClick={(event) => {\n        setSelection(props.image);\n      }}\n    >\n      {props.image.params.map((param) => <ParamTreeItem param={param} />)}\n      <TreeItem\n        nodeId={`${props.image.uuid}_features`}\n        key={`${props.image.uuid}_features`}\n        label=\"features\"\n      >\n        {props.image.features.map((feature) => <FeatureTreeItem feature={feature} />)}\n      </TreeItem>\n    </TreeItem>\n  );\n}\n\nfunction FloorTreeItem(props: { floor: EditorFloor }): JSX.Element {\n  const label = 'floor (' + props.floor.vertex_indices.map((idx) => idx.toString()).join(', ') + ')';\n  return(\n    <TreeItem\n      nodeId={props.floor.uuid}\n      key={props.floor.uuid}\n      label={label}\n      onClick={(event) => {\n        setSelection(props.floor);\n      }}\n    >\n      {props.floor.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction WallTreeItem(props: { wall: EditorWall }): JSX.Element {\n  const label = `(${props.wall.start_idx} => ${props.wall.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.wall.uuid}\n      key={props.wall.uuid}\n      onClick={(event) => {\n        setSelection(props.wall);\n      }}\n      label={label} />\n  );\n}\n\nfunction MeasurementTreeItem(props: { measurement: EditorMeasurement }): JSX.Element {\n  const label = `(${props.measurement.start_idx}-${props.measurement.end_idx}) = ${props.measurement.distance}`;\n  return(\n    <TreeItem\n      nodeId={props.measurement.uuid}\n      key={props.measurement.uuid}\n      onClick={(event) => {\n        setSelection(props.measurement);\n      }}\n      label={label} />\n  );\n}\n\nfunction LaneTreeItem(props: { lane: Lane }): JSX.Element {\n  const label = `(${props.lane.start_idx} => ${props.lane.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.lane.uuid}\n      key={props.lane.uuid}\n      label={label}\n      onClick={(event) => {\n        setSelection(props.lane, true);\n      }}\n    />\n  );\n}\n\nfunction VertexTreeItem(props: { vertex: Vertex }): JSX.Element {\n  let label = \"(\" + props.vertex.x + \", \" + props.vertex.y + \")\";\n  if (props.vertex.name)\n    label = props.vertex.name;\n  return (\n    <TreeItem\n      nodeId={props.vertex.uuid}\n      key={props.vertex.uuid}\n      onClick={(event) => {\n        setSelection(props.vertex, true);\n      }}\n      label={label}>\n    </TreeItem>\n  );\n}\n\nfunction LevelTreeItem(props: { level: Level }): JSX.Element {\n  return (\n    <TreeItem\n      nodeId={props.level.uuid}\n      key={props.level.uuid}\n      label={props.level.name}\n      onClick={(event) => {\n        setSelection(props.level);\n      }}>\n\n      <TreeItem nodeId={props.level.uuid + '_constraints'} label=\"constraints\">\n        {props.level.constraints.map(constraint => <ConstraintTreeItem constraint={constraint} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_doors'} label=\"doors\">\n        {props.level.doors.map(door => <DoorTreeItem door={door} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_features'} label=\"features\">\n        {props.level.features.map(feature => <FeatureTreeItem feature={feature} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_floors'} label=\"floors\">\n        {props.level.floors.map(floor => <FloorTreeItem floor={floor} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_images'} label=\"images\">\n        {props.level.images.map(image => <ImageTreeItem image={image} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_lanes'} label=\"lanes\">\n        {props.level.lanes.map(lane => <LaneTreeItem lane={lane} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_measurements'} label=\"measurements\">\n        {props.level.measurements.map(measurement => <MeasurementTreeItem measurement={measurement} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_models'} label=\"models\">\n        {props.level.models.map(model => <ModelTreeItem model={model} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_vertices'} label=\"vertices\">\n        {props.level.vertices.map(vertex => <VertexTreeItem vertex={vertex} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_walls'} label=\"walls\">\n        {props.level.walls.map(wall => <WallTreeItem wall={wall} /> )}\n      </TreeItem>\n    </TreeItem>\n  );\n}\n\nexport function SiteTreeView(): JSX.Element {\n  const site = useStore(state => state.site);\n\n  if (site.name === '') {\n    return (\n      <div style={{margin: '1em'}}>\n        <p>\n          No map loaded.\n        </p>\n        <p>\n          To load a map, click the menu icon in the upper-left.\n        </p>\n      </div>\n    );\n  }\n\n  // defaultExpanded={[building.uuid + '_levels']}\n  return (\n    <TreeView\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem\n        nodeId={site.uuid + '_name'}\n        key={site.uuid + '_name'}\n        label={\"site name: \" + site.name}\n        onClick={(event) => {\n          setSelection(site);\n        }}>\n      </TreeItem>\n\n      <TreeItem nodeId={site.uuid + '_filename'} label={\"filename: \" + site.filename} />\n      <TreeItem\n        nodeId={site.uuid + '_ref'}\n        label={\"reference level: \" + site.reference_level_name }\n      />\n      <TreeItem nodeId={site.uuid + '_graphs'} label=\"graphs\">\n        {site.graphs.map(graph => <GraphTreeItem graph={graph} /> )}\n      </TreeItem>\n      <TreeItem nodeId={site.uuid + '_levels'} label=\"levels\">\n        {site.levels.map(level => <LevelTreeItem level={level} /> )}\n      </TreeItem>\n    </TreeView>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorDoor, setSelection } from './Store';\n\ninterface SceneDoorProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  door: EditorDoor,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneDoor(props: SceneDoorProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.1, 0.4, 0.4);\n    if (selection && selection.uuid === props.door.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.door.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 1.0 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.door.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(props.door);\n      }}\n    >\n      <boxGeometry args={[len, 0.5, 2]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Text } from '@react-three/drei'\nimport { Feature } from './Feature';\nimport { Level } from './Level';\nimport {\n  useStore,\n  repaintPropertyEditor,\n  setSelection,\n  updateFeaturePoint,\n} from './Store';\nimport { ToolID } from './ToolID';\n\ninterface SceneFeatureProps {\n  feature: Feature,\n  elevation: number,\n  level: Level,\n}\n\nexport function SceneFeature(props: SceneFeatureProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const isMoveToolActive = useStore(state => state.activeTool === ToolID.MOVE);\n  const [ dragActive, setDragActive ] = React.useState(false);\n\n  const [x, y] = props.level.transformPoint(props.feature.x, props.feature.y);\n\n  let color = \"rgb(200, 200, 0)\";\n  if (selection && selection.uuid === props.feature.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  return (\n    <group>\n      <mesh\n        position={[x, y, 0.25 + props.elevation]}\n        scale={1.0}\n        rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n        key={props.feature.uuid}\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n        onPointerDown={(event) => {\n          setSelection(props.feature);\n          if (!isMoveToolActive)\n            return;\n          event.stopPropagation();\n          setDragActive(true);\n          if (event.target) {\n            (event.target as HTMLElement).setPointerCapture(event.pointerId);\n          }\n        }}\n        onPointerUp={(event) => {\n          event.stopPropagation();\n          setDragActive(false);\n          if (event.target) {\n            (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n          }\n          repaintPropertyEditor(setStore);\n        }}\n        onPointerMove={(event) => {\n          if (dragActive) {\n            event.stopPropagation();\n            if (editorMode === '2d') {\n              const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n              updateFeaturePoint(setStore, props.level, props.feature.uuid, px, py);\n            }\n            else {\n              let intersection_point = new THREE.Vector3();\n              event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n              const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n              updateFeaturePoint(setStore, props.level, props.feature.uuid, px, py);\n            }\n          }\n        }}\n      >\n        <cylinderGeometry args={[0.05, 0.15, 0.4, 16]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <Text color=\"blue\" position={[x, y, 0.36 + props.elevation]}>\n        {props.feature.name}\n      </Text>\n    </group>\n  );\n}\n","import React from 'react';\nimport * as THREE from 'three';\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorFloor, setSelection } from './Store';\n\ntype SceneFloorProps = {\n  floor: EditorFloor;\n  level: Level;\n  vertices: Vertex[];\n  elevation: number;\n}\n\nexport function SceneFloor(props: SceneFloorProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n\n  const shape = React.useMemo(() => {\n    const shape = new THREE.Shape();\n    let started = false;\n\n    for (const v of props.vertices) {\n      const [t_x, t_y] = props.level.transformPoint(v.x, v.y);\n      if (!started)\n      {\n        shape.moveTo(t_x, t_y);\n        started = true;\n      }\n      else\n        shape.lineTo(t_x, t_y);\n    }\n    const [v0_x, v0_y] = props.level.transformPoint(props.vertices[0].x, props.vertices[0].y);\n    shape.lineTo(v0_x, v0_y);\n    return shape;\n  }, [props.vertices, props.level])\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(1, 1, 1);\n    if (selection && selection.uuid === props.floor.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.floor.uuid]);\n\n  return (\n    <mesh\n      key={props.floor.uuid}\n      position={[0, 0, -0.1]}\n      onClick={(event) => {\n        event.stopPropagation()\n        console.log('floor onClick')\n        setSelection(props.floor)\n      }}\n    >\n      <extrudeGeometry args={[shape, { 'depth': 0.1, 'bevelEnabled': false } ]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n\n  /*\n      <meshStandardMaterial color={color} transparent={true} opacity={0.5} />\n  return (\n    <gridHelper\n      args={[100, 100]}\n      rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n      position={new THREE.Vector3(50, -50, elevation)}/>\n  );\n   */\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { Lane } from './Lane';\nimport { useStore, setSelection } from './Store';\nimport { CoordinateSystem } from './CoordinateSystem';\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\nimport { useLoader } from '@react-three/fiber';\n\ninterface SceneLaneProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  lane: Lane,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneLane(props: SceneLaneProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const coordinateSystem = useStore(state => state.site.coordinateSystem);\n  useStore(state => state.repaintCount);\n  const graphs = useStore(state => state.site.graphs);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const length = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const graph_id = props.lane.graph_idx;\n  // try to find this graph\n  let width = coordinateSystem === CoordinateSystem.Legacy ? 0.5 : 0.02;\n  for (const graph of graphs) {\n    if (graph.id === graph_id) {\n      width = graph.default_lane_width;\n    }\n  }\n  const height = width / 20;\n\n  const isBidirectional = props.lane.getParam('bidirectional', false);\n\n  const texture_scale = 0.2;\n  const uvRef = React.useRef();\n\n  const uvs = React.useMemo(() => {\n    return new Float32Array([\n      0, 1,\n      length * texture_scale, 1,\n      0, 0,\n      length * texture_scale, 0])\n  }, [length]);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.6, 0.05, 0.05);\n    if (selection && selection.uuid === props.lane.uuid) {\n      color.setRGB(0.8, 0.3, 0.01);\n    }\n    return color;\n  }, [selection, props.lane.uuid]);\n\n  const texture = useLoader(\n    TextureLoader,\n    process.env.PUBLIC_URL + '/textures/lane_direction3.png');\n\n  if (texture) {\n    texture.wrapS = THREE.RepeatWrapping;\n    texture.wrapT = THREE.RepeatWrapping;\n  }\n\n  // todo: figure out how to set needsUpdate on the material\n  // to tell THREE to reload the material when we toggle isBidirectional\n  // console.log(`SceneLane center (${cx}, ${cy}), len ${len}, xyrot ${xyrot}, ele ${props.elevation}`);\n\n  const geometry = React.useRef();\n\n  const update = React.useCallback(({parent}) => {\n    parent.attributes.uv.needsUpdate = true;\n  }, []);\n\n  return (\n    <mesh\n      position={[cx, cy, height + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.lane.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(props.lane);\n      }}\n    >\n      <meshStandardMaterial color={color} transparent={true} map={isBidirectional ? null : texture} opacity={0.7} />\n      <planeBufferGeometry args={[length, width, 1, 1]} ref={geometry}>\n        <bufferAttribute\n          attachObject={['attributes', 'uv']}\n          count={4}\n          itemSize={2}\n          array={uvs}\n          ref={uvRef}\n          onUpdate={update} />\n      </planeBufferGeometry>\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\nimport { useLoader } from '@react-three/fiber';\nimport { Level } from './Level';\nimport { useStore, EditorImage } from './Store';\n\ntype SceneImageProps = {\n  image: EditorImage,\n  elevation: number,\n  level: Level,\n}\n\nexport function SceneImage(props: SceneImageProps): JSX.Element {\n  //const selection = useStore(state => state.selection)\n  const url_base = useStore(state => state.site.url_base);\n  //const setStore = useStore(state => state.set);\n  const [ texture ] = useLoader(TextureLoader, [url_base + props.image.filename]);\n  //useLoader.preload(TextureLoader, [url_base + props.image.filename]);\n\n  let width_meters = 50.0;\n  let height_meters = 50.0;\n\n  if (texture) {\n    texture.magFilter = THREE.NearestFilter;\n    texture.minFilter = THREE.NearestFilter;\n    width_meters = texture.image.width * props.level.scale;\n    height_meters = texture.image.height * props.level.scale;\n    // console.log(`texture size: ${width_meters}, ${height_meters}`);\n  }\n\n  const x = props.image.offset.x;\n  const y = props.image.offset.y;\n  const scale = 1; // todo...\n  const yaw = props.image.yaw;\n\n  return (\n    <mesh\n      position={[x + width_meters / 2, y - height_meters / 2, props.elevation - 0.05 + .01]}\n      scale={scale}\n      rotation={new THREE.Euler(0, yaw, 0)}\n      key={props.image.uuid}\n    >\n      <boxGeometry args={[width_meters, height_meters, 0.1, 8]} />\n      <meshStandardMaterial map={texture} color={[1.0, 1.0, 1.0]} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorMeasurement, setSelection } from './Store';\n\ninterface SceneMeasurementProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  measurement: EditorMeasurement,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneMeasurement(props: SceneMeasurementProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.6, 0.1, 0.6);\n    if (selection && selection.uuid === props.measurement.uuid) {\n      color.setRGB(0.8, 0.3, 0.01);\n    }\n    return color;\n  }, [selection, props.measurement.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 0.2 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.measurement.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(props.measurement);\n      }}\n    >\n      <boxGeometry args={[len, 0.5, 0.1]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Level } from './Level';\nimport { useStore, EditorModel, setSelection, updateModelPoint } from './Store';\nimport { ToolID } from './ToolID';\n\ninterface SceneModelProps {\n  model: EditorModel,\n  elevation: number,\n  level: Level,\n  level_uuid: string,\n}\n\nexport function SceneModel(props: SceneModelProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const isMoveToolActive = useStore(state => state.activeTool === ToolID.MOVE);\n  const [ dragActive, setDragActive ] = React.useState(false);\n\n  const [x, y] = props.level.transformPoint(props.model.x, props.model.y);\n\n  let color = \"rgb(128, 128, 128)\";\n  if (selection && selection.uuid === props.model.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  return (\n    <mesh\n      position={[x, y, 0.25 + props.elevation]}\n      scale={1.0}\n      rotation={new THREE.Euler(Math.PI / 2, props.model.yaw, 0)}\n      key={props.model.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(props.model);\n      }}\n      onPointerDown={(event) => {\n        if (!isMoveToolActive)\n          return;\n        event.stopPropagation();\n        setDragActive(true);\n        if (event.target) {\n          (event.target as HTMLElement).setPointerCapture(event.pointerId);\n        }\n      }}\n      onPointerUp={(event) => {\n        event.stopPropagation();\n        setDragActive(false);\n        if (event.target) {\n          (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n        }\n      }}\n      onPointerMove={(event) => {\n        if (dragActive) {\n          event.stopPropagation();\n          if (editorMode === '2d') {\n            const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n            updateModelPoint(setStore, props.level_uuid, props.model.uuid, px, py);\n          }\n          else {\n            let intersection_point = new THREE.Vector3();\n            event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n            const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n            updateModelPoint(setStore, props.level_uuid, props.model.uuid, px, py);\n          }\n        }\n      }}\n    >\n      <boxGeometry args={[0.4, 0.4, 0.4, 8]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Text } from '@react-three/drei'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport {\n  useStore,\n  repaintPropertyEditor,\n  setSelection,\n  setActiveUUID,\n  setActiveMotionTool,\n  updateVertexPoint,\n  addLane,\n  addWall,\n} from './Store';\nimport { ToolID } from './ToolID';\nimport { CoordinateSystem } from './CoordinateSystem';\n\ninterface SceneVertexProps {\n  vertex: Vertex,\n  elevation: number,\n  level: Level,\n  level_uuid: string,\n}\n\nexport function SceneVertex(props: SceneVertexProps): JSX.Element {\n  //console.log('SceneVertex()');\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const activeTool = useStore(state => state.activeTool);\n  const activeUUID = useStore(state => state.activeUUID);\n  const activeMotionTool = useStore(state => state.activeMotionTool);\n  const coordinateSystem = useStore(state => state.site.coordinateSystem);\n  const captureTools = [ToolID.MOVE, ToolID.ADD_LANE, ToolID.ADD_WALL];\n  const site = useStore(state => state.site);\n\n  const [activeMotionLinePoint, setActiveMotionLinePoint] = React.useState<[number, number]>([0, 0]);\n  const [showActiveMotionGeometry, setShowActiveMotionGeometry] = React.useState(false);\n  const updateActiveMotionGeometry = React.useCallback(self => {\n    self.setFromPoints(\n      [\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(activeMotionLinePoint[0], activeMotionLinePoint[1], 0)\n      ]);\n  }, [activeMotionLinePoint]);\n\n  // todo: inflate vertex diameter when far away?\n  const radius = site.getParam<number>(\n    'default_vertex_radius',\n    coordinateSystem === CoordinateSystem.Legacy ? 0.1 : 0.01);\n\n  const [x, y] = props.level.transformPoint(props.vertex.x, props.vertex.y);\n\n  let color = \"rgb(0, 128, 0)\";\n  if (selection && selection.uuid === props.vertex.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  //const lineGeometry = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(0, 0, 0), new THREE.Vector3(1, 1, 1)]);\n  return (\n    <group>\n      <mesh\n        position={[x, y, radius/2 + props.elevation]}\n        scale={1.0}\n        rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n        key={props.vertex.uuid}\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n        onPointerDown={(event) => {\n          //console.log(`vertex onPointerDown uuid=${props.vertex.uuid}`);\n          if (activeTool === ToolID.SELECT) {\n            setSelection(props.vertex);\n            return;\n          }\n          else if (captureTools.includes(activeTool)) {\n            event.stopPropagation();\n            setActiveMotionTool(activeTool);\n            setActiveUUID(props.vertex.uuid);\n            if (event.target) {\n              (event.target as HTMLElement).setPointerCapture(event.pointerId);\n            }\n          }\n        }}\n        onPointerUp={(event) => {\n          event.stopPropagation();\n          if (event.target) {\n            (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n          }\n          setShowActiveMotionGeometry(false);\n          repaintPropertyEditor(setStore);\n\n          //console.log(`vertex onPointerUp uuid=${props.vertex.uuid} activeMotionTool=${activeMotionTool}`);\n          if (activeMotionTool === ToolID.ADD_LANE) {\n            // calculate if we released the pointer on an existing vertex\n            // if so, add a new lane between those vertices\n            //console.log(`activeUUID: ${activeUUID} props.vertex.uuid: ${props.vertex.uuid}`);\n            if (activeUUID !== props.vertex.uuid) {\n              addLane(activeUUID, props.vertex.uuid, props.level.uuid);\n            }\n          }\n          else if (activeMotionTool === ToolID.ADD_WALL) {\n            if (activeUUID !== props.vertex.uuid) {\n              addWall(activeUUID, props.vertex.uuid, props.level.uuid);\n            }\n          }\n          setActiveMotionTool(ToolID.NONE);\n        }}\n        onPointerMove={(event) => {\n          if (activeMotionTool === ToolID.NONE)\n            return;\n\n          event.stopPropagation();\n\n          let [mouse_x, mouse_y] = [0, 0];\n          if (editorMode === '2d') {\n            [mouse_x, mouse_y] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n          }\n          else if (editorMode === '3d') {\n            let intersection_point = new THREE.Vector3();\n            event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n            [mouse_x, mouse_y] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n          }\n          else {\n            return;\n          }\n\n          if (activeMotionTool === ToolID.MOVE) {\n            updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, mouse_x, mouse_y);\n          }\n          else if (activeMotionTool === ToolID.ADD_LANE) {\n            setShowActiveMotionGeometry(true);\n            setActiveMotionLinePoint([mouse_x - x, mouse_y - y]);\n          }\n          else if (activeMotionTool === ToolID.ADD_WALL) {\n            setShowActiveMotionGeometry(true);\n            setActiveMotionLinePoint([mouse_x - x, mouse_y - y]);\n          }\n        }}\n      >\n        <cylinderGeometry args={[radius, radius, radius, 16]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <Text\n        color=\"blue\"\n        position={[x, y, 1.5 * radius + props.elevation]}\n        fontSize={radius * 1}>\n        {props.vertex.name}\n      </Text>\n      {showActiveMotionGeometry && <lineSegments position={[x, y, props.elevation + 0.3]}>\n        <bufferGeometry attach=\"geometry\" onUpdate={updateActiveMotionGeometry} />\n        <lineBasicMaterial attach=\"material\" color={'#000000'} linewidth={20} linecap={'round'} />\n      </lineSegments>}\n    </group>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorWall, setSelection } from './Store';\nimport { CoordinateSystem } from './CoordinateSystem';\n\ninterface SceneWallProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  wall: EditorWall,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneWall(props: SceneWallProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n  const coordinateSystem = useStore(state => state.site.coordinateSystem);\n  const width = coordinateSystem === CoordinateSystem.Legacy ? 0.1 : 0.01;\n  const height = 20 * width;\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.1, 0.1, 0.9);\n    if (selection && selection.uuid === props.wall.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.wall.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.wall.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(props.wall);\n      }}\n    >\n      <boxGeometry args={[len, width, height]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React, { Suspense } from 'react'\nimport { Level } from './Level';\nimport { SceneDoor } from './SceneDoor';\nimport { SceneFeature } from './SceneFeature';\nimport { SceneFloor } from './SceneFloor';\nimport { SceneLane } from './SceneLane';\nimport { SceneImage } from './SceneImage';\nimport { SceneMeasurement } from './SceneMeasurement';\nimport { SceneModel } from './SceneModel';\nimport { SceneVertex } from './SceneVertex';\nimport { SceneWall } from './SceneWall';\nimport { useStore } from './Store';\n\ntype SceneLevelProps = {\n  level: Level\n}\n\nexport function SceneLevel(props: SceneLevelProps): JSX.Element {\n  const z = props.level.elevation / 2;\n  useStore(state => state.selection);  // needed to ensure repaints after de-selection\n\n  return (\n    <group>\n      {props.level.models.map(model =>\n        <SceneModel\n          key={model.uuid}\n          model={model}\n          level={props.level}\n          level_uuid={props.level.uuid}\n          elevation={z} />)}\n\n      {props.level.vertices.map((vertex) =>\n        <SceneVertex\n          key={vertex.uuid}\n          vertex={vertex}\n          level={props.level}\n          level_uuid={props.level.uuid}\n          elevation={z} />)}\n\n      {props.level.features.map(feature =>\n        <SceneFeature\n          key={feature.uuid}\n          feature={feature}\n          level={props.level}\n          elevation={z} />)}\n\n      {props.level.walls.map((wall) =>\n        <SceneWall\n          key={wall.uuid}\n          wall={wall}\n          level={props.level}\n          vertex_start={props.level.vertices[wall.start_idx]}\n          vertex_end={props.level.vertices[wall.end_idx]}\n          elevation={z} />)}\n\n      {props.level.doors.map((door) =>\n        <SceneDoor\n          key={door.uuid}\n          door={door}\n          level={props.level}\n          vertex_start={props.level.vertices[door.start_idx]}\n          vertex_end={props.level.vertices[door.end_idx]}\n          elevation={z} />)}\n\n      {props.level.floors.map((floor) =>\n        <SceneFloor\n          key={floor.uuid}\n          floor={floor}\n          level={props.level}\n          vertices={floor.vertex_indices.map((idx) => props.level.vertices[idx])}\n          elevation={z} />)}\n\n      <Suspense fallback={null}>\n        {props.level.lanes.map(lane =>\n          <SceneLane\n            key={lane.uuid}\n            lane={lane}\n            level={props.level}\n            vertex_start={props.level.vertices[lane.start_idx]}\n            vertex_end={props.level.vertices[lane.end_idx]}\n            elevation={z} />)}\n\n        {props.level.images.filter(image => image.isLegacyDefaultImage).map(image =>\n          <SceneImage\n            key={image.uuid}\n            image={image}\n            level={props.level}\n            elevation={z} />)}\n      </Suspense>\n\n      {props.level.measurements.map(meas =>\n        <SceneMeasurement\n          key={meas.uuid}\n          measurement={meas}\n          level={props.level}\n          vertex_start={props.level.vertices[meas.start_idx]}\n          vertex_end={props.level.vertices[meas.end_idx]}\n          elevation={z} />)}\n    </group>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { RobotTelemetry } from './Store';\nimport { Text } from '@react-three/drei'\n\ninterface SceneRobotProps {\n  telemetry: RobotTelemetry\n}\n\nexport function SceneRobot(props: SceneRobotProps): JSX.Element {\n  const color = new THREE.Color(0, 0.8, 0.8);\n  const color_pointer = new THREE.Color(0, 0.5, 0.5);\n  const color_text = new THREE.Color(0, 0.5, 0.5);\n  const radius = 0.008;\n  const height = 0.015;\n  const heading = props.telemetry.heading;\n  const x = props.telemetry.x;\n  const y = props.telemetry.y;\n  const z = props.telemetry.z; // todo: deal with multiple levels\n  const pointer_x = x + radius/2 * Math.cos(heading);\n  const pointer_y = y + radius/2 * Math.sin(heading);\n  return (\n    <group>\n      <mesh\n        position={[x, y, z + height / 2]}\n        rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n        scale={1.0}\n        key={props.telemetry.name}\n      >\n        <cylinderGeometry args={[radius, radius, height, 16]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <mesh\n        position={[pointer_x, pointer_y, z + height * 1.1]}\n        rotation={new THREE.Euler(0, 0, heading)}\n        scale={1.0}\n        key={props.telemetry.name + '_pointer'}\n      >\n        <planeGeometry args={[radius, radius/4]} />\n        <meshStandardMaterial color={color_pointer} />\n      </mesh>\n      <Text fontSize={radius/3} color={color_text} position={[x, y + radius/2, z + height + 0.001]}>\n        {props.telemetry.name}\n      </Text>\n    </group>\n  );\n}\n","import * as THREE from 'three'\nimport React from 'react'\nimport { useStore } from './Store';\nimport { SceneLevel } from './SceneLevel';\nimport { CoordinateSystem } from './CoordinateSystem';\nimport { useFrame, useThree } from '@react-three/fiber';\nimport { SceneRobot } from './SceneRobot';\n\ntype SceneSiteProps = {\n}\n\nexport function SceneSite(props: SceneSiteProps): JSX.Element {\n  const site = useStore(state => state.site);\n  useStore(state => state.selection);  // needed to ensure repaints after de-selection\n  useStore(state => state.repaintCount);  // needed to ensure repaints after tweaks\n  const setStore = useStore(state => state.set);\n  const robots = useStore(state => state.mqtt_robot_telemetry);\n  const scene = useThree(state => state.scene);\n  scene.background = new THREE.Color('white');\n\n  useFrame(state => {\n    if (state.camera instanceof THREE.OrthographicCamera) {\n      const c: THREE.OrthographicCamera = state.camera as THREE.OrthographicCamera;\n      //const scale = 1000;\n      const center_x = c.matrixWorld.elements[12];\n      const center_y = c.matrixWorld.elements[13];\n      const center_z = c.matrixWorld.elements[14];\n      setStore(state => {\n        state.cameraPose = {\n          position: state.cameraPose.position.set(center_x, center_y, center_z),\n          target: state.cameraPose.target,\n          zoom: state.cameraPose.zoom,\n        };\n      });\n    }\n  });\n\n  return (\n    <group>\n      {(site.coordinateSystem === CoordinateSystem.Legacy) && <pointLight position={[10, 10, 10]} />}\n      {site.levels.map((level) => <SceneLevel key={level.uuid} level={level} />)}\n      {robots.map((robot) => <SceneRobot telemetry={robot} />)}\n    </group>\n  );\n}\n","import React from 'react';\n//import { Text } from '@react-three/drei'\nimport * as THREE from 'three'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\nimport { useStore, addVertex } from './Store';\nimport { ToolID } from './ToolID';\n\ntype SceneMapTileProps = {\n  x: number,\n  y: number,\n  zoom: number,\n}\n\nexport function SceneMapTile(props: SceneMapTileProps): JSX.Element {\n  const activeTool = useStore(state => state.activeTool);\n  const editorMode = useStore(state => state.editorMode);\n  //const site = useStore(state => state.site);\n  //const setStore = useStore(state => state.set);\n\n  const key = `${props.zoom}_${props.x}_${props.y}`;\n\n  // compute the world distance of a side of this tile\n  const scale = 1000;\n  const side_len = 1.000 * 256 * scale / Math.pow(2, props.zoom);\n\n  // compute the world x and y coords of the center of this tile\n  const wx = props.x * 256 * scale / Math.pow(2, props.zoom) + side_len / 2;\n  const wy = -1 * (props.y * 256 * scale / Math.pow(2, props.zoom) + side_len / 2);\n\n  const url = `https://tiles.demo.open-rmf.org/tiles/${props.zoom}/${props.x}/${props.y}.png`;\n  const [texture, setTexture] = React.useState<THREE.Texture>();\n  React.useEffect(() => { new TextureLoader().load(url, setTexture)}, [url]);\n  if (texture && props.zoom === 18) {\n    texture.magFilter = THREE.NearestFilter;\n    //texture.minFilter = THREE.NearestFilter;\n    //texture.encoding = THREE.LinearEncoding; // not sure why this is needed...\n    //texture.encoding = THREE.sRGBEncoding; // not sure why this is needed...\n  }\n\n  return (\n    <group>\n      <mesh\n        position={[wx, wy, -0.05]}\n        scale={1}\n        rotation={new THREE.Euler(0, 0, 0)}\n        key={key}\n        onPointerDown={event => {\n          event.stopPropagation();\n          if (activeTool === ToolID.ADD_VERTEX) {\n            if (editorMode === '2d') {\n              addVertex(event.unprojectedPoint.x, event.unprojectedPoint.y);\n\n              /*\n              const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n              updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, px, py);\n              */\n            }\n            else {\n              /*\n              let intersection_point = new THREE.Vector3();\n              event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n              const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n              updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, px, py);\n              */\n            }\n          }\n        }}\n      >\n        <boxGeometry args={[side_len, side_len, 0.1, 8]} />\n        <meshStandardMaterial key={texture ? 'texture' : 'notexture'} map={texture} color={[1, 1, 1]} />\n      </mesh>\n    </group>\n  );\n}\n\n/*\n * debugging debris here...\n<Text fontSize={10 * scale / Math.pow(2, props.zoom)} color=\"blue\" position={[wx, wy, 10.2]}>\n  {key}\n</Text>\n */\n","import * as THREE from 'three'\nimport React from 'react';\n//import { useStore } from './Store';\nimport { useThree } from '@react-three/fiber';\nimport { SceneMapTile } from './SceneMapTile';\nimport { disableEditorTools } from './Store';\n\ntype SceneMapProps = {\n}\n\n/*\nfunction r(value: number): string {\n  return (value >= 0 ? '+' : '') + (Math.round(value * 10000) / 10000).toFixed(4);\n}\n\nfunction printMatrix(name: string, m: THREE.Matrix4) {\n  console.log(name);\n  const e = m.elements;\n  // it's stored column-major...\n  console.log(`${r(e[0])} ${r(e[4])} ${r(e[8])} ${r(e[12])}`);\n  console.log(`${r(e[1])} ${r(e[5])} ${r(e[9])} ${r(e[13])}`);\n  console.log(`${r(e[2])} ${r(e[6])} ${r(e[10])} ${r(e[14])}`);\n  console.log(`${r(e[3])} ${r(e[7])} ${r(e[11])} ${r(e[15])}`);\n}\n\nfunction printVector(name: string, v: THREE.Vector4) {\n  console.log(`${name}: ${r(v.x)} ${r(v.y)} ${r(v.z)} ${r(v.w)}`);\n}\n*/\n\nfunction clamp(v: number, v_min: number, v_max: number): number {\n  if (v < v_min)\n    return v_min;\n  else if (v > v_max)\n    return v_max;\n  return v;\n}\n\ntype TileDescription = {\n  x: number,\n  y: number,\n  zoom: number,\n}\n\nexport function SceneMap(props: SceneMapProps): JSX.Element {\n  const [tiles, setTiles] = React.useState<TileDescription[]>([]);\n  const viewport = useThree(state => state.viewport);\n  const camera = useThree(state => state.camera);\n  const canvasSize = useThree(state => state.size);\n  const currentPerformance = useThree(state => state.performance.current);\n\n  React.useEffect(() => {\n    // recalculate visible tiles after camera-control motion is completed\n    // in the future, could also have a useFrame() handler checking if \n    // currentPerformance is <1 to have the tiles recalculate while the\n    // motion is in-flight\n    if (currentPerformance === 1) {\n      //console.log('recalculate tiles');\n      if (camera instanceof THREE.OrthographicCamera) {\n        const c: THREE.OrthographicCamera = camera as THREE.OrthographicCamera;\n        /*\n        console.log(`orthographic camera: ${c.left} ${c.right}, ${c.top}, ${c.bottom}, ${c.zoom}`);\n        console.log(`  viewport: ${viewport.width}, ${viewport.height}`);\n        console.log(`  dpr: ${viewport.dpr}`);\n        console.log(`  aspect: ${viewport.aspect}`);\n        console.log(`  canvas size: ${canvasSize.width}, ${canvasSize.height}`);\n        printMatrix('projection', camera.projectionMatrix);\n        printMatrix('projectionMatrixInverse', camera.projectionMatrixInverse);\n        printMatrix('matrixWorld', camera.matrixWorld);\n        printMatrix('matrixWorldInverse', camera.matrixWorldInverse);\n         */\n        // find world-coordinate bounds of the viewport: web mercator (0, 0) => (256, -256)\n        const scale = 1000;\n\n        const center_x = camera.matrixWorld.elements[12];\n        const center_y = camera.matrixWorld.elements[13];\n        const right_x = (center_x + c.right / c.zoom);\n        const left_x = (center_x + c.left / c.zoom);\n        const top_y = -(center_y + c.top / c.zoom);\n        const bottom_y = -(center_y + c.bottom / c.zoom);\n        //console.log(`extents: (${r(left_x)}, ${r(top_y)}) - (${r(right_x)}, ${r(bottom_y)})`);\n\n        // calculate web mercator zoom level do put a few tiles on the screen\n        // todo: incorporate the number of pixels in the canvas; small resolutions don't need as many.\n        let zoom_level = Math.ceil(1.5 + Math.log(scale * 256 / (right_x - left_x)) / Math.log(2));\n        const MAX_ZOOM = 18;\n        if (zoom_level < 0)\n          zoom_level = 0;\n        else if (zoom_level > MAX_ZOOM)\n          zoom_level = MAX_ZOOM;\n        //console.log(`  zoom: ${zoom_level}`);\n\n        disableEditorTools(zoom_level < 17);\n\n        let left_x_grid_idx = Math.floor(left_x / (256 * scale) * Math.pow(2, zoom_level));\n        let right_x_grid_idx = Math.floor(right_x / (256 * scale) * Math.pow(2, zoom_level));\n        // invert Y since we're operating in 4th quadrant to keep +z = \"up\"\n        let top_y_grid_idx = Math.floor(top_y / (256 * scale) * Math.pow(2, zoom_level));\n        let bottom_y_grid_idx = Math.floor(bottom_y / (256 * scale) * Math.pow(2, zoom_level));\n        //console.log(`  grid: (${left_x_grid_idx}, ${top_y_grid_idx}) - (${right_x_grid_idx}, ${bottom_y_grid_idx})`);\n\n\n        //const PHI_MAX = 85.05112877980659;  // web mercator... 2*atan(e^pi) - pi/2\n        //let top_y_grid_idx = Math.pow(2, zoom_level) - 1 - Math.floor(1 / (2 * PHI_MAX) * Math.pow(2, zoom_level) * (top_y + PHI_MAX));\n        //let bottom_y_grid_idx = Math.pow(2, zoom_level) - 1 - Math.ceil(1 / (2 * PHI_MAX) * Math.pow(2, zoom_level) * (bottom_y + PHI_MAX));\n        //const bottom_y_grid_idx = Math.floor(1 / 360 * Math.pow(2, zoom_level) * (right_x + 180));\n\n        const max_cell = Math.pow(2, zoom_level) - 1;\n        left_x_grid_idx = clamp(left_x_grid_idx, 0, max_cell);\n        right_x_grid_idx = clamp(right_x_grid_idx, 0, max_cell);\n        top_y_grid_idx = clamp(top_y_grid_idx, 0, max_cell);\n        bottom_y_grid_idx = clamp(bottom_y_grid_idx, 0, max_cell);\n\n        /*\n        console.log(`horizontal ${left_x},${right_x} => ${left_x_grid_idx},${right_x_grid_idx}`);\n        console.log(`vertical ${bottom_y},${top_y} => ${bottom_y_grid_idx},${top_y_grid_idx}`);\n         */\n\n        let next_tiles = Array<TileDescription>();\n        for (let y_idx = top_y_grid_idx; y_idx <= bottom_y_grid_idx; y_idx++) {\n          for (let x_idx = left_x_grid_idx; x_idx <= right_x_grid_idx; x_idx++) {\n            //console.log(`looking for tile (${x_idx}, ${y_idx}, ${zoom_level})`);\n            //const tile_str = `${x_idx}_${y_idx}_${zoom_level}`;\n            const tile_desc = { x: x_idx, y: y_idx, zoom: zoom_level, visible: true };\n            next_tiles.push(tile_desc);\n          }\n        }\n        setTiles(next_tiles);\n        console.log('setTiles()');\n\n        /*\n        const upper_left = new THREE.Vector4(c.left, c.top, 0, 1);\n        upper_left.applyMatrix4(camera.projectionMatrix);\n        upper_left.applyMatrix4(camera.matrixWorld);\n        //const upper_left_cast: THREE.Vector4 = camera.matrixWorld * camera.projectionMatrix * upper_left;\n        printVector('upper_left', upper_left);\n         */\n      }\n    }\n  }, [currentPerformance, camera, viewport, canvasSize]);\n\n  /*\n  useFrame(state => {\n    //console.log(`viewport: ${state.viewport.width}, ${state.viewport.height}, ${state.viewport.factor}`);\n    //console.log(`camera: ${state.camera.projectionMatrix.elements}  ${state.camera.matrixWorld.elements}`);\n    //console.log(`viewport: ${state.viewport.width}, ${state.viewport.height}, ${state.viewport.factor}`);\n    //console.log(`camera class: ${typeof state.camera.constructor.name}`);\n  });\n  */\n\n  return (\n    <group>\n      {tiles.map(tile_desc =>\n        <SceneMapTile\n          x={tile_desc.x}\n          y={tile_desc.y}\n          zoom={tile_desc.zoom}\n          key={`${tile_desc.zoom}_${tile_desc.x}_${tile_desc.y}`}\n        />\n      )}\n    </group>\n  );\n}\n","import React from 'react'\nimport { useThree } from '@react-three/fiber';\nimport { useStore, clearSelection, setActiveTool } from './Store';\nimport { ToolID } from './ToolID';\n\ntype ShortcutKeysProps = {\n}\n\nexport function ShortcutKeys(props: ShortcutKeysProps): JSX.Element {\n  const canvas = useThree(state => state.gl.domElement);\n  const setStore = useStore(state => state.set);\n\n  React.useEffect(() => {\n    canvas.tabIndex = 42;  // hack...\n    const keyDown = (event: KeyboardEvent) => {\n\n      if (event.key === undefined)\n        return;  // somehow this happens sometimes\n\n      let key = event.key.toLowerCase();\n      if (key === 'm') {\n        setActiveTool(ToolID.MOVE);\n        clearSelection(setStore);\n      } else if (key === 'escape') {\n        setActiveTool(ToolID.SELECT);\n        clearSelection(setStore);\n      } else if (key === 'v') {\n        setActiveTool(ToolID.ADD_VERTEX);\n        clearSelection(setStore);\n      } else if (key === 'l') {\n        setActiveTool(ToolID.ADD_LANE);\n        clearSelection(setStore);\n      }\n    }\n\n    canvas.addEventListener('keydown', keyDown);\n    return () => {\n      canvas.removeEventListener('keydown', keyDown);\n    };\n  }, [canvas, setStore]);\n\n  return (\n    <>\n    </>\n  );\n}\n","import * as THREE from 'three';\nimport { Canvas } from '@react-three/fiber';\nimport React, { useRef } from 'react';\nimport { OrbitControls } from '@react-three/drei';\nimport { PerspectiveCamera, OrthographicCamera } from '@react-three/drei';\nimport { CoordinateSystem } from './CoordinateSystem';\n\nimport { useStore, clearSelection } from './Store';\nimport { SceneSite } from './SceneSite';\nimport { SceneMap } from './SceneMap';\nimport { ShortcutKeys } from './ShortcutKeys';\n//import { ToolID } from './ToolID';\n\ntype EditorSceneProps = {\n};\n\nexport function EditorScene(props: EditorSceneProps): JSX.Element {\n  const showMap = useStore(state => (state.site.coordinateSystem === CoordinateSystem.WebMercator));\n  const setStore = useStore(state => state.set);\n  //const clearSelection = useStore(state => state.clearSelection);\n  const editorMode = useStore(state => state.editorMode);\n  //const activeTool = useStore(state => state.activeTool);\n  //const disableEditorTools = useStore(state => state.disableEditorTools);\n\n  const Controls = (): JSX.Element => {\n    THREE.Object3D.DefaultUp = new THREE.Vector3(0, 0, 1);\n    const cameraInitialPose = useStore(state => state.cameraInitialPose);\n    const perspective_camera = useRef<THREE.Camera>(null);\n    const orthographic_camera = useRef<THREE.Camera>(null);\n    const enableMotionControls = useStore(state => state.enableMotionControls);\n    // const zoomToSelection = useStore(state => state.zoomToSelection);\n\n    // todo: there is probably a better way to do this than having two cameras\n    return (\n      <>\n        <PerspectiveCamera\n          ref={perspective_camera}\n          position={cameraInitialPose.position}\n          fov={60}\n          makeDefault={editorMode === '3d'}\n        />\n        <OrthographicCamera\n          ref={orthographic_camera}\n          position={[cameraInitialPose.target.x, cameraInitialPose.target.y, cameraInitialPose.target.z + 100]}\n          zoom={cameraInitialPose.zoom}\n          makeDefault={editorMode === '2d'}\n        />\n        {perspective_camera && orthographic_camera && <OrbitControls\n          enableDamping={false}\n          screenSpacePanning={editorMode === '3d' ? false : true}\n          target={cameraInitialPose.target}\n          camera={editorMode === '3d' ? perspective_camera.current! : orthographic_camera.current!}\n          maxPolarAngle={editorMode === '3d' ? Infinity : 0}\n          minAzimuthAngle={editorMode === '3d' ? -Infinity : 0}\n          maxAzimuthAngle={editorMode === '3d' ? Infinity : 0}\n          mouseButtons={{\n            LEFT: THREE.MOUSE.PAN,\n            MIDDLE: -1,\n            RIGHT: THREE.MOUSE.ROTATE,\n          }}\n          touches={{\n            ONE: THREE.TOUCH.PAN,\n            TWO: THREE.TOUCH.ROTATE\n          }}\n          enabled={enableMotionControls}\n          regress={true}\n        />}\n      </>\n    );\n  }\n\n  console.log('EditorScene()');\n  return (\n    <Canvas\n      id=\"mainCanvas\"\n      frameloop=\"demand\"\n      mode=\"concurrent\"\n      linear={true}\n      tabIndex={0}\n      onPointerMissed={() => {\n        clearSelection(setStore);\n      }}\n    >\n      <ShortcutKeys />\n      <Controls />\n      <axesHelper />\n      <ambientLight intensity={1.0}/>\n      <SceneSite />\n      {showMap && <SceneMap />}\n    </Canvas>\n  )\n}\n/*\n      <Suspense fallback={null} >\n      <pointLight position={[10, 10, 10]} />\n      </Suspense>\n*/\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\n\nimport { EditorParam } from './EditorParam';\nimport { useStore } from './Store';\n\ninterface PropertyEditorParamProps {\n  param: EditorParam,\n}\n\nexport default function PropertyEditorParam(props: PropertyEditorParamProps): JSX.Element {\n  const [checked, setChecked] = React.useState(props.param.value);\n  const [stringValue, setStringValue] = React.useState(props.param.value);\n  const selection = useStore(state => state.selection);\n  const string_field = React.useRef<HTMLInputElement>();\n  //console.log(`PropertyEditorParam(${props.param.name})`);\n\n  React.useEffect(() => {\n    setChecked(props.param.value);\n    setStringValue(props.param.value);\n  }, [selection, props.param]);\n\n  const handleCheckboxChange = (event: any) => {\n    setChecked(event.target.checked);\n    props.param.value = event.target.checked;\n    useStore.setState({\n      site: useStore.getState().site,\n      repaintCount: useStore.getState().repaintCount + 1,\n    });\n  }\n\n  const handleStringFieldChange = (event: any) => {\n    setStringValue(event.target.value);\n    props.param.value = event.target.value;\n    useStore.setState({\n      site: useStore.getState().site,\n      repaintCount: useStore.getState().repaintCount + 1,\n    });\n  }\n\n  // todo: deal with 2=integer, 3=float\n\n  if (props.param.type_idx === 4) {\n    // boolean\n    return (\n      <Checkbox\n        color=\"primary\"\n        id={props.param.name + '_checkbox'}\n        checked={checked}\n        onChange={handleCheckboxChange}\n      />\n    );\n  }\n  else if (props.param.type_idx === 1) {\n    // string\n    return (\n      <div>\n        <TextField\n          id={props.param.name + '_string_field'}\n          inputRef={string_field}\n          variant=\"outlined\"\n          margin=\"dense\"\n          value={stringValue}\n          onChange={handleStringFieldChange} />\n      </div>\n    );\n  }\n  else\n    return <div>{props.param.value.toString()}</div>;\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport { EditorProp } from './EditorProp';\nimport { useStore } from './Store';\n\ninterface PropertyEditorPropProps {\n  prop: EditorProp,\n}\n\nexport default function PropertyEditorProp(props: PropertyEditorPropProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const field = React.useRef<HTMLInputElement>();\n  const [value, setValue] = React.useState(props.prop.get_value());\n  React.useEffect(() => {\n    setValue(props.prop.get_value());\n  }, [selection, props.prop]);\n\n  const handleFieldChange = (event: any) => {\n    if (props.prop.canModify) {\n      setValue(event.target.value);\n      props.prop.set_value(event.target.value);\n      useStore.setState({\n        site: useStore.getState().site,\n        repaintCount: useStore.getState().repaintCount + 1,\n      });\n    }\n  }\n\n  if (props.prop.canModify) {\n    return (\n      <TextField\n        id={\"field\"}\n        inputRef={field}\n        variant=\"outlined\"\n        margin=\"dense\"\n        value={value}\n        onChange={handleFieldChange} />\n    );\n  }\n  else\n    return <div>{props.prop.get_value()}</div>;\n}\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { useStore } from './Store';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropertyEditorParam from './PropertyEditorParam';\nimport PropertyEditorProp from './PropertyEditorProp';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  noSelectionDiv: {\n  },\n  table: {\n    padding: '0px',\n    margin: '0px'\n  },\n  tableHead: {\n  },\n  tableHeadRow: {\n    borderBottomStyle: 'solid',\n    borderBottom: '1px',\n    borderBottomColor: theme.palette.primary.main,\n  },\n  tableHeadCell: {\n    fontWeight: 'bold',\n    padding: '0px',\n    paddingLeft: '5px',\n  },\n  tableCell: {\n    padding: '0px',\n    paddingLeft: '5px',\n  }\n}));\n\n/*\n      <TableHead className={classes.tableHead}>\n        <TableRow className={classes.tableHeadRow}>\n          <TableCell className={classes.tableHeadCell}>Property Name</TableCell>\n          <TableCell className={classes.tableHeadCell}>Property Value</TableCell>\n        </TableRow>\n      </TableHead>\n */\n\nexport default function PropertyEditor(): JSX.Element {\n  const classes = useStyles();\n  const selection = useStore(state => state.selection);\n  useStore(state => state.propertyRepaintCount);  // repaint during tool moves\n\n  if (!selection) {\n    return (<div className={classes.noSelectionDiv}></div>);\n  }\n\n  return (\n    <Table className={classes.table}>\n      <TableHead>\n        <TableCell className={classes.tableHeadCell}>{selection.object_type_name}</TableCell>\n        <TableCell className={classes.tableHeadCell}></TableCell>\n      </TableHead>\n      <TableBody>\n        {selection.props.map(prop =>\n          <TableRow>\n            <TableCell className={classes.tableCell}>{prop.name}</TableCell>\n            <TableCell key={prop.name + '_control'} className={classes.tableCell}>\n              <PropertyEditorProp prop={prop} />\n            </TableCell>\n          </TableRow>\n        )}\n        {selection.params.map(param =>\n          <TableRow>\n            <TableCell className={classes.tableCell}>{param.name}</TableCell>\n            <TableCell key={param.name + '_control'} className={classes.tableCell}>\n              <PropertyEditorParam param={param} />\n            </TableCell>\n          </TableRow>\n        )}\n      </TableBody>\n    </Table>\n  );\n}\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MapIcon from '@material-ui/icons/Map';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { YAMLParser } from './YAMLParser';\nimport { useStore } from './Store';\nimport YAML from 'yaml';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  directoryButton: {\n    fontSize: theme.typography.h5.fontSize\n  },\n  filename: {\n    fontSize: theme.typography.h5.fontSize,\n    textDecoration: 'underline'\n  },\n  dialog: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\ntype OpenDialogProps = {\n  open: boolean;\n  onOpen: () => void; //filename: string, handle: FileSystemDirectoryHandle | undefined) => void;\n  onCancel: () => void;\n};\n\nexport default function OpenDialog(props: OpenDialogProps): JSX.Element {\n  const classes = useStyles(props);\n  const [buildingFileNames, setBuildingFileNames] = React.useState<string[]>([]);\n  const [directoryHandle, setDirectoryHandle] = React.useState<FileSystemDirectoryHandle>();\n\n  const onDirectoryClick = async () => {\n    setBuildingFileNames([]);\n    const handle = await window.showDirectoryPicker();\n    await setDirectoryHandle(handle);\n    for await (const entry of handle.values()) {\n      if (entry.name.endsWith('.building.yaml'))\n        setBuildingFileNames(previous => [...previous, entry.name]);\n    }\n  }\n\n  const loadFile = async(filename: string) => {\n    if (directoryHandle) {\n      const fileHandle = await directoryHandle.getFileHandle(filename);\n      const file = await fileHandle.getFile();\n      const text = await file.text();\n      YAMLParser(text, '');\n\n      let site = useStore.getState().site;\n      site.filename = filename;\n      site.save = async () => {\n        const fileHandle = await directoryHandle.getFileHandle(filename, {create: true});\n        const writable = await fileHandle.createWritable();\n        Object.getPrototypeOf(YAML.YAMLMap).maxFlowStringSingleLineLength = 10000;\n        await writable.write(site.toYAMLString());\n        await writable.close();\n      }\n\n      useStore.setState({site: site});\n    }\n    props.onOpen();\n  }\n\n  const buildingFileList = () => {\n    if (buildingFileNames.length > 0)\n      return (\n        <div>\n          <List\n            subheader={\n              <ListSubheader component=\"div\">\n                Available Files\n              </ListSubheader>\n            }\n          >\n            {buildingFileNames.map((filename) =>\n              <ListItem button key={filename}>\n                <ListItemIcon>\n                  <MapIcon />\n                </ListItemIcon>\n                <ListItemText primary={filename} onClick={e => {loadFile(filename)}} />\n              </ListItem>)\n            }\n          </List>\n        </div>\n      );\n  }\n\n  return (\n    <Dialog open={props.open} onClose={props.onCancel}>\n      <DialogTitle>Open Building Map</DialogTitle>\n      <DialogContent className={classes.dialog}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onDirectoryClick}>\n          Select Directory...\n        </Button>\n        {buildingFileList()}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onCancel} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useRef } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport YAML from 'yaml';\n\nimport { Site } from './Site';\nimport { useStore } from './Store';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  directoryButton: {\n    fontSize: theme.typography.h5.fontSize\n  },\n  filename: {\n    fontSize: theme.typography.h5.fontSize,\n    textDecoration: 'underline'\n  },\n  dialog: {\n    backgroundColor: theme.palette.background.paper,\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\ntype NewDialogProps = {\n  open: boolean;\n  onNew: () => void;\n  onCancel: () => void;\n  close: () => void;\n};\n\nexport default function NewDialog(props: NewDialogProps): JSX.Element {\n  const classes = useStyles(props);\n  // const [buildingFileNames, setBuildingFileNames] = React.useState<string[]>([]);\n  const [directoryHandle, setDirectoryHandle] = React.useState<FileSystemDirectoryHandle>();\n  const site_name = useRef<HTMLInputElement>();\n\n  const onDirectoryClick = async () => {\n    //setBuildingFileNames([]);\n    const handle = await window.showDirectoryPicker({ writable: true});\n    //handle.requestPermission({ writable: true });\n    setDirectoryHandle(handle);\n    /*\n    for await (const entry of handle.values()) {\n      if (entry.name.endsWith('.building.yaml'))\n        setBuildingFileNames(previous => [...previous, entry.name]);\n    }\n    */\n  }\n\n  const createNewMap = () => {\n    if (directoryHandle) {\n      const site = Site.fromNewCommand();\n      if (site_name.current) {\n        site.name = site_name.current?.value;\n        site.filename = site_name.current?.value + '.building.yaml';\n        site.save = async () => {\n          const fileHandle = await directoryHandle.getFileHandle(site.filename, {create: true});\n          const writable = await fileHandle.createWritable();\n          Object.getPrototypeOf(YAML.YAMLMap).maxFlowStringSingleLineLength = 10000;\n          await writable.write(site.toYAMLString());\n          await writable.close();\n        }\n      }\n      const cameraInitialPose = site.computeInitialCameraPose();\n      useStore.setState({\n        site: site,\n        selection: null,\n        cameraInitialPose: cameraInitialPose,\n      });\n      props.close();\n    }\n  }\n\n  /*\n  const loadFile = async(filename: string) => {\n    if (directoryHandle) {\n      const fileHandle = await directoryHandle.getFileHandle(filename);\n      const file = await fileHandle.getFile();\n      const text = await file.text();\n      YAMLParser(text, '');\n    }\n    props.onOpen();\n  }\n  */\n\n  /*\n  const buildingFileList = () => {\n    if (buildingFileNames.length > 0)\n      return (\n        <div>\n          <List\n            subheader={\n              <ListSubheader component=\"div\">\n                Available Files\n              </ListSubheader>\n            }\n          >\n            {buildingFileNames.map((filename) =>\n              <ListItem button key={filename}>\n                <ListItemIcon>\n                  <MapIcon />\n                </ListItemIcon>\n                <ListItemText primary={filename} onClick={e => {loadFile(filename)}} />\n              </ListItem>)\n            }\n          </List>\n        </div>\n      );\n  }\n  */\n\n  const isFileSystemAccessible = (typeof window['showDirectoryPicker'] === \"function\");\n\n  return (\n    <Dialog open={props.open} onClose={props.onCancel}>\n      <DialogTitle>New Site Map</DialogTitle>\n      <DialogContent className={classes.dialog}>\n        {isFileSystemAccessible ?\n          <>\n            <div>\n              <Button variant=\"contained\" color=\"primary\" onClick={onDirectoryClick}>\n                Select Directory...\n              </Button>\n            </div>\n            <div>\n              <TextField id=\"site-name\" inputRef={site_name} variant=\"outlined\" label=\"Site Name\" />\n            </div>\n          </>\n          :\n          <div>\n            Unfortunately, this browser does not support the File System Access API.\n          </div>\n        }\n      </DialogContent>\n      <DialogActions>\n        <>\n          {isFileSystemAccessible ?\n            <Button onClick={createNewMap} color=\"primary\">\n              OK\n            </Button>\n            : <></>\n          }\n          <Button onClick={props.onCancel} color=\"primary\">\n            Cancel\n          </Button>\n        </>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useRef } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\n\nimport { useStore, RobotTelemetry } from './Store';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport mqtt from 'mqtt';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  dialog: {\n    backgroundColor: theme.palette.background.paper,\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\ntype MqttDialogProps = {\n  open: boolean;\n  close: () => void;\n};\n\nexport default function NewDialog(props: MqttDialogProps): JSX.Element {\n  const classes = useStyles(props);\n  const broker_host = useRef<HTMLInputElement>();\n  const broker_port = useRef<HTMLInputElement>();\n\n  const onOK = () => {\n    // todo: use host/port strings\n    const client = mqtt.connect(\"ws://localhost:9001\");\n    client.on('connect', () => {\n      console.log('MQTT connected!');\n      client.subscribe('/robots/#');\n    });\n    client.on('message', (topic, payload, packet) => {\n      //if (top\n      // console.log('topic: ' + topic + '   payload: ' + payload);\n      const topic_tokens = topic.split('/');\n      if (topic_tokens.length === 4 &&\n        topic_tokens[1] === \"robots\" &&\n        topic_tokens[3] === \"state\") {\n        const robot_name = topic_tokens[2];\n        // console.log('robot name: ' + robot_name);\n        let telemetry_payload: any = {};\n        try {\n          telemetry_payload = JSON.parse(payload.toString());\n        }\n        catch (e) {\n          console.log('unable to parse: ' + payload.toString());\n        }\n        if ('latitude' in telemetry_payload &&\n          'longitude' in telemetry_payload) {\n\n          // a bit of trig to convert lat/lon to web mercator\n          // the extra 1000 scale is needed to make the drag-threshold\n          // detection work nicely in OrbitControls\n          const lat_webm = 256000 * (telemetry_payload['longitude'] + 180) / 360;\n          const lat_radians = telemetry_payload['latitude'] * Math.PI / 180;\n          const lon_webm = -(128000 - 256000 * Math.log(Math.tan(Math.PI / 4 + lat_radians / 2)) / (2 * Math.PI));\n          // console.log(`telemetry: (${telemetry_payload['latitude']}, ${telemetry_payload['longitude']}) -> (${lat_webm}, ${lon_webm})`);\n\n          // deal with heading\n          let heading = 0;\n          if ('heading' in telemetry_payload) {\n            heading = telemetry_payload['heading'];  // todo: radians?\n          }\n\n          let robots = useStore.getState().mqtt_robot_telemetry;\n          let found_robot = false;\n          robots = robots.map(robot => {\n            if (robot.name === robot_name) {\n              let updated_robot: RobotTelemetry = {\n                name: robot.name,\n                x: lat_webm,\n                y: lon_webm,\n                z: 0,\n                heading: heading,\n              };\n              found_robot = true;\n              return updated_robot;\n            }\n            else {\n              return robot;\n            }\n          });\n          if (!found_robot) {\n            const robot_telemetry = {\n              name: robot_name,\n              x: lat_webm,\n              y: lon_webm,\n              z: 0,\n              heading: heading,\n            };\n            robots = [...robots, robot_telemetry];\n          }\n          useStore.setState({ mqtt_robot_telemetry: robots });\n        }\n      }\n    });\n    useStore.setState({ mqtt_client: client });\n    props.close();\n  }\n  /*\n  useStore.setState({\n    site: site,\n    selection: null,\n    cameraInitialPose: cameraInitialPose,\n  });\n  props.close();\n  */\n\n  return (\n    <Dialog open={props.open} onClose={props.close}>\n      <DialogTitle>MQTT Connection</DialogTitle>\n      <DialogContent className={classes.dialog}>\n        <div>\n          <TextField\n            id=\"broker-host\"\n            inputRef={broker_host}\n            variant=\"outlined\"\n            label=\"Broker Host\"\n            defaultValue=\"localhost\" />\n        </div>\n        <div>\n          <TextField\n            id=\"broker-port\"\n            inputRef={broker_port}\n            type=\"number\"\n            variant=\"outlined\"\n            label=\"Broker Port\"\n            defaultValue=\"9001\" />\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onOK} color=\"primary\">\n          OK\n        </Button>\n        <Button onClick={props.close} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport { useStore, setEditorMode, clearSelection, setActiveTool, saveStore } from './Store';\nimport { ToolID } from './ToolID';\nimport { Site } from './Site';\nimport OpenDialog from './OpenDialog';\nimport NewDialog from './NewDialog';\nimport MqttDialog from './MqttDialog';\nimport { YAMLRetriever, YAMLRetrieveDemo } from './YAMLParser';\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\nimport PanToolIcon from '@material-ui/icons/PanTool';\nimport RouterIcon from '@material-ui/icons/Router';\n\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DirectionsCarIcon from '@material-ui/icons/DirectionsCar';\nimport TextureIcon from '@material-ui/icons/Texture';\n\nimport * as THREE from 'three';\n\nconst StyledToggleButtonGroup = withStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(0.5),\n    marginRight: 5\n  },\n  grouped: {\n    //marginRight: theme.spacing(0.5),\n    //marginLeft: theme.spacing(0.5),\n    //margin: theme.spacing(0.5),\n    color: theme.palette.primary.contrastText,\n    //background: theme.palette.primary.dark,\n    \"&.Mui-selected:hover, &:hover\": {\n      background: theme.palette.primary.dark,\n    },\n    \"&.Mui-selected\": {\n      background: theme.palette.primary.dark,\n      color: theme.palette.primary.contrastText\n    },\n    /*\n    '&:not(:first-child)': {\n      borderRadius: '5px',\n    },\n    '&:first-child': {\n      borderRadius: '5px',\n    },\n    */\n  },\n}))(ToggleButtonGroup);\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  appTitle: {\n    marginRight: 20\n  },\n  filler: {\n    flex: 1\n  }\n}));\n\nexport default function MainMenu(props: React.PropsWithChildren<{}>): JSX.Element {\n  const classes = useStyles(props);\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState(null);\n  const [isOpenDialogOpen, setIsOpenDialogOpen] = React.useState(false);\n  const [isNewDialogOpen, setIsNewDialogOpen] = React.useState(false);\n  const [isMqttDialogOpen, setIsMqttDialogOpen] = React.useState(false);\n  const [snackOpen, setSnackOpen] = React.useState(false);\n  const [snackMessage, setSnackMessage] = React.useState('');\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const activeTool = useStore(state => state.activeTool);\n  const disableEditorTools = useStore(state => state.disableEditorTools);\n\n  const onModeChange = (event: React.MouseEvent<HTMLElement>, newMode: string | null) => {\n    if (newMode !== null) {\n      if (editorMode === '2d') {\n        /*\n        const x = store.cameraPose.position.x;\n        const y = store.cameraPose.position.y;\n        console.log(`previous 2d center point: ${x}, ${y}`);\n         */\n        setStore(state => {\n          state.cameraInitialPose = {\n            position: new THREE.Vector3(state.cameraPose.position.x + 2, state.cameraPose.position.y - 2, 10),\n            target: new THREE.Vector3(state.cameraPose.position.x, state.cameraPose.position.y, 0),\n            zoom: 20,\n          };\n        });\n      }\n      setEditorMode(setStore, newMode);\n      clearSelection(setStore);\n    }\n  };\n\n  const onToolChange = (event: React.MouseEvent<HTMLElement>, newTool: ToolID | null) => {\n    if (newTool !== null) {\n      setActiveTool(newTool);\n      clearSelection(setStore);\n    }\n  }\n\n  React.useEffect(() => {\n    const keyDown = (event: KeyboardEvent) => {\n      if (event.key === undefined)\n        return;  // somehow this happens sometimes\n\n      let key = event.key.toLowerCase();\n      if (key === 's' && event.ctrlKey) {\n        event.preventDefault();\n        saveStore();\n        return false;\n      }\n    };\n\n    window.addEventListener('keydown', keyDown);\n    return () => {\n      window.removeEventListener('keydown', keyDown);\n    };\n  }, []);\n\n  const snackClose = () => {\n    setSnackOpen(false);\n  }\n\n  React.useEffect(() => {\n    setStore(state => {\n      state.enableMotionControls = (activeTool === ToolID.SELECT);\n    });\n  }, [activeTool, setStore]);\n\n  return (\n    <AppBar position=\"fixed\">\n      <ToolBar>\n        <IconButton\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"Menu\"\n          onClick={(e: any) => { setMenuAnchorEl(e.currentTarget); }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          keepMounted\n          anchorEl={menuAnchorEl}\n          open={Boolean(menuAnchorEl)}\n          onClose={() => setMenuAnchorEl(null)}\n          getContentAnchorEl={null}\n          anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\n          transformOrigin={{vertical: 'top', horizontal: 'center'}}\n          transitionDuration={0.0}\n        >\n          <MenuItem\n            onClick={() => {\n              setIsNewDialogOpen(true);\n              useStore.setState({ mapType: 'local_file' });\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <InsertDriveFileIcon />\n            </ListItemIcon>\n            <ListItemText>\n              New site map...\n            </ListItemText>\n          </MenuItem>\n\n          <MenuItem\n            onClick={() => {\n              const site = Site.fromNewCommand();\n              const cameraInitialPose = site.computeInitialCameraPose();\n              useStore.setState({\n                site: site,\n                selection: null,\n                cameraInitialPose: cameraInitialPose,\n              });\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <InsertDriveFileIcon />\n            </ListItemIcon>\n            <ListItemText>\n              New geo-located site\n            </ListItemText>\n          </MenuItem>\n          <Divider />\n          <MenuItem\n            onClick={async () => {\n              try {\n                await YAMLRetriever('http://localhost:8000/', 'map_file');\n                useStore.setState({ mapType: 'local_rest' });\n              } catch (error) {\n                setSnackMessage('could not open file from localhost:8000');\n                setSnackOpen(true);\n              }\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open map from localhost:8000\n            </ListItemText>\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              await YAMLRetrieveDemo('office');\n              useStore.setState({ mapType: 'demo' });\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open demo map\n            </ListItemText>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              setIsOpenDialogOpen(true);\n              useStore.setState({ mapType: 'local_file' });\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open map from local file...\n            </ListItemText>\n          </MenuItem>\n          <Divider />\n          <MenuItem\n            onClick={() => {\n              saveStore();\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <SaveIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Save\n            </ListItemText>\n          </MenuItem>\n          <Divider />\n          <MenuItem\n            onClick={() => {\n              setIsMqttDialogOpen(true);\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <RouterIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Connect MQTT...\n            </ListItemText>\n          </MenuItem>\n        </Menu>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.appTitle}>\n          Traffic Editor\n        </Typography>\n        <div className={classes.filler} />\n        <StyledToggleButtonGroup\n          value={activeTool}\n          size=\"small\"\n          exclusive\n          onChange={onToolChange}\n          aria-label=\"tool\"\n        >\n          <ToggleButton value={ToolID.SELECT}>\n            <Tooltip title=\"Select tool [Escape]\">\n              <PanToolIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={ToolID.MOVE} disabled={disableEditorTools}>\n            <Tooltip title=\"Move tool [M]\">\n              <OpenWithIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={ToolID.ADD_VERTEX} disabled={disableEditorTools}>\n            <Tooltip title=\"Add vertex [V]\">\n              <AddCircleIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={ToolID.ADD_LANE} disabled={disableEditorTools}>\n            <Tooltip title=\"Add lane [L]\">\n              <DirectionsCarIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={ToolID.ADD_WALL} disabled={disableEditorTools}>\n            <Tooltip title=\"Add wall [W]\">\n              <TextureIcon />\n            </Tooltip>\n          </ToggleButton>\n        </StyledToggleButtonGroup>\n        <StyledToggleButtonGroup\n          value={editorMode}\n          size=\"small\"\n          exclusive\n          onChange={onModeChange}\n          aria-label=\"editor mode\"\n        >\n          <ToggleButton value=\"3d\">\n            3D\n          </ToggleButton>\n          <ToggleButton value=\"2d\">\n            2D\n          </ToggleButton>\n        </StyledToggleButtonGroup>\n      </ToolBar>\n      <NewDialog\n        open={isNewDialogOpen}\n        onNew={() => {}}\n        onCancel={() => setIsNewDialogOpen(false)}\n        close={() => setIsNewDialogOpen(false)}\n      />\n      <OpenDialog\n        open={isOpenDialogOpen}\n        onOpen={() => setIsOpenDialogOpen(false)}\n        onCancel={() => setIsOpenDialogOpen(false)}\n      />\n      <MqttDialog\n        open={isMqttDialogOpen}\n        close={() => setIsMqttDialogOpen(false)}\n      />\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        open={snackOpen}\n        onClose={snackClose}\n        autoHideDuration={2000}\n        transitionDuration={0}\n        TransitionProps={{\n          appear: false,\n        }}\n        action={\n          <React.Fragment>\n            <IconButton onClick={snackClose}>\n              <CloseIcon />\n            </IconButton>\n          </React.Fragment>\n        }\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={snackClose}>\n          {snackMessage}\n        </MuiAlert>\n      </Snackbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport { SiteTreeView } from './SiteTreeView';\nimport { EditorScene } from './EditorScene';\nimport PropertyEditor from './PropertyEditor';\nimport MainMenu from './MainMenu';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    minHeight: '100vh',\n  },\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar,\n  workingArea: {\n    backgroundColor: \"black\",\n    height: `calc(100vh - 64px)`,\n  },\n  gridLeftColumn: {\n    borderRight: '5px',\n    borderRightStyle: 'solid',\n    borderRightColor: theme.palette.primary.main,\n  },\n  propertyGridItem: {\n    borderTop: '5px',\n    borderTopStyle: 'solid',\n    borderTopColor: theme.palette.primary.main,\n  }\n}));\n\nexport default function App(props: React.PropsWithChildren<{}>): JSX.Element {\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes.root}>\n      <MainMenu />\n      <div className={classes.toolbarMargin} />\n      <Grid container spacing={0}>\n        <Grid className={classes.gridLeftColumn} container xs={3} direction=\"column\" spacing={0}>\n          <Grid item style={{height: '40vh', overflow: 'auto'}}>\n            <SiteTreeView />\n          </Grid>\n          <Grid item className={classes.propertyGridItem} style={{height: '50vh', overflow: 'auto'}}>\n            <PropertyEditor />\n          </Grid>\n        </Grid>\n        <Grid item xs={9} className={classes.workingArea}>\n          <EditorScene />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}