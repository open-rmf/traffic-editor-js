{"version":3,"sources":["Complex.ts","EditorParam.ts","EditorObject.ts","Store.ts","EditorProp.ts","Feature.ts","ComplexTree.tsx","SceneDoor.tsx","SceneFeature.tsx","SceneFloor.tsx","SceneLane.tsx","SceneImage.tsx","SceneMeasurement.tsx","SceneModel.tsx","SceneVertex.tsx","SceneWall.tsx","SceneLevel.tsx","SceneBuilding.tsx","SceneComplex.tsx","SceneMapTile.tsx","SceneMap.tsx","EditorScene.tsx","PropertyEditor.tsx","Vertex.ts","Level.ts","Building.ts","YAMLParser.ts","OpenDialog.tsx","MainMenu.tsx","App.tsx","index.tsx"],"names":["CoordinateSystem","EditorParam","type_idx","name","value","uuid","_name","data","p","generate_uuid","EditorObject","params","props","object_type_name","params_yaml","param_name","this","push","fromYAML","node","YAML","YAMLMap","param","param_value_node","YAMLSeq","add","flow","key","Math","round","EditorToolID","Complex","url_base","buildings","coordinate_system","Legacy","length","toYAMLString","computeInitialCameraPose","position","THREE","target","zoom","complex","WGS84","EditorProp","_getter","get_value","set_value","v","Feature","x","y","feature","roundNicely","EditorWall","start_idx","end_idx","paramsToYAML","wall","paramsFromYAML","EditorMeasurement","distance","measurement","EditorLane","lane","EditorDoor","door","EditorFloor","vertex_indices","vertices_node","vertex_index","floor","map","vertex_idx","EditorImage","filename","offset","yaw","scale","isLegacyDefaultImage","color","visible","features","blob","Blob","color_node","toYAML","transform_node","_blob","console","log","size","layer_name","image","feature_yaml","EditorConstraint","ids","constraint","EditorModel","model_name","instance_name","is_static","z","model","useStore","create","set","selection","editorMode","enableMotionControls","activeTool","SELECT","propertyRepaintCount","repaintCount","cameraInitialPose","cameraPose","fn","produce","setSelection","setStore","newSelection","state","clearSelection","setActiveTool","newTool","repaintPropertyEditor","updateVertexPoint","level_uuid","vertex_uuid","building","levels","level","vertices","vertex","updateModelPoint","model_uuid","models","updateFeaturePoint","feature_level","feature_uuid","FeatureTreeItem","TreeItem","nodeId","label","onClick","event","ModelTreeItem","ConstraintTreeItem","substring","ParamTreeItem","DoorTreeItem","ImageTreeItem","FloorTreeItem","idx","toString","join","WallTreeItem","MeasurementTreeItem","LaneTreeItem","VertexTreeItem","LevelTreeItem","constraints","doors","floors","images","lanes","measurements","walls","BuildingTreeItem","reference_level_name","ComplexTree","style","margin","TreeView","defaultCollapseIcon","defaultExpandIcon","SceneDoor","v1","vertex_start","v2","vertex_end","transformPoint","cx","cy","dx","dy","len","sqrt","xyrot","atan2","React","useMemo","setRGB","elevation","rotation","stopPropagation","args","SceneFeature","isMoveToolActive","MOVE","useState","dragActive","setDragActive","PI","onPointerDown","setPointerCapture","pointerId","onPointerUp","releasePointerCapture","onPointerMove","inverseTransformPoint","unprojectedPoint","px","py","intersection_point","ray","intersectPlane","Text","SceneFloor","shape","started","t_x","t_y","lineTo","moveTo","v0_x","v0_y","SceneLane","SceneImage","useLoader","TextureLoader","texture","width_pixels","height_pixels","width_meters","height_meters","magFilter","minFilter","width","height","SceneMeasurement","SceneModel","SceneVertex","SceneWall","SceneLevel","fallback","filter","meas","SceneBuilding","SceneComplex","useFrame","camera","c","center_x","matrixWorld","elements","center_y","center_z","SceneMapTile","side_len","pow","wx","wy","url","setTexture","useEffect","load","fontSize","clamp","v_min","v_max","SceneMap","tiles","setTiles","viewport","useThree","canvasSize","currentPerformance","performance","current","right_x","right","left_x","left","top_y","top","bottom_y","bottom","zoom_level","ceil","left_x_grid_idx","right_x_grid_idx","top_y_grid_idx","bottom_y_grid_idx","max_cell","next_tiles","Array","y_idx","x_idx","tile_desc","EditorScene","showMap","Controls","DefaultUp","perspective_camera","useRef","orthographic_camera","PerspectiveCamera","ref","fov","makeDefault","OrthographicCamera","OrbitControls","enableDamping","screenSpacePanning","maxPolarAngle","Infinity","minAzimuthAngle","maxAzimuthAngle","mouseButtons","LEFT","PAN","MIDDLE","RIGHT","ROTATE","touches","ONE","TWO","enabled","regress","frameloop","mode","linear","onPointerMissed","intensity","useStyles","makeStyles","theme","noSelectionDiv","table","padding","tableHead","tableHeadRow","borderBottomStyle","borderBottom","borderBottomColor","palette","primary","main","tableHeadCell","fontWeight","paddingLeft","tableCell","PropertyEditor","classes","Table","className","TableHead","TableCell","TableBody","prop","TableRow","Vertex","Level","layers_node","toLayerYAML","sum","count","d_pixels","fromLayerYAML","calculateScale","Building","yaml_doc","Document","levels_node","get","lifts_node","lineWidth","minContentWidth","vec_min","vec_max","bb","computeBoundingBox","min","max","t_cx","t_cy","yaml_text","yaml","parse","level_name","level_data","parseDocument","YAMLParser","setState","YAMLRetriever","resource_name","a","fetch","then","response","text","YAMLRetrieveDemo","process","YAMLSender","Object","getPrototypeOf","maxFlowStringSingleLineLength","getState","yaml_size","method","headers","body","directoryButton","typography","h5","textDecoration","dialog","backgroundColor","background","paper","OpenDialog","buildingFileNames","setBuildingFileNames","directoryHandle","setDirectoryHandle","onDirectoryClick","window","showDirectoryPicker","handle","entry","endsWith","previous","values","loadFile","getFileHandle","fileHandle","getFile","file","onOpen","Dialog","open","onClose","onCancel","DialogTitle","DialogContent","Button","variant","List","subheader","ListSubheader","component","ListItem","button","ListItemIcon","ListItemText","e","buildingFileList","DialogActions","StyledToggleButtonGroup","withStyles","root","light","spacing","marginRight","grouped","contrastText","dark","ToggleButtonGroup","flex","menuButton","marginLeft","appTitle","filler","MainMenu","menuAnchorEl","setMenuAnchorEl","isOpenDialogOpen","setIsOpenDialogOpen","snackOpen","setSnackOpen","snackMessage","setSnackMessage","mapType","setMapType","save","useCallback","snackClose","keyDown","toLowerCase","ctrlKey","preventDefault","addEventListener","removeEventListener","AppBar","IconButton","aria-label","currentTarget","keepMounted","anchorEl","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","transitionDuration","MenuItem","fromNewCommand","Divider","Typography","exclusive","onChange","ToggleButton","Tooltip","title","newMode","setEditorMode","Snackbar","autoHideDuration","TransitionProps","appear","action","Fragment","severity","flexGrow","minHeight","toolbarMargin","mixins","toolbar","workingArea","gridLeftColumn","borderRight","borderRightStyle","borderRightColor","propertyGridItem","borderTop","borderTopStyle","borderTopColor","App","Grid","container","xs","direction","item","overflow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54ef6edf.chunk.js","sourcesContent":["//import YAML from 'yaml';\nimport * as THREE from 'three';\nimport { v4 as generate_uuid } from 'uuid';\nimport { EditorObject } from './EditorObject';\nimport { CameraPose } from './Store';\nimport { Building } from './Building';\n\nexport enum CoordinateSystem {\n  Legacy,\n  WGS84\n}\n\nexport class Complex extends EditorObject {\n  name: string = '';\n  url_base: string = '';\n  buildings: Building[] = [];\n  uuid: string = '';\n  params = [];\n  props = [];\n  object_type_name = 'Complex';\n  coordinate_system: CoordinateSystem = CoordinateSystem.Legacy;\n\n  static fromNewCommand(): Complex {\n    let complex = new Complex();\n    complex.uuid = generate_uuid();\n    complex.name = 'Unnamed Complex';\n    complex.coordinate_system = CoordinateSystem.WGS84;\n    return complex;\n  }\n\n  toYAMLString(): string {\n    if (this.buildings.length) {\n      return this.buildings[0].toYAMLString();\n    }\n    return '';\n  }\n\n  computeInitialCameraPose(): CameraPose {\n    if (this.buildings.length) {\n      return this.buildings[0].computeInitialCameraPose();\n    }\n    else {\n      // todo: branch on coordinate system\n      if (this.coordinate_system === CoordinateSystem.Legacy) {\n        return {\n          position: new THREE.Vector3(10, 10, 10),\n          target: new THREE.Vector3(0, 0, 0),\n          zoom: 20,\n        };\n      }\n      else {\n        // center on singapore\n        return {\n          position: new THREE.Vector3(201830, -127030, 10),\n          target: new THREE.Vector3(201830, -127030, 0),\n          zoom: 5,\n        };\n      }\n    }\n  }\n}\n","//import YAML from 'yaml'\nimport { v4 as generate_uuid } from 'uuid'\n\nexport class EditorParam {\n  type_idx: number = 0;\n  name: string = '';\n  value: any = 0;\n  uuid: string = '';\n\n  static fromYAML(_name: string, data: any): EditorParam {\n    let p = new EditorParam();\n    p.name = _name;\n    p.type_idx = data[0];\n    p.value = data[1];\n    p.uuid = generate_uuid();\n    return p;\n  }\n}\n","import YAML from 'yaml'\nimport { EditorParam } from './EditorParam';\nimport { EditorProp } from './EditorProp';\n\nexport class EditorObject {\n  uuid: string = '';\n  params: EditorParam[] = [];\n  props: EditorProp[] = [];\n  object_type_name: string = '';\n\n  paramsFromYAML(params_yaml: any): void {\n    for (const param_name in params_yaml) {\n      this.params.push(EditorParam.fromYAML(param_name, params_yaml[param_name]));\n    }\n  }\n\n  paramsToYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    for (const param of this.params) {\n      let param_value_node = new YAML.YAMLSeq();\n      param_value_node.add(param.type_idx);\n      param_value_node.add(param.value);\n      param_value_node.flow = true;\n      node.add({ key: param.name, value: param_value_node });\n    }\n    node.flow = true;\n    return node;\n  }\n\n  static roundNicely(value: number): number {\n    return Math.round(value * 1000) / 1000;\n  }\n}\n","import create from 'zustand';\nimport produce from 'immer';\nimport * as THREE from 'three';\nimport { v4 as generate_uuid } from 'uuid';\nimport YAML from 'yaml';\n//import { EditorParam } from './EditorParam'\nimport { EditorObject } from './EditorObject';\nimport { Complex } from './Complex';\nimport { Feature } from './Feature';\nimport { Level } from './Level';\n\nexport class EditorWall extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorWall {\n    let wall = new EditorWall();\n    wall.object_type_name = 'Wall';\n    wall.uuid = generate_uuid();\n    wall.paramsFromYAML(data[2]);\n    wall.start_idx = data[0];\n    wall.end_idx = data[1];\n    return wall;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorMeasurement extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n  distance: number = 1;\n\n  static fromYAML(data: any): EditorMeasurement {\n    let measurement = new EditorMeasurement();\n    measurement.object_type_name = 'Measurement'\n    measurement.uuid = generate_uuid();\n    measurement.start_idx = data[0];\n    measurement.end_idx = data[1];\n    measurement.distance = data[2]['distance'][1];\n    return measurement;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    let params_yaml = this.paramsToYAML();\n    params_yaml.add({ key: 'distance', value: [3, this.distance] });\n    node.add(params_yaml);\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorLane extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorLane {\n    let lane = new EditorLane();\n    lane.object_type_name = 'Lane';\n    lane.uuid = generate_uuid();\n    lane.paramsFromYAML(data[2]);\n    lane.start_idx = data[0];\n    lane.end_idx = data[1];\n    return lane;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorDoor extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorDoor {\n    let door = new EditorDoor();\n    door.object_type_name = 'Door';\n    door.uuid = generate_uuid();\n    door.paramsFromYAML(data[2]);\n    door.start_idx = data[0];\n    door.end_idx = data[1];\n    return door;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorFloor extends EditorObject {\n  vertex_indices: number[] = [];\n\n  static fromYAML(data: any): EditorFloor {\n    let floor = new EditorFloor();\n    floor.uuid = generate_uuid();\n    floor.paramsFromYAML(data['parameters']);\n    floor.vertex_indices = data['vertices'].map((vertex_idx: number) => vertex_idx);\n    return floor;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'parameters', value: this.paramsToYAML() });\n\n    let vertices_node = new YAML.YAMLSeq();\n    for (const vertex_index of this.vertex_indices) {\n      vertices_node.add(vertex_index);\n    }\n    vertices_node.flow = true;\n    node.add({ key: 'vertices', value: vertices_node });\n    return node;\n  }\n}\n\nexport class EditorImage extends EditorObject {\n  name: string = '';\n  filename: string = '';\n  offset: THREE.Vector3 = new THREE.Vector3(0, 0, 0);\n  yaw: number = 0;\n  scale: number = 1;\n  isLegacyDefaultImage: boolean = false;\n  color: number[] = [1, 1, 1, 1];\n  visible: boolean = true;\n  features: Feature[] = [];\n  blob: Blob = new Blob([]);\n\n  static fromLayerYAML(layer_name: string, data: any): EditorImage {\n    //console.log(data);\n    let image = new EditorImage();\n    image.object_type_name = 'Image';\n    image.uuid = generate_uuid();\n    image.name = layer_name;\n    image.filename = data['filename'];\n    image.color = data['color'];\n    image.offset.x = data['transform']['translation_x'];\n    image.offset.y = data['transform']['translation_y'];\n    image.scale = data['transform']['scale'];\n    image.yaw = data['transform']['yaw'];\n    image.isLegacyDefaultImage = false;\n    image.visible = data['visible'];\n    image.features = data['features'].map((feature_yaml: any) => Feature.fromYAML(feature_yaml));\n    return image;\n  }\n\n  toLayerYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    let color_node = new YAML.YAMLSeq();\n    color_node.add(this.color[0]);\n    color_node.add(this.color[1]);\n    color_node.add(this.color[2]);\n    color_node.add(this.color[3]);\n    color_node.flow = true;\n    node.add({ key: 'color', value: color_node });\n    node.add({ key: 'features', value: this.features.map(feature => feature.toYAML()) });\n    node.add({ key: 'filename', value: this.filename });\n    let transform_node = new YAML.YAMLMap();\n    transform_node.add({ key: 'scale', value: this.scale });\n    transform_node.add({ key: 'translation_x', value: this.offset.x });\n    transform_node.add({ key: 'translation_y', value: this.offset.y });\n    transform_node.add({ key: 'yaw', value: this.yaw });\n    node.add({ key: 'transform', value: transform_node });\n    node.add({ key: 'visible', value: this.visible });\n    return node;\n  }\n\n  loadBlob(_blob: Blob): void {\n    this.blob = _blob;\n    console.log(`image ${this.filename} retrieved ${this.blob.size} bytes`);\n  }\n}\n\nexport class EditorConstraint extends EditorObject {\n  ids: string[] = [];\n\n  static fromYAML(data: any): EditorConstraint {\n    let constraint = new EditorConstraint();\n    constraint.uuid = generate_uuid();\n    constraint.ids = [ data['ids'][0], data['ids'][1] ];\n    return constraint;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'ids', value: this.ids });\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorModel extends EditorObject {\n  model_name: string = '';\n  instance_name: string = '';\n  is_static: boolean = true;\n  x: number = 0;\n  y: number = 0;\n  z: number = 0;\n  yaw: number = 0;\n\n  static fromYAML(data: any): EditorModel {\n    let model = new EditorModel();\n    model.object_type_name = 'Model';\n    model.uuid = generate_uuid();\n    model.model_name = data['model_name'];\n    model.instance_name = data['name'];\n    model.is_static = data['static'];\n    model.x = data['x'];\n    model.y = -data['y'];\n    model.yaw = data['yaw'];\n    model.z = data['z'];\n    return model;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'model_name', value: this.model_name });\n    node.add({ key: 'name', value: this.instance_name });\n    node.add({ key: 'static', value: this.is_static });\n    node.add({ key: 'x', value: this.x });\n    node.add({ key: 'y', value: -this.y });\n    node.add({ key: 'yaw', value: this.yaw });\n    node.add({ key: 'z', value: this.z });\n    node.flow = true;\n    return node;\n  }\n}\n\nexport enum EditorToolID {\n  SELECT,\n  MOVE,\n}\n\nexport interface CameraPose {\n  position: THREE.Vector3,\n  target: THREE.Vector3,\n  zoom: number,\n}\n\nexport interface StoreState {\n  complex: Complex,\n  selection: EditorObject | null,\n  editorMode: string,\n  enableMotionControls: boolean,\n  activeTool: EditorToolID,\n  cameraInitialPose: CameraPose,\n  cameraPose: CameraPose,\n  propertyRepaintCount: number,\n  repaintCount: number,\n  set: (fn: (draftState: StoreState) => void) => void\n}\n/*\n\n  setSelection: (newSelection: EditorObject) => void,\n  clearSelection: () => void,\n  setEditorMode: (newEditorMode: string) => void,\n\n  setEnableMotionControls: (newEnableMotionControls: boolean) => void,\n\n  setActiveTool: (newActiveTool: EditorToolID) => void,\n\n  //updateVertexPoint: (level_uuid: string, vertex_uuid: string, x: number, y:number) => void,\n}\n*/\n\nexport const useStore = create<StoreState>(set => ({\n  complex: new Complex(),\n  selection: null,\n  editorMode: '2d',\n  enableMotionControls: true,\n  activeTool: EditorToolID.SELECT,\n  propertyRepaintCount: 0,\n  repaintCount: 0,\n  cameraInitialPose: {\n    position: new THREE.Vector3(0, 0, 100),\n    target: new THREE.Vector3(0, 0, 0),\n    zoom: 20,\n  },\n  cameraPose: {\n    position: new THREE.Vector3(0, 0, 100),\n    target: new THREE.Vector3(0, 0, 0),\n    zoom: 20,\n  },\n  set: fn => set(produce(fn)),\n}));\n\ntype StoreSetter = (fn: (draftState: StoreState) => void) => void;\n\nexport function setSelection(setStore: StoreSetter, newSelection: EditorObject) {\n  setStore(state => {\n    state.selection = newSelection;\n  });\n}\n\nexport function clearSelection(setStore: StoreSetter) {\n  setStore(state => {\n    state.selection = null;\n  });\n}\n\nexport function setEditorMode(setStore: StoreSetter, newMode: string) {\n  setStore(state => {\n    state.editorMode = newMode;\n  });\n}\n\nexport function setActiveTool(setStore: StoreSetter, newTool: EditorToolID) {\n  setStore(state => {\n    state.activeTool = newTool;\n  });\n}\n\nexport function repaintPropertyEditor(setStore: StoreSetter) {\n  setStore(state => {\n    state.propertyRepaintCount += 1;\n  });\n}\n\nexport function updateVertexPoint(\n  setStore: StoreSetter,\n  level_uuid: string,\n  vertex_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.complex.buildings.map(building => {\n      building.levels.map(level => {\n        if (level.uuid === level_uuid) {\n          level.vertices.map(vertex => {\n            if (vertex.uuid === vertex_uuid) {\n              vertex.x = x;\n              vertex.y = y;\n            }\n            return vertex;\n          })\n        }\n        return level;\n      });\n      return building;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n\nexport function updateModelPoint(\n  setStore: StoreSetter,\n  level_uuid: string,\n  model_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.complex.buildings.map(building => {\n      building.levels.map(level => {\n        if (level.uuid === level_uuid) {\n          level.models.map(model => {\n            if (model.uuid === model_uuid) {\n              model.x = x;\n              model.y = y;\n            }\n            return model;\n          })\n        }\n        return level;\n      });\n      return building;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n\nexport function updateFeaturePoint(\n  setStore: StoreSetter,\n  feature_level: Level,\n  feature_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.complex.buildings.map(building => {\n      building.levels.map(level => {\n        if (level === feature_level) {\n          level.features.map(feature => {\n            if (feature.uuid === feature_uuid) {\n              feature.x = x;\n              feature.y = y;\n            }\n            return feature;\n          })\n        }\n        return level;\n      });\n      return building;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n","import { v4 as generate_uuid } from 'uuid'\n\nexport class EditorProp {\n  name: string = '';\n  get_value: () => any = () => '';\n  set_value: (_: any) => void = (v: any) => { };\n  uuid: string = '';\n\n  constructor(_name: string, _getter: () => any) {\n    this.name = _name;\n    this.get_value = _getter;\n    this.uuid = generate_uuid();\n  }\n}\n","import { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport YAML from 'yaml';\n//import { v4 as generate_uuid } from 'uuid';\n\nexport class Feature extends EditorObject {\n  name: string = '';\n  x: number = 0;\n  y: number = 0;\n\n  static fromYAML(data: any): Feature {\n    let feature = new Feature();\n    feature.object_type_name = 'Feature';\n    feature.uuid = data['id'];\n    feature.name = data['name'];\n    feature.x = data['x'];\n    feature.y = -data['y'];\n\n    feature.props.push(new EditorProp('name', () => feature.name));\n    feature.props.push(new EditorProp('x', () => { return EditorObject.roundNicely(feature.x)} ));\n    feature.props.push(new EditorProp('y', () => { return EditorObject.roundNicely(feature.y)} ));\n\n    return feature;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'id', value: this.uuid });\n    node.add({ key: 'name', value: this.name });\n    node.add({ key: 'x', value: this.x });\n    node.add({ key: 'y', value: -this.y });\n    node.flow = true;\n    return node;\n  }\n}\n","import React from 'react';\nimport {\n  EditorConstraint,\n  EditorDoor,\n  EditorFloor,\n  EditorImage,\n  EditorLane,\n  EditorMeasurement,\n  EditorModel,\n  EditorWall,\n  setSelection,\n  useStore,\n} from './Store';\nimport { EditorParam } from './EditorParam';\nimport { Building } from './Building';\nimport { Level } from './Level';\nimport { Vertex } from './Vertex';\nimport { Feature } from './Feature';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nfunction FeatureTreeItem(props: { feature: Feature }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.feature.uuid}\n      key={props.feature.uuid}\n      label={`${props.feature.x}, ${props.feature.y}`}\n      onClick={(event) => {\n        setSelection(setStore, props.feature);\n      }}\n    >\n    </TreeItem>\n  );\n}\n\nfunction ModelTreeItem(props: { model: EditorModel }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.model.uuid}\n      key={props.model.uuid}\n      label={`${props.model.instance_name}`}\n      onClick={(event) => {\n        setSelection(setStore, props.model);\n      }}\n    >\n    </TreeItem>\n  );\n}\n\n\nfunction ConstraintTreeItem(props: { constraint: EditorConstraint }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.constraint.uuid}\n      key={props.constraint.uuid}\n      label={`${props.constraint.ids[0].substring(1, 9)} - ${props.constraint.ids[1].substring(1, 9)}`}\n      onClick={(event) => {\n        setSelection(setStore, props.constraint);\n      }}\n    >\n      {props.constraint.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction DoorTreeItem(props: { door: EditorDoor }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.door.start_idx} => ${props.door.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.door.uuid}\n      key={props.door.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.door);\n      }}\n      label={label} />\n  );\n}\n\nfunction ParamTreeItem(props: { param: EditorParam }): JSX.Element {\n  return (\n    <TreeItem\n      nodeId={props.param.uuid}\n      key={props.param.uuid}\n      label={`${props.param.name} = ${props.param.value}`}\n    />\n  );\n}\n\nfunction ImageTreeItem(props: { image: EditorImage }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.image.uuid}\n      key={props.image.uuid}\n      label={props.image.filename}\n      onClick={(event) => {\n        setSelection(setStore, props.image);\n      }}\n    >\n      {props.image.params.map((param) => <ParamTreeItem param={param} />)}\n      <TreeItem\n        nodeId={`${props.image.uuid}_features`}\n        key={`${props.image.uuid}_features`}\n        label=\"features\"\n      >\n        {props.image.features.map((feature) => <FeatureTreeItem feature={feature} />)}\n      </TreeItem>\n    </TreeItem>\n  );\n}\n\nfunction FloorTreeItem(props: { floor: EditorFloor }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = 'floor (' + props.floor.vertex_indices.map((idx) => idx.toString()).join(', ') + ')';\n  return(\n    <TreeItem\n      nodeId={props.floor.uuid}\n      key={props.floor.uuid}\n      label={label}\n      onClick={(event) => {\n        setSelection(setStore, props.floor);\n      }}\n    >\n      {props.floor.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction WallTreeItem(props: { wall: EditorWall }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.wall.start_idx} => ${props.wall.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.wall.uuid}\n      key={props.wall.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.wall);\n      }}\n      label={label} />\n  );\n}\n\nfunction MeasurementTreeItem(props: { measurement: EditorMeasurement }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.measurement.start_idx}-${props.measurement.end_idx}) = ${props.measurement.distance}`;\n  return(\n    <TreeItem\n      nodeId={props.measurement.uuid}\n      key={props.measurement.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.measurement);\n      }}\n      label={label} />\n  );\n}\n\nfunction LaneTreeItem(props: { lane: EditorLane }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.lane.start_idx} => ${props.lane.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.lane.uuid}\n      key={props.lane.uuid}\n      label={label}\n      onClick={(event) => {\n        setSelection(setStore, props.lane);\n      }}\n    />\n  );\n}\n\nfunction VertexTreeItem(props: { vertex: Vertex }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  let label = \"(\" + props.vertex.x + \", \" + props.vertex.y + \")\";\n  if (props.vertex.name)\n    label = props.vertex.name + ': ' + label;\n  return (\n    <TreeItem\n      nodeId={props.vertex.uuid}\n      key={props.vertex.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.vertex);\n      }}\n      label={label}>\n      {props.vertex.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction LevelTreeItem(props: { level: Level }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.level.uuid}\n      key={props.level.uuid}\n      label={props.level.name}\n      onClick={(event) => {\n        setSelection(setStore, props.level);\n      }}>\n\n      <TreeItem nodeId={props.level.uuid + '_constraints'} label=\"constraints\">\n        {props.level.constraints.map(constraint => <ConstraintTreeItem constraint={constraint} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_doors'} label=\"doors\">\n        {props.level.doors.map(door => <DoorTreeItem door={door} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_features'} label=\"features\">\n        {props.level.features.map(feature => <FeatureTreeItem feature={feature} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_floors'} label=\"floors\">\n        {props.level.floors.map(floor => <FloorTreeItem floor={floor} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_images'} label=\"images\">\n        {props.level.images.map(image => <ImageTreeItem image={image} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_lanes'} label=\"lanes\">\n        {props.level.lanes.map(lane => <LaneTreeItem lane={lane} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_measurements'} label=\"measurements\">\n        {props.level.measurements.map(measurement => <MeasurementTreeItem measurement={measurement} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_models'} label=\"models\">\n        {props.level.models.map(model => <ModelTreeItem model={model} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_vertices'} label=\"vertices\">\n        {props.level.vertices.map(vertex => <VertexTreeItem vertex={vertex} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_walls'} label=\"walls\">\n        {props.level.walls.map(wall => <WallTreeItem wall={wall} /> )}\n      </TreeItem>\n    </TreeItem>\n  );\n}\n\nfunction BuildingTreeItem(props: { building: Building }): JSX.Element {\n  return (\n    <TreeItem\n      nodeId={props.building.uuid}\n      key={props.building.uuid}\n      label={props.building.name}\n    >\n      <TreeItem\n        nodeId={props.building.uuid + '_ref'}\n        label={\"reference level: \" + props.building.reference_level_name }\n      />\n      <TreeItem nodeId={props.building.uuid + '_levels'} label=\"levels\">\n        {props.building.levels.map(level => <LevelTreeItem level={level} /> )}\n      </TreeItem>\n    </TreeItem>\n  );\n}\n\nexport function ComplexTree(): JSX.Element {\n  const complex = useStore(state => state.complex);\n\n  if (complex.name === '') {\n    return (\n      <div style={{margin: '1em'}}>\n        <p>\n          No map loaded.\n        </p>\n        <p>\n          To load a map, click the menu icon in the upper-left.\n        </p>\n      </div>\n    );\n  }\n \n  // defaultExpanded={[building.uuid + '_levels']}\n  return (\n    <TreeView\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId={complex.uuid + '_name'} label={\"complex name: \" + complex.name} />\n      <TreeItem nodeId={complex.uuid + '_buildings'} label=\"buildings\">\n        {complex.buildings.map(building => <BuildingTreeItem building={building} /> )}\n      </TreeItem>\n    </TreeView>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorDoor, setSelection } from './Store';\n\ninterface SceneDoorProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  door: EditorDoor,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneDoor(props: SceneDoorProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.1, 0.4, 0.4);\n    if (selection && selection.uuid === props.door.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.door.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 1.0 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.door.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.door);\n      }}\n    >\n      <boxGeometry args={[len, 0.5, 2]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Text } from '@react-three/drei'\nimport { Feature } from './Feature';\nimport { Level } from './Level';\nimport {\n  useStore,\n  EditorToolID,\n  repaintPropertyEditor,\n  setSelection,\n  updateFeaturePoint,\n} from './Store';\n\ninterface SceneFeatureProps {\n  feature: Feature,\n  elevation: number,\n  level: Level,\n}\n\nexport function SceneFeature(props: SceneFeatureProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const isMoveToolActive = useStore(state => state.activeTool === EditorToolID.MOVE);\n  const [ dragActive, setDragActive ] = React.useState(false);\n\n  const [x, y] = props.level.transformPoint(props.feature.x, props.feature.y);\n\n  let color = \"rgb(200, 200, 0)\";\n  if (selection && selection.uuid === props.feature.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  return (\n    <group>\n      <mesh\n        position={[x, y, 0.25 + props.elevation]}\n        scale={1.0}\n        rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n        key={props.feature.uuid}\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n        onPointerDown={(event) => {\n          setSelection(setStore, props.feature);\n          if (!isMoveToolActive)\n            return;\n          event.stopPropagation();\n          setDragActive(true);\n          if (event.target) {\n            (event.target as HTMLElement).setPointerCapture(event.pointerId);\n          }\n        }}\n        onPointerUp={(event) => {\n          event.stopPropagation();\n          setDragActive(false);\n          if (event.target) {\n            (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n          }\n          repaintPropertyEditor(setStore);\n        }}\n        onPointerMove={(event) => {\n          if (dragActive) {\n            event.stopPropagation();\n            if (editorMode === '2d') {\n              const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n              updateFeaturePoint(setStore, props.level, props.feature.uuid, px, py);\n            }\n            else {\n              let intersection_point = new THREE.Vector3();\n              event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n              const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n              updateFeaturePoint(setStore, props.level, props.feature.uuid, px, py);\n            }\n          }\n        }}\n      >\n        <cylinderGeometry args={[0.05, 0.15, 0.4, 16]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <Text color=\"blue\" position={[x, y, 0.36 + props.elevation]}>\n        {props.feature.name}\n      </Text>\n    </group>\n  );\n}\n","import React from 'react';\nimport * as THREE from 'three';\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorFloor, setSelection } from './Store';\n\ntype SceneFloorProps = {\n  floor: EditorFloor;\n  level: Level;\n  vertices: Vertex[];\n  elevation: number;\n}\n\nexport function SceneFloor(props: SceneFloorProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const shape = React.useMemo(() => {\n    const shape = new THREE.Shape();\n    let started = false;\n\n    for (const v of props.vertices) {\n      const [t_x, t_y] = props.level.transformPoint(v.x, v.y);\n      if (!started)\n      {\n        shape.moveTo(t_x, t_y);\n        started = true;\n      }\n      else\n        shape.lineTo(t_x, t_y);\n    }\n    const [v0_x, v0_y] = props.level.transformPoint(props.vertices[0].x, props.vertices[0].y);\n    shape.lineTo(v0_x, v0_y);\n    return shape;\n  }, [props.vertices, props.level])\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(1, 1, 1);\n    if (selection && selection.uuid === props.floor.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.floor.uuid]);\n\n  return (\n    <mesh\n      key={props.floor.uuid}\n      onClick={(event) => {\n        event.stopPropagation()\n        console.log('floor onClick')\n        setSelection(setStore, props.floor)\n      }}\n    >\n      <extrudeGeometry args={[shape, { 'depth': 0.1, 'bevelEnabled': false } ]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n\n  /*\n      <meshStandardMaterial color={color} transparent={true} opacity={0.5} />\n  return (\n    <gridHelper\n      args={[100, 100]}\n      rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n      position={new THREE.Vector3(50, -50, elevation)}/>\n  );\n   */\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorLane, setSelection } from './Store';\n\ninterface SceneLaneProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  lane: EditorLane,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneLane(props: SceneLaneProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.6, 0.05, 0.05);\n    if (selection && selection.uuid === props.lane.uuid) {\n      color.setRGB(0.8, 0.3, 0.01);\n    }\n    return color;\n  }, [selection, props.lane.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 0.2 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.lane.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.lane);\n      }}\n    >\n      <boxGeometry args={[len, 0.5, 0.1]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n//<meshStandardMaterial color={color} transparent={true} opacity={0.7} />\n","import React from 'react'\nimport * as THREE from 'three'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\nimport { useLoader } from '@react-three/fiber';\nimport { Level } from './Level';\nimport { useStore, EditorImage } from './Store';\n\ntype SceneImageProps = {\n  image: EditorImage,\n  elevation: number,\n  level: Level,\n}\n\nexport function SceneImage(props: SceneImageProps): JSX.Element {\n  //const selection = useStore(state => state.selection)\n  const url_base = useStore(state => state.complex.url_base);\n  //const setStore = useStore(state => state.set);\n  const [ texture ] = useLoader(TextureLoader, [url_base + props.image.filename]);\n  //useLoader.preload(TextureLoader, [url_base + props.image.filename]);\n\n  let width_pixels = 128;\n  let height_pixels = 128;\n\n  let width_meters = 50.0;\n  let height_meters = 50.0;\n\n  if (texture) {\n    texture.magFilter = THREE.NearestFilter;\n    texture.minFilter = THREE.NearestFilter;\n    width_pixels = texture.image.width;\n    height_pixels = texture.image.height;\n    width_meters = width_pixels * props.level.scale;\n    height_meters = height_pixels * props.level.scale;\n    // console.log(`texture size: ${width_meters}, ${height_meters}`);\n  }\n\n  const x = props.image.offset.x;\n  const y = props.image.offset.y;\n  const scale = 1; // todo...\n  const yaw = props.image.yaw;\n\n  return (\n    <mesh\n      position={[x + width_meters / 2, y - height_meters / 2, props.elevation + 0.1]}\n      scale={scale}\n      rotation={new THREE.Euler(0, yaw, 0)}\n      key={props.image.uuid}\n    >\n      <boxGeometry args={[width_meters, height_meters, 0.1, 8]} />\n      <meshStandardMaterial map={texture} color={[1.0, 1.0, 1.0]} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorMeasurement, setSelection } from './Store';\n\ninterface SceneMeasurementProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  measurement: EditorMeasurement,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneMeasurement(props: SceneMeasurementProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.6, 0.1, 0.6);\n    if (selection && selection.uuid === props.measurement.uuid) {\n      color.setRGB(0.8, 0.3, 0.01);\n    }\n    return color;\n  }, [selection, props.measurement.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 0.2 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.measurement.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.measurement);\n      }}\n    >\n      <boxGeometry args={[len, 0.5, 0.1]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Level } from './Level';\nimport { useStore, EditorModel, EditorToolID, setSelection, updateModelPoint } from './Store';\n\ninterface SceneModelProps {\n  model: EditorModel,\n  elevation: number,\n  level: Level,\n  level_uuid: string,\n}\n\nexport function SceneModel(props: SceneModelProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const isMoveToolActive = useStore(state => state.activeTool === EditorToolID.MOVE);\n  const [ dragActive, setDragActive ] = React.useState(false);\n\n  const [x, y] = props.level.transformPoint(props.model.x, props.model.y);\n\n  let color = \"rgb(128, 128, 128)\";\n  if (selection && selection.uuid === props.model.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  return (\n    <mesh\n      position={[x, y, 0.25 + props.elevation]}\n      scale={1.0}\n      rotation={new THREE.Euler(Math.PI / 2, props.model.yaw, 0)}\n      key={props.model.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.model);\n      }}\n      onPointerDown={(event) => {\n        if (!isMoveToolActive)\n          return;\n        event.stopPropagation();\n        setDragActive(true);\n        if (event.target) {\n          (event.target as HTMLElement).setPointerCapture(event.pointerId);\n        }\n      }}\n      onPointerUp={(event) => {\n        event.stopPropagation();\n        setDragActive(false);\n        if (event.target) {\n          (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n        }\n      }}\n      onPointerMove={(event) => {\n        if (dragActive) {\n          event.stopPropagation();\n          if (editorMode === '2d') {\n            const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n            updateModelPoint(setStore, props.level_uuid, props.model.uuid, px, py);\n          }\n          else {\n            let intersection_point = new THREE.Vector3();\n            event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n            const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n            updateModelPoint(setStore, props.level_uuid, props.model.uuid, px, py);\n          }\n        }\n      }}\n    >\n      <boxGeometry args={[0.4, 0.4, 0.4, 8]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Text } from '@react-three/drei'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport {\n  useStore,\n  EditorToolID,\n  repaintPropertyEditor,\n  setSelection,\n  updateVertexPoint,\n} from './Store';\n\ninterface SceneVertexProps {\n  vertex: Vertex,\n  elevation: number,\n  level: Level,\n  level_uuid: string,\n}\n\nexport function SceneVertex(props: SceneVertexProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const isMoveToolActive = useStore(state => state.activeTool === EditorToolID.MOVE);\n  const [ dragActive, setDragActive ] = React.useState(false);\n\n  const [x, y] = props.level.transformPoint(props.vertex.x, props.vertex.y);\n\n  let color = \"rgb(0, 128, 0)\";\n  if (selection && selection.uuid === props.vertex.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  return (\n    <group>\n      <mesh\n        position={[x, y, 0.25 + props.elevation]}\n        scale={1.0}\n        rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n        key={props.vertex.uuid}\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n        onPointerDown={(event) => {\n          setSelection(setStore, props.vertex);\n          if (!isMoveToolActive)\n            return;\n          event.stopPropagation();\n          setDragActive(true);\n          if (event.target) {\n            (event.target as HTMLElement).setPointerCapture(event.pointerId);\n          }\n        }}\n        onPointerUp={(event) => {\n          event.stopPropagation();\n          setDragActive(false);\n          if (event.target) {\n            (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n          }\n          repaintPropertyEditor(setStore);\n        }}\n        onPointerMove={(event) => {\n          if (dragActive) {\n            event.stopPropagation();\n            if (editorMode === '2d') {\n              const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n              updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, px, py);\n            }\n            else {\n              let intersection_point = new THREE.Vector3();\n              event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n              const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n              updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, px, py);\n            }\n          }\n        }}\n      >\n        <cylinderGeometry args={[0.1, 0.1, 0.2, 16]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <Text color=\"blue\" position={[x, y, 0.36 + props.elevation]}>\n        {props.vertex.name}\n      </Text>\n    </group>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorWall, setSelection } from './Store';\n\ninterface SceneWallProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  wall: EditorWall,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneWall(props: SceneWallProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.1, 0.1, 0.9);\n    if (selection && selection.uuid === props.wall.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.wall.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 1.0 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.wall.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.wall);\n      }}\n    >\n      <boxGeometry args={[len, 0.1, 2]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React, { Suspense } from 'react'\nimport { Level } from './Level';\nimport { SceneDoor } from './SceneDoor';\nimport { SceneFeature } from './SceneFeature';\nimport { SceneFloor } from './SceneFloor';\nimport { SceneLane } from './SceneLane';\nimport { SceneImage } from './SceneImage';\nimport { SceneMeasurement } from './SceneMeasurement';\nimport { SceneModel } from './SceneModel';\nimport { SceneVertex } from './SceneVertex';\nimport { SceneWall } from './SceneWall';\nimport { useStore } from './Store';\n\ntype SceneLevelProps = {\n  level: Level\n}\n\nexport function SceneLevel(props: SceneLevelProps): JSX.Element {\n  const z = props.level.elevation / 2;\n  useStore(state => state.selection);  // needed to ensure repaints after de-selection\n\n  return (\n    <group>\n      {props.level.models.map(model =>\n        <SceneModel\n          key={model.uuid}\n          model={model}\n          level={props.level}\n          level_uuid={props.level.uuid}\n          elevation={z} />)}\n\n      {props.level.vertices.map((vertex) =>\n        <SceneVertex\n          key={vertex.uuid}\n          vertex={vertex}\n          level={props.level}\n          level_uuid={props.level.uuid}\n          elevation={z} />)}\n\n      {props.level.features.map(feature =>\n        <SceneFeature\n          key={feature.uuid}\n          feature={feature}\n          level={props.level}\n          elevation={z} />)}\n\n      {props.level.walls.map((wall) =>\n        <SceneWall\n          key={wall.uuid}\n          wall={wall}\n          level={props.level}\n          vertex_start={props.level.vertices[wall.start_idx]}\n          vertex_end={props.level.vertices[wall.end_idx]}\n          elevation={z} />)}\n\n      {props.level.doors.map((door) =>\n        <SceneDoor\n          key={door.uuid}\n          door={door}\n          level={props.level}\n          vertex_start={props.level.vertices[door.start_idx]}\n          vertex_end={props.level.vertices[door.end_idx]}\n          elevation={z} />)}\n\n      {props.level.floors.map((floor) =>\n        <SceneFloor\n          key={floor.uuid}\n          floor={floor}\n          level={props.level}\n          vertices={floor.vertex_indices.map((idx) => props.level.vertices[idx])}\n          elevation={z} />)}\n\n      {props.level.lanes.map(lane =>\n        <SceneLane\n          key={lane.uuid}\n          lane={lane}\n          level={props.level}\n          vertex_start={props.level.vertices[lane.start_idx]}\n          vertex_end={props.level.vertices[lane.end_idx]}\n          elevation={z} />)}\n\n      <Suspense fallback={null}>\n        {props.level.images.filter(image => image.isLegacyDefaultImage).map(image =>\n          <SceneImage\n            key={image.uuid}\n            image={image}\n            level={props.level}\n            elevation={z} />)}\n      </Suspense>\n\n      {props.level.measurements.map(meas =>\n        <SceneMeasurement\n          key={meas.uuid}\n          measurement={meas}\n          level={props.level}\n          vertex_start={props.level.vertices[meas.start_idx]}\n          vertex_end={props.level.vertices[meas.end_idx]}\n          elevation={z} />)}\n    </group>\n  );\n}\n","import React from 'react'\nimport { useStore } from './Store';\nimport { SceneLevel } from './SceneLevel';\nimport { Building } from './Building';\n\ntype SceneBuildingProps = {\n  building: Building,\n}\n\nexport function SceneBuilding(props: SceneBuildingProps): JSX.Element {\n  useStore(state => state.selection);  // needed to ensure repaints after de-selection\n  useStore(state => state.repaintCount);  // needed to ensure repaints after tweaks\n\n  return (\n    <group>\n      {props.building.levels.map((level) => <SceneLevel key={level.uuid} level={level} />)}\n    </group>\n  );\n}\n","import * as THREE from 'three'\nimport React from 'react'\nimport { useStore } from './Store';\nimport { SceneBuilding } from './SceneBuilding';\nimport { CoordinateSystem } from './Complex';\nimport { useFrame } from '@react-three/fiber';\n\ntype SceneComplexProps = {\n}\n\nexport function SceneComplex(props: SceneComplexProps): JSX.Element {\n  const complex = useStore(state => state.complex);\n  useStore(state => state.selection);  // needed to ensure repaints after de-selection\n  useStore(state => state.repaintCount);  // needed to ensure repaints after tweaks\n  const setStore = useStore(state => state.set);\n\n  useFrame(state => {\n    if (state.camera instanceof THREE.OrthographicCamera) {\n      const c: THREE.OrthographicCamera = state.camera as THREE.OrthographicCamera;\n      //const scale = 1000;\n      const center_x = c.matrixWorld.elements[12];\n      const center_y = c.matrixWorld.elements[13];\n      const center_z = c.matrixWorld.elements[14];\n      setStore(state => {\n        state.cameraPose = {\n          position: state.cameraPose.position.set(center_x, center_y, center_z),\n          target: state.cameraPose.target,\n          zoom: state.cameraPose.zoom,\n        };\n      });\n    }\n  });\n\n  return (\n    <group>\n      {(complex.coordinate_system === CoordinateSystem.Legacy) && <pointLight position={[10, 10, 10]} />}\n      {complex.buildings.map(building => <SceneBuilding building={building} />)}\n    </group>\n  );\n}\n","import React from 'react';\nimport { Text } from '@react-three/drei'\nimport * as THREE from 'three'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\n\ntype SceneMapTileProps = {\n  x: number,\n  y: number,\n  zoom: number,\n}\n\nexport function SceneMapTile(props: SceneMapTileProps): JSX.Element {\n  const key = `${props.zoom}_${props.x}_${props.y}`;\n\n  // compute the world distance of a side of this tile\n  const scale = 1000;\n  const side_len = 1.000 * 256 * scale / Math.pow(2, props.zoom);\n\n  // compute the world x and y coords of the center of this tile\n  const wx = props.x * 256 * scale / Math.pow(2, props.zoom) + side_len / 2;\n  const wy = -1 * (props.y * 256 * scale / Math.pow(2, props.zoom) + side_len / 2);\n\n  const url = `https://tiles.demo.open-rmf.org/tiles/${props.zoom}/${props.x}/${props.y}.png`;\n  const [texture, setTexture] = React.useState<THREE.Texture>();\n  React.useEffect(() => { new TextureLoader().load(url, setTexture)}, [url]);\n  if (texture && props.zoom === 18) {\n    texture.magFilter = THREE.NearestFilter;\n    //texture.minFilter = THREE.NearestFilter;\n    //texture.encoding = THREE.LinearEncoding; // not sure why this is needed...\n    //texture.encoding = THREE.sRGBEncoding; // not sure why this is needed...\n  }\n\n  return (\n    <group>\n      <mesh\n        position={[wx, wy, 0]}\n        scale={1}\n        rotation={new THREE.Euler(0, 0, 0)}\n        key={key}\n      >\n        <boxGeometry args={[side_len, side_len, 0.1, 8]} />\n        <meshStandardMaterial key={texture ? 'texture' : 'notexture'} map={texture} color={[1, 1, 1]} />\n      </mesh>\n      <Text fontSize={10 * scale / Math.pow(2, props.zoom)} color=\"blue\" position={[wx, wy, 10.2]}>\n        {key}\n      </Text>\n    </group>\n  );\n}\n","import * as THREE from 'three'\nimport React from 'react';\n//import { useStore } from './Store';\nimport { useThree } from '@react-three/fiber';\nimport { SceneMapTile } from './SceneMapTile';\n\ntype SceneMapProps = {\n}\n\n/*\nfunction r(value: number): string {\n  return (value >= 0 ? '+' : '') + (Math.round(value * 10000) / 10000).toFixed(4);\n}\n\nfunction printMatrix(name: string, m: THREE.Matrix4) {\n  console.log(name);\n  const e = m.elements;\n  // it's stored column-major...\n  console.log(`${r(e[0])} ${r(e[4])} ${r(e[8])} ${r(e[12])}`);\n  console.log(`${r(e[1])} ${r(e[5])} ${r(e[9])} ${r(e[13])}`);\n  console.log(`${r(e[2])} ${r(e[6])} ${r(e[10])} ${r(e[14])}`);\n  console.log(`${r(e[3])} ${r(e[7])} ${r(e[11])} ${r(e[15])}`);\n}\n\nfunction printVector(name: string, v: THREE.Vector4) {\n  console.log(`${name}: ${r(v.x)} ${r(v.y)} ${r(v.z)} ${r(v.w)}`);\n}\n*/\n\nfunction clamp(v: number, v_min: number, v_max: number): number {\n  if (v < v_min)\n    return v_min;\n  else if (v > v_max)\n    return v_max;\n  return v;\n}\n\ntype TileDescription = {\n  x: number,\n  y: number,\n  zoom: number,\n}\n\nexport function SceneMap(props: SceneMapProps): JSX.Element {\n  const [tiles, setTiles] = React.useState<TileDescription[]>([]);\n  const viewport = useThree(state => state.viewport);\n  const camera = useThree(state => state.camera);\n  const canvasSize = useThree(state => state.size);\n  const currentPerformance = useThree(state => state.performance.current);\n\n  React.useEffect(() => {\n    // recalculate visible tiles after camera-control motion is completed\n    // in the future, could also have a useFrame() handler checking if \n    // currentPerformance is <1 to have the tiles recalculate while the\n    // motion is in-flight\n    if (currentPerformance === 1) {\n      //console.log('recalculate tiles');\n      if (camera instanceof THREE.OrthographicCamera) {\n        const c: THREE.OrthographicCamera = camera as THREE.OrthographicCamera;\n        /*\n        console.log(`orthographic camera: ${c.left} ${c.right}, ${c.top}, ${c.bottom}, ${c.zoom}`);\n        console.log(`  viewport: ${viewport.width}, ${viewport.height}`);\n        console.log(`  dpr: ${viewport.dpr}`);\n        console.log(`  aspect: ${viewport.aspect}`);\n        console.log(`  canvas size: ${canvasSize.width}, ${canvasSize.height}`);\n        printMatrix('projection', camera.projectionMatrix);\n        printMatrix('projectionMatrixInverse', camera.projectionMatrixInverse);\n        printMatrix('matrixWorld', camera.matrixWorld);\n        printMatrix('matrixWorldInverse', camera.matrixWorldInverse);\n         */\n        // find world-coordinate bounds of the viewport: web mercator (0, 0) => (256, -256)\n        const scale = 1000;\n\n        const center_x = camera.matrixWorld.elements[12];\n        const center_y = camera.matrixWorld.elements[13];\n        const right_x = (center_x + c.right / c.zoom);\n        const left_x = (center_x + c.left / c.zoom);\n        const top_y = -(center_y + c.top / c.zoom);\n        const bottom_y = -(center_y + c.bottom / c.zoom);\n        //console.log(`extents: (${r(left_x)}, ${r(top_y)}) - (${r(right_x)}, ${r(bottom_y)})`);\n\n        // calculate web mercator zoom level do put a few tiles on the screen\n        // todo: incorporate the number of pixels in the canvas; small resolutions don't need as many.\n        let zoom_level = Math.ceil(1.5 + Math.log(scale * 256 / (right_x - left_x)) / Math.log(2));\n        const MAX_ZOOM = 18;\n        if (zoom_level < 0)\n          zoom_level = 0;\n        else if (zoom_level > MAX_ZOOM)\n          zoom_level = MAX_ZOOM;\n        //console.log(`  zoom: ${zoom_level}`);\n\n        let left_x_grid_idx = Math.floor(left_x / (256 * scale) * Math.pow(2, zoom_level));\n        let right_x_grid_idx = Math.floor(right_x / (256 * scale) * Math.pow(2, zoom_level));\n        // invert Y since we're operating in 4th quadrant to keep +z = \"up\"\n        let top_y_grid_idx = Math.floor(top_y / (256 * scale) * Math.pow(2, zoom_level));\n        let bottom_y_grid_idx = Math.floor(bottom_y / (256 * scale) * Math.pow(2, zoom_level));\n        //console.log(`  grid: (${left_x_grid_idx}, ${top_y_grid_idx}) - (${right_x_grid_idx}, ${bottom_y_grid_idx})`);\n\n\n        //const PHI_MAX = 85.05112877980659;  // web mercator... 2*atan(e^pi) - pi/2\n        //let top_y_grid_idx = Math.pow(2, zoom_level) - 1 - Math.floor(1 / (2 * PHI_MAX) * Math.pow(2, zoom_level) * (top_y + PHI_MAX));\n        //let bottom_y_grid_idx = Math.pow(2, zoom_level) - 1 - Math.ceil(1 / (2 * PHI_MAX) * Math.pow(2, zoom_level) * (bottom_y + PHI_MAX));\n        //const bottom_y_grid_idx = Math.floor(1 / 360 * Math.pow(2, zoom_level) * (right_x + 180));\n\n        const max_cell = Math.pow(2, zoom_level) - 1;\n        left_x_grid_idx = clamp(left_x_grid_idx, 0, max_cell);\n        right_x_grid_idx = clamp(right_x_grid_idx, 0, max_cell);\n        top_y_grid_idx = clamp(top_y_grid_idx, 0, max_cell);\n        bottom_y_grid_idx = clamp(bottom_y_grid_idx, 0, max_cell);\n\n        /*\n        console.log(`horizontal ${left_x},${right_x} => ${left_x_grid_idx},${right_x_grid_idx}`);\n        console.log(`vertical ${bottom_y},${top_y} => ${bottom_y_grid_idx},${top_y_grid_idx}`);\n         */\n\n        let next_tiles = Array<TileDescription>();\n        for (let y_idx = top_y_grid_idx; y_idx <= bottom_y_grid_idx; y_idx++) {\n          for (let x_idx = left_x_grid_idx; x_idx <= right_x_grid_idx; x_idx++) {\n            //console.log(`looking for tile (${x_idx}, ${y_idx}, ${zoom_level})`);\n            //const tile_str = `${x_idx}_${y_idx}_${zoom_level}`;\n            const tile_desc = { x: x_idx, y: y_idx, zoom: zoom_level, visible: true };\n            next_tiles.push(tile_desc);\n          }\n        }\n        setTiles(next_tiles);\n        console.log('setTiles()');\n\n        /*\n        const upper_left = new THREE.Vector4(c.left, c.top, 0, 1);\n        upper_left.applyMatrix4(camera.projectionMatrix);\n        upper_left.applyMatrix4(camera.matrixWorld);\n        //const upper_left_cast: THREE.Vector4 = camera.matrixWorld * camera.projectionMatrix * upper_left;\n        printVector('upper_left', upper_left);\n         */\n      }\n    }\n  }, [currentPerformance, camera, viewport, canvasSize]);\n\n  /*\n  useFrame(state => {\n    //console.log(`viewport: ${state.viewport.width}, ${state.viewport.height}, ${state.viewport.factor}`);\n    //console.log(`camera: ${state.camera.projectionMatrix.elements}  ${state.camera.matrixWorld.elements}`);\n    //console.log(`viewport: ${state.viewport.width}, ${state.viewport.height}, ${state.viewport.factor}`);\n    //console.log(`camera class: ${typeof state.camera.constructor.name}`);\n  });\n  */\n\n  return (\n    <group>\n      {tiles.map(tile_desc =>\n        <SceneMapTile\n          x={tile_desc.x}\n          y={tile_desc.y}\n          zoom={tile_desc.zoom}\n          key={`${tile_desc.zoom}_${tile_desc.x}_${tile_desc.y}`}\n        />\n      )}\n    </group>\n  );\n}\n","import * as THREE from 'three';\nimport { Canvas } from '@react-three/fiber';\nimport React, { useRef } from 'react';\nimport { OrbitControls } from '@react-three/drei';\nimport { PerspectiveCamera, OrthographicCamera } from '@react-three/drei';\nimport { CoordinateSystem } from './Complex';\n\nimport { useStore, clearSelection } from './Store';\nimport { SceneComplex } from './SceneComplex';\nimport { SceneMap } from './SceneMap';\n\ntype EditorSceneProps = {\n};\n\nexport function EditorScene(props: EditorSceneProps): JSX.Element {\n  const showMap = useStore(state => (state.complex.coordinate_system === CoordinateSystem.WGS84));\n  const setStore = useStore(state => state.set);\n  //const clearSelection = useStore(state => state.clearSelection);\n  const editorMode = useStore(state => state.editorMode);\n  const cameraInitialPose = useStore(state => state.cameraInitialPose);\n\n  const Controls = (): JSX.Element => {\n    THREE.Object3D.DefaultUp = new THREE.Vector3(0, 0, 1);\n    const perspective_camera = useRef<THREE.Camera>(null);\n    const orthographic_camera = useRef<THREE.Camera>(null);\n    const enableMotionControls = useStore(state => state.enableMotionControls);\n\n    // todo: there is probably a better way to do this than having two cameras\n    return (\n      <>\n        <PerspectiveCamera\n          ref={perspective_camera}\n          position={cameraInitialPose.position}\n          fov={60}\n          makeDefault={editorMode === '3d'}\n        />\n        <OrthographicCamera\n          ref={orthographic_camera}\n          position={[cameraInitialPose.target.x, cameraInitialPose.target.y, cameraInitialPose.target.z + 100]}\n          zoom={cameraInitialPose.zoom}\n          makeDefault={editorMode === '2d'}\n        />\n        {perspective_camera && orthographic_camera && <OrbitControls\n          enableDamping={false}\n          screenSpacePanning={editorMode === '3d' ? false : true}\n          target={cameraInitialPose.target}\n          camera={editorMode === '3d' ? perspective_camera.current! : orthographic_camera.current!}\n          maxPolarAngle={editorMode === '3d' ? Infinity : 0}\n          minAzimuthAngle={editorMode === '3d' ? -Infinity : 0}\n          maxAzimuthAngle={editorMode === '3d' ? Infinity : 0}\n          mouseButtons={{\n            LEFT: THREE.MOUSE.PAN,\n            MIDDLE: -1,\n            RIGHT: THREE.MOUSE.ROTATE,\n          }}\n          touches={{\n            ONE: THREE.TOUCH.PAN,\n            TWO: THREE.TOUCH.ROTATE\n          }}\n          enabled={enableMotionControls}\n          regress={true}\n        />}\n      </>\n    );\n  }\n\n  console.log('EditorScene()');\n  return (\n    <Canvas\n      frameloop=\"demand\"\n      mode=\"concurrent\"\n      linear={true}\n      onPointerMissed={() => {\n        clearSelection(setStore);\n      }}\n    >\n      <Controls />\n      <axesHelper />\n      <ambientLight intensity={1.0}/>\n      <SceneComplex />\n      {showMap && <SceneMap />}\n\n    </Canvas>\n  )\n}\n/*\n      <Suspense fallback={null} >\n      <pointLight position={[10, 10, 10]} />\n      </Suspense>\n*/\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { useStore } from './Store';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  noSelectionDiv: {\n  },\n  table: {\n    padding: '0px',\n    margin: '0px'\n  },\n  tableHead: {\n  },\n  tableHeadRow: {\n    borderBottomStyle: 'solid',\n    borderBottom: '1px',\n    borderBottomColor: theme.palette.primary.main,\n  },\n  tableHeadCell: {\n    fontWeight: 'bold',\n    padding: '0px',\n    paddingLeft: '5px',\n  },\n  tableCell: {\n    padding: '0px',\n    paddingLeft: '5px',\n  }\n}));\n\n/*\n      <TableHead className={classes.tableHead}>\n        <TableRow className={classes.tableHeadRow}>\n          <TableCell className={classes.tableHeadCell}>Property Name</TableCell>\n          <TableCell className={classes.tableHeadCell}>Property Value</TableCell>\n        </TableRow>\n      </TableHead>\n */\n\nexport default function PropertyEditor(): JSX.Element {\n  const classes = useStyles();\n  const selection = useStore(state => state.selection);\n  useStore(state => state.propertyRepaintCount);  // repaint during tool moves\n\n  if (!selection) {\n    return (<div className={classes.noSelectionDiv}></div>);\n  }\n\n  return (\n    <Table className={classes.table}>\n      <TableHead>\n        <TableCell className={classes.tableHeadCell}>{selection.object_type_name}</TableCell>\n        <TableCell className={classes.tableHeadCell}></TableCell>\n      </TableHead>\n      <TableBody>\n        {selection.props.map(prop =>\n          <TableRow>\n            <TableCell className={classes.tableCell}>{prop.name}</TableCell>\n            <TableCell className={classes.tableCell}>{prop.get_value()}</TableCell>\n          </TableRow>\n        )}\n        {selection.params.map(param =>\n          <TableRow>\n            <TableCell className={classes.tableCell}>{param.name}</TableCell>\n            <TableCell className={classes.tableCell}>{param.value.toString()}</TableCell>\n          </TableRow>\n        )}\n      </TableBody>\n    </Table>\n  );\n}\n","import { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport { v4 as generate_uuid } from 'uuid';\nimport YAML from 'yaml';\n\nexport class Vertex extends EditorObject {\n  x: number = 0;\n  y: number = 0;\n  name: string = '';\n\n  static fromYAML(data: any): Vertex {\n    let vertex = new Vertex();\n    vertex.object_type_name = 'Vertex';\n    vertex.uuid = generate_uuid();\n    vertex.x = data[0];\n    vertex.y = -data[1];\n    vertex.name = data[3];\n    vertex.paramsFromYAML(data[4]);\n\n    vertex.props.push(new EditorProp('name', () => vertex.name));\n    vertex.props.push(new EditorProp('x', () => { return EditorObject.roundNicely(vertex.x)} ));\n    vertex.props.push(new EditorProp('y', () => { return EditorObject.roundNicely(vertex.y)} ));\n\n    return vertex;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.x);\n    node.add(-this.y);\n    node.add(0.0);\n    node.add(this.name);\n    if (this.params.length)\n      node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n","import YAML from 'yaml';\nimport { v4 as generate_uuid } from 'uuid';\nimport { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport { Vertex } from './Vertex';\nimport { Feature } from './Feature';\n\n//import { EditorParam } from './EditorParam';\nimport {\n  EditorDoor,\n  EditorWall,\n  EditorMeasurement,\n  EditorFloor,\n  EditorImage,\n  EditorLane,\n  EditorModel,\n  EditorConstraint } from './Store';\n\nexport class Level extends EditorObject {\n  name: string = '';\n  elevation: number = 0;\n  scale: number = 1.234;\n  doors: EditorDoor[] = [];\n  vertices: Vertex[] = [];\n  walls: EditorWall[] = [];\n  measurements: EditorMeasurement[] = [];\n  floors: EditorFloor[] = [];\n  lanes: EditorLane[] = [];\n  models: EditorModel[] = [];\n  images: EditorImage[] = [];\n  features: Feature[] = [];\n  constraints: EditorConstraint[] = [];\n\n  static fromYAML(_name: string, data: any): Level {\n    let level = new Level();\n    level.object_type_name = 'Level';\n    level.uuid = generate_uuid();\n    level.name = _name;\n    level.props.push(new EditorProp('name', () => level.name));\n    level.props.push(new EditorProp('elevation', () => level.elevation));\n    level.props.push(new EditorProp('scale', () => level.scale));\n\n    if (data['drawing'] && data['drawing']['filename']) {\n      let image = new EditorImage();\n      image.uuid = generate_uuid();\n      image.filename = data['drawing']['filename'];\n      image.isLegacyDefaultImage = true;\n      level.images.push(image);\n    }\n\n    level.elevation = data['elevation'];\n    level.constraints = data['constraints'].map((constraint: any) => EditorConstraint.fromYAML(constraint));\n    level.doors = data['doors'].map((door: any) => EditorDoor.fromYAML(door));\n    level.features = data['features'].map((feature: any) => Feature.fromYAML(feature));\n    level.floors = data['floors'].map((floor: any) => EditorFloor.fromYAML(floor));\n    for (const layer_name in data['layers']) {\n      level.images.push(EditorImage.fromLayerYAML(layer_name, data['layers'][layer_name]));\n    }\n    level.lanes = data['lanes'].map((lane: any) => EditorLane.fromYAML(lane));\n    level.models = data['models'].map((model: any) => EditorModel.fromYAML(model));\n    level.measurements = data['measurements'].map((measurement: any) => EditorMeasurement.fromYAML(measurement));\n    level.vertices = data['vertices'].map((vertex: any) => Vertex.fromYAML(vertex));\n    level.walls = data['walls'].map((wall: any) => EditorWall.fromYAML(wall));\n\n    level.calculateScale();\n\n    return level;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n\n    node.add({ key: 'constraints', value: this.constraints.map(constraint => constraint.toYAML()) });\n    node.add({ key: 'doors', value: this.doors.map(door => door.toYAML()) });\n\n    if (this.images.length > 0 && this.images[0].isLegacyDefaultImage) {\n      node.add({ key: 'drawing', value: { 'filename': this.images[0].filename } });\n    }\n\n    node.add({ key: 'elevation', value: this.elevation });\n    node.add({ key: 'features', value: this.features.map(feature => feature.toYAML()) });\n    node.add({ key: 'flattened_x_offset', value: 0 });\n    node.add({ key: 'flattened_y_offset', value: 0 });\n    node.add({ key: 'floors', value: this.floors.map(floor => floor.toYAML()) });\n    node.add({ key: 'lanes', value: this.lanes.map(lane => lane.toYAML()) });\n\n    let layers_node = new YAML.YAMLMap();\n    for (const image of this.images) {\n      if (!image.isLegacyDefaultImage) {\n        layers_node.add({ key: image.name, value: image.toLayerYAML() });\n      }\n    }\n    node.add({ key: 'layers', value: layers_node });\n    node.add({ key: 'measurements', value: this.measurements.map(measurement => measurement.toYAML()) });\n    node.add({ key: 'models', value: this.models.map(model => model.toYAML()) });\n    node.add({ key: 'vertices', value: this.vertices.map(vertex => vertex.toYAML()) });\n    node.add({ key: 'walls', value: this.walls.map(wall => wall.toYAML()) });\n    return node;\n  }\n\n  calculateScale(): void {\n    let sum = 0.0;\n    let count = 0;\n    for (const meas of this.measurements) {\n      count++;\n      const dx = this.vertices[meas.start_idx].x - this.vertices[meas.end_idx].x;\n      const dy = this.vertices[meas.start_idx].y - this.vertices[meas.end_idx].y;\n      const d_pixels = Math.sqrt(dx*dx + dy*dy);\n      sum += meas.distance / d_pixels;\n    }\n\n    if (count > 0) {\n      this.scale = sum / count;\n    }\n    else {\n      this.scale = 0.05;  // just use something sane...\n    }\n  }\n\n  transformPoint(x: number, y: number): [number, number] {\n    return [\n      x * this.scale,\n      y * this.scale,\n    ];\n  }\n\n  inverseTransformPoint(x: number, y: number): [number, number] {\n    return [\n      x / this.scale,\n      y / this.scale,\n    ];\n  }\n}\n","import YAML from 'yaml';\nimport * as THREE from 'three';\nimport { v4 as generate_uuid } from 'uuid';\nimport { EditorObject } from './EditorObject';\nimport { CameraPose } from './Store';\nimport { Level } from './Level';\n\nexport class Building extends EditorObject {\n  name: string = '';\n  url_base: string = '';\n  levels: Level[] = [];\n  reference_level_name: string = '';\n  yaml_doc: YAML.Document = new YAML.Document();;\n\n  static fromYAML(yaml_text: string): Building {\n    const yaml = YAML.parse(yaml_text);\n    let building = new Building();\n    building.uuid = generate_uuid();\n    building.name = yaml['name'];\n    for (const level_name in yaml['levels']) {\n      const level_data = yaml['levels'][level_name];\n      building.levels.push(Level.fromYAML(level_name, level_data));\n    }\n    if (yaml['reference_level_name']) {\n      building.reference_level_name = yaml['reference_level_name'];\n    }\n    else {\n      if (building.levels.length > 0) {\n        building.reference_level_name = building.levels[0].name;\n      }\n    }\n    building.yaml_doc = YAML.parseDocument(yaml_text);\n    return building;\n  }\n\n  toYAMLString(): string {\n    let yaml_doc = new YAML.Document(new YAML.YAMLMap());\n    let levels_node = new YAML.YAMLMap();\n    for (const level of this.levels) {\n      levels_node.add({ key: level.name, value: level.toYAML() });\n    }\n    yaml_doc.add({ key: 'crowd_sim', value: this.yaml_doc.get('crowd_sim') });\n    yaml_doc.add({ key: 'levels', value: levels_node });\n\n    let lifts_node = new YAML.YAMLMap();\n    // todo: add lifts to this map node\n    // only use flow style to enforce whitespace similarity for empty maps\n    lifts_node.flow = true;\n\n    yaml_doc.add({ key: 'lifts', value: lifts_node });\n    yaml_doc.add({ key: 'name', value: this.name });\n    return yaml_doc.toString({lineWidth: 0, minContentWidth: 2});\n  }\n\n  computeBoundingBox(): THREE.Box3 {\n    let vec_min = new THREE.Vector3(Infinity, Infinity, Infinity);\n    let vec_max = new THREE.Vector3(-Infinity, -Infinity, -Infinity);\n    for (const level of this.levels) {\n      for (const vertex of level.vertices) {\n        if (vertex.x < vec_min.x)\n          vec_min.x = vertex.x;\n        if (vertex.x > vec_max.x)\n          vec_max.x = vertex.x;\n  \n        if (vertex.y < vec_min.y)\n          vec_min.y = vertex.y;\n        if (vertex.y > vec_max.y)\n          vec_max.y = vertex.y;\n      }\n    }\n    return new THREE.Box3(vec_min, vec_max);\n  }\n\n  computeInitialCameraPose(): CameraPose {\n    if (this.levels.length) {\n      const bb = this.computeBoundingBox();\n      const cx = (bb.min.x + bb.max.x) / 2;\n      const cy = (bb.min.y + bb.max.y) / 2;\n      const [t_cx, t_cy] = this.levels[0].transformPoint(cx, cy);\n      const target = new THREE.Vector3(t_cx, t_cy, 0);\n      const position = new THREE.Vector3(\n        target.x + 10,\n        target.y - 10,\n        target.z + 10);\n      return {\n        position: position,\n        target: target,\n        zoom: 20,\n      };\n    }\n    else {\n      return {\n        position: new THREE.Vector3(10, 10, 10),\n        target: new THREE.Vector3(0, 0, 0),\n        zoom: 20,\n      };\n    }\n  }\n}\n","import { useStore } from './Store';\nimport { Building } from './Building';\nimport { Complex } from './Complex';\nimport YAML from 'yaml';\nimport { v4 as generate_uuid } from 'uuid';\n\n\nexport function YAMLParser(yaml_text: string, url_base: string): Building {\n  const building = Building.fromYAML(yaml_text);\n  building.url_base = url_base;\n  const cameraInitialPose = building.computeInitialCameraPose();\n\n  const complex = new Complex();\n  complex.buildings = [building];\n  complex.uuid = generate_uuid();\n  complex.url_base = url_base;\n  complex.name = building.name;\n\n  useStore.setState({\n    complex: complex,\n    selection: null,\n    cameraInitialPose: cameraInitialPose\n  });\n\n  return building;\n}\n\nexport async function YAMLRetriever(url_base: string, resource_name: string): Promise<void> {\n  await fetch(url_base + resource_name)\n    .then(response => response.text())\n    .then(text => YAMLParser(text, url_base))\n}\n\nexport async function YAMLRetrieveDemo(name: string): Promise<void> {\n  await YAMLRetriever(\n    process.env.PUBLIC_URL + `/demos/${name}/`,\n    `${name}.building.yaml`);\n}\n\nexport async function YAMLSender(url: string): Promise<void> {\n  Object.getPrototypeOf(YAML.YAMLMap).maxFlowStringSingleLineLength = 10000;\n  const { complex } = useStore.getState();\n  let yaml_text: string = complex.toYAMLString();\n  let yaml_size = new Blob([yaml_text]).size;  // utf-8 encoding length\n  await fetch(url, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/x-yaml',\n      'content-length': yaml_size.toString(),\n    },\n    body: yaml_text,\n  });\n}\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MapIcon from '@material-ui/icons/Map';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { YAMLParser } from './YAMLParser';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  directoryButton: {\n    fontSize: theme.typography.h5.fontSize\n  },\n  filename: {\n    fontSize: theme.typography.h5.fontSize,\n    textDecoration: 'underline'\n  },\n  dialog: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\ntype OpenDialogProps = {\n  open: boolean;\n  onOpen: () => void; //filename: string, handle: FileSystemDirectoryHandle | undefined) => void;\n  onCancel: () => void;\n};\n\nexport default function OpenDialog(props: OpenDialogProps): JSX.Element {\n  const classes = useStyles(props);\n  const [buildingFileNames, setBuildingFileNames] = React.useState<string[]>([]);\n  const [directoryHandle, setDirectoryHandle] = React.useState<FileSystemDirectoryHandle>();\n\n  const onDirectoryClick = async () => {\n    setBuildingFileNames([]);\n    const handle = await window.showDirectoryPicker();\n    await setDirectoryHandle(handle);\n    for await (const entry of handle.values()) {\n      if (entry.name.endsWith('.building.yaml'))\n        setBuildingFileNames(previous => [...previous, entry.name]);\n    }\n  }\n\n  const loadFile = async(filename: string) => {\n    if (directoryHandle) {\n      const fileHandle = await directoryHandle.getFileHandle(filename);\n      const file = await fileHandle.getFile();\n      const text = await file.text();\n      YAMLParser(text, '');\n    }\n    props.onOpen();\n  }\n\n  const buildingFileList = () => {\n    if (buildingFileNames.length > 0)\n      return (\n        <div>\n          <List\n            subheader={\n              <ListSubheader component=\"div\">\n                Available Files\n              </ListSubheader>\n            }\n          >\n            {buildingFileNames.map((filename) =>\n              <ListItem button key={filename}>\n                <ListItemIcon>\n                  <MapIcon />\n                </ListItemIcon>\n                <ListItemText primary={filename} onClick={e => {loadFile(filename)}} />\n              </ListItem>)\n            }\n          </List>\n        </div>\n      );\n  }\n\n  return (\n    <Dialog open={props.open} onClose={props.onCancel}>\n      <DialogTitle>Open Building Map</DialogTitle>\n      <DialogContent className={classes.dialog}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onDirectoryClick}>\n          Select Directory...\n        </Button>\n        {buildingFileList()}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onCancel} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useCallback } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport { useStore, EditorToolID, setEditorMode, clearSelection, setActiveTool } from './Store';\nimport { Complex } from './Complex';\nimport OpenDialog from './OpenDialog';\nimport { YAMLRetriever, YAMLRetrieveDemo, YAMLSender } from './YAMLParser';\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\nimport PanToolIcon from '@material-ui/icons/PanTool';\n\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport * as THREE from 'three';\n\nconst StyledToggleButtonGroup = withStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(0.5),\n    marginRight: 5\n  },\n  grouped: {\n    //marginRight: theme.spacing(0.5),\n    //marginLeft: theme.spacing(0.5),\n    //margin: theme.spacing(0.5),\n    color: theme.palette.primary.contrastText,\n    //background: theme.palette.primary.dark,\n    \"&.Mui-selected:hover, &:hover\": {\n      background: theme.palette.primary.dark,\n    },\n    \"&.Mui-selected\": {\n      background: theme.palette.primary.dark,\n      color: theme.palette.primary.contrastText\n    },\n    /*\n    '&:not(:first-child)': {\n      borderRadius: '5px',\n    },\n    '&:first-child': {\n      borderRadius: '5px',\n    },\n    */\n  },\n}))(ToggleButtonGroup);\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  appTitle: {\n    marginRight: 20\n  },\n  filler: {\n    flex: 1\n  }\n}));\n\nexport default function MainMenu(props: React.PropsWithChildren<{}>): JSX.Element {\n  const classes = useStyles(props);\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState(null);\n  const [isOpenDialogOpen, setIsOpenDialogOpen] = React.useState(false);\n  const [snackOpen, setSnackOpen] = React.useState(false);\n  const [snackMessage, setSnackMessage] = React.useState('');\n  const [mapType, setMapType] = React.useState('');\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const activeTool = useStore(state => state.activeTool);\n  //const setEditorMode = useStore(state => state.setEditorMode);\n  //const setActiveTool = useStore(state => state.setActiveTool);\n  //const clearSelection = useStore(state => state.clearSelection);\n\n  const onModeChange = (event: React.MouseEvent<HTMLElement>, newMode: string | null) => {\n    if (newMode !== null) {\n      if (editorMode === '2d') {\n        /*\n        const x = store.cameraPose.position.x;\n        const y = store.cameraPose.position.y;\n        console.log(`previous 2d center point: ${x}, ${y}`);\n         */\n        setStore(state => {\n          state.cameraInitialPose = {\n            position: new THREE.Vector3(state.cameraPose.position.x + 2, state.cameraPose.position.y - 2, 10),\n            target: new THREE.Vector3(state.cameraPose.position.x, state.cameraPose.position.y, 0),\n            zoom: 20,\n          };\n        });\n      }\n      setEditorMode(setStore, newMode);\n      clearSelection(setStore);\n    }\n  };\n\n  const onToolChange = (event: React.MouseEvent<HTMLElement>, newTool: EditorToolID | null) => {\n    if (newTool !== null) {\n      setActiveTool(setStore, newTool);\n      clearSelection(setStore);\n    }\n  }\n\n  const save = useCallback(\n    async () => {\n      if (mapType === 'local_file') {\n        setSnackMessage('Cannot save. Local file save not yet implemented.');\n        setSnackOpen(true);\n      }\n      else if (mapType === 'local_rest') {\n        try {\n          await YAMLSender('http://localhost:8000/map_file');\n        } catch (error) {\n          setSnackMessage('Error while saving to local REST server');\n          setSnackOpen(true);\n        }\n      }\n      else if (mapType === 'demo') {\n        setSnackMessage('Cannot save. Demo maps are read-only.');\n        setSnackOpen(true);\n      }\n      else {\n        setSnackMessage('Cannot save. No map loaded.');\n        setSnackOpen(true);\n      }\n    },\n    [mapType]\n  );\n\n  const snackClose = () => {\n    setSnackOpen(false);\n  }\n\n  React.useEffect(() => {\n    const keyDown = (event: KeyboardEvent) => {\n      let key = event.key.toLowerCase();\n      if (key === 'm') {\n        setActiveTool(setStore, EditorToolID.MOVE);\n        clearSelection(setStore);\n      } else if (key === 'escape') {\n        setActiveTool(setStore, EditorToolID.SELECT);\n        clearSelection(setStore);\n      } else if (key === 's' && event.ctrlKey) {\n        event.preventDefault();\n        save();\n        return false;\n      }\n    };\n\n    window.addEventListener('keydown', keyDown);\n    return () => {\n      window.removeEventListener('keydown', keyDown);\n    };\n  }, [setStore, save]);\n\n  React.useEffect(() => {\n    setStore(state => {\n      state.enableMotionControls = (activeTool === EditorToolID.SELECT);\n    });\n  }, [activeTool, setStore]);\n\n  return (\n    <AppBar position=\"fixed\">\n      <ToolBar>\n        <IconButton\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"Menu\"\n          onClick={(e: any) => { setMenuAnchorEl(e.currentTarget); }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          keepMounted\n          anchorEl={menuAnchorEl}\n          open={Boolean(menuAnchorEl)}\n          onClose={() => setMenuAnchorEl(null)}\n          getContentAnchorEl={null}\n          anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\n          transformOrigin={{vertical: 'top', horizontal: 'center'}}\n          transitionDuration={0.0}\n        >\n          <MenuItem\n            onClick={() => {\n              console.log('create new complex');\n              const complex = Complex.fromNewCommand();\n              const cameraInitialPose = complex.computeInitialCameraPose();\n              useStore.setState({\n                complex: complex,\n                selection: null,\n                cameraInitialPose: cameraInitialPose,\n              });\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <InsertDriveFileIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Create new geo-located complex\n            </ListItemText>\n          </MenuItem>\n          <Divider />\n          <MenuItem\n            onClick={async () => {\n              try {\n                await YAMLRetriever('http://localhost:8000/', 'map_file');\n                setMapType('local_rest');\n              } catch (error) {\n                setSnackMessage('could not open file from localhost:8000');\n                setSnackOpen(true);\n              }\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open map from localhost:8000\n            </ListItemText>\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              await YAMLRetrieveDemo('office');\n              setMapType('demo');\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open demo map\n            </ListItemText>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              setIsOpenDialogOpen(true);\n              setMapType('local_file');\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open map from local file...\n            </ListItemText>\n          </MenuItem>\n          <Divider />\n          <MenuItem\n            onClick={() => {\n              save();\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <SaveIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Save\n            </ListItemText>\n          </MenuItem>\n        </Menu>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.appTitle}>\n          Traffic Editor\n        </Typography>\n        <div className={classes.filler} />\n        <StyledToggleButtonGroup\n          value={activeTool}\n          size=\"small\"\n          exclusive\n          onChange={onToolChange}\n          aria-label=\"tool\"\n        >\n          <ToggleButton value={EditorToolID.SELECT}>\n            <Tooltip title=\"Select tool [Escape]\">\n              <PanToolIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={EditorToolID.MOVE}>\n            <Tooltip title=\"Move tool [m]\">\n              <OpenWithIcon />\n            </Tooltip>\n          </ToggleButton>\n        </StyledToggleButtonGroup>\n        <StyledToggleButtonGroup\n          value={editorMode}\n          size=\"small\"\n          exclusive\n          onChange={onModeChange}\n          aria-label=\"editor mode\"\n        >\n          <ToggleButton value=\"3d\">3D</ToggleButton>\n          <ToggleButton value=\"2d\">2D</ToggleButton>\n        </StyledToggleButtonGroup>\n      </ToolBar>\n      <OpenDialog\n        open={isOpenDialogOpen}\n        onOpen={() => setIsOpenDialogOpen(false)}\n        onCancel={() => setIsOpenDialogOpen(false)}\n      />\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        open={snackOpen}\n        onClose={snackClose}\n        autoHideDuration={2000}\n        transitionDuration={0}\n        TransitionProps={{\n          appear: false,\n        }}\n        action={\n          <React.Fragment>\n            <IconButton onClick={snackClose}>\n              <CloseIcon />\n            </IconButton>\n          </React.Fragment>\n        }\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={snackClose}>\n          {snackMessage}\n        </MuiAlert>\n      </Snackbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport { ComplexTree } from './ComplexTree';\nimport { EditorScene } from './EditorScene';\nimport PropertyEditor from './PropertyEditor';\nimport MainMenu from './MainMenu';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    minHeight: '100vh',\n  },\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar,\n  workingArea: {\n    backgroundColor: \"black\",\n    height: `calc(100vh - 64px)`,\n  },\n  gridLeftColumn: {\n    borderRight: '5px',\n    borderRightStyle: 'solid',\n    borderRightColor: theme.palette.primary.main,\n  },\n  propertyGridItem: {\n    borderTop: '5px',\n    borderTopStyle: 'solid',\n    borderTopColor: theme.palette.primary.main,\n  }\n}));\n\nexport default function App(props: React.PropsWithChildren<{}>): JSX.Element {\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes.root}>\n      <MainMenu />\n      <div className={classes.toolbarMargin} />\n      <Grid container spacing={0}>\n        <Grid className={classes.gridLeftColumn} container xs={3} direction=\"column\" spacing={0}>\n          <Grid item style={{height: '40vh', overflow: 'auto'}}>\n            <ComplexTree />\n          </Grid>\n          <Grid item className={classes.propertyGridItem} style={{height: '40vh', overflow: 'auto'}}>\n            <PropertyEditor />\n          </Grid>\n        </Grid>\n        <Grid item xs={9} className={classes.workingArea}>\n          <EditorScene />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}