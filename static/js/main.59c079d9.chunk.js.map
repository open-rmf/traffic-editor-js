{"version":3,"sources":["Directory.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Directory","props","directoryName","directoryHandle","buildingFileNames","openClick","bind","a","console","log","window","alert","showDirectoryPicker","this","values","entry","name","endsWith","push","forceUpdate","className","onClick","map","React","Component","useStyles","makeStyles","theme","root","flexGrow","flex","menuButton","marginLeft","marginRight","toolbarMargin","mixins","toolbar","App","useState","anchorEl","setAnchorEl","classes","AppBar","position","IconButton","color","aria-label","event","currentTarget","keepMounted","open","Boolean","onClose","MenuItem","Typography","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mYAEqBA,E,kDAKnB,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IALRC,cAAwB,GAIA,EAHxBC,gBAAoD,KAG5B,EAFxBC,kBAA8B,GAI5B,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBAFK,E,oFAKxB,wCAAAC,EAAA,yDACEC,QAAQC,IAAI,aACN,wBAAyBC,OAFjC,uBAGIC,MAAM,6DAHV,0CAM+BD,OAAOE,sBANtC,OAMEC,KAAKV,gBANP,wCAO4BU,KAAKV,gBAAgBW,UAPjD,6HAOmBC,EAPnB,GAQcC,KAAKC,SAAS,mBACtBJ,KAAKT,kBAAkBc,KAAKH,EAAMC,MATxC,kTAYEH,KAAKM,cAZP,4E,0EAeA,WACE,OACE,gCACE,wBAAQC,UAAU,iBAAiBC,QAASR,KAAKR,UAAjD,4BACA,6BACGQ,KAAKT,kBAAkBkB,KAAI,SAASN,GAAQ,OAAO,6BAAKA,gB,GA9B5BO,IAAMC,WCWvCC,G,MAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,KAAM,CACJA,KAAM,GAERC,WAAY,CACVC,YAAa,GACbC,YAAa,IAEfC,cAAeP,EAAMQ,OAAOC,aAGf,SAASC,EAAIpC,GAAkD,IAAD,EAC3CsB,IAAMe,SAAS,MAD4B,mBACpEC,EADoE,KAC1DC,EAD0D,KAGrEC,EAAUhB,EAAUxB,GAe1B,OACE,sBAAKmB,UAAWqB,EAAQb,KAAxB,UACE,cAACc,EAAA,EAAD,CAAQC,SAAS,QAAjB,SACE,eAAC,IAAD,WACE,cAACC,EAAA,EAAD,CACExB,UAAWqB,EAAQV,WACnBc,MAAM,UACNC,aAAW,OACXzB,QArBQ,SAAC0B,GACjBP,EAAYO,EAAMC,gBAgBZ,SAME,cAAC,IAAD,MAEF,cAAC,IAAD,CACEC,aAAW,EACXV,SAAUA,EACVW,KAAMC,QAAQZ,GACda,QAzBQ,WAChBZ,EAAY,OAoBN,SAME,cAACa,EAAA,EAAD,CAAUhC,QAvBH,WACfX,OAAOC,MAAM,SACb6B,EAAY,OAqBJ,oBAEF,cAACc,EAAA,EAAD,CACEC,QAAQ,KACRV,MAAM,UACNzB,UAAWqB,EAAQX,KAHrB,iCASJ,qBAAKV,UAAWqB,EAAQP,gBACxB,cAAC,EAAD,IAEA,iDC3EN,IAYesB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.59c079d9.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Directory extends React.Component {\n  directoryName: string = '';\n  directoryHandle: FileSystemDirectoryHandle | null = null;\n  buildingFileNames: string[] = [];\n\n  constructor(props: any) {\n    super(props);\n    this.openClick = this.openClick.bind(this);\n  }\n\n  async openClick() {\n    console.log('openClick');\n    if (!('showDirectoryPicker' in window)) {\n      alert('This browser does not support the File System Access API.');\n      return;\n    }\n    this.directoryHandle = await window.showDirectoryPicker();\n    for await (const entry of this.directoryHandle.values()) {\n      if (entry.name.endsWith('.building.yaml'))\n        this.buildingFileNames.push(entry.name);\n    }\n    // todo: setState(something)\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <div>\n        <button className=\"toolbar-button\" onClick={this.openClick}>Open Directory</button>\n        <ul>\n          {this.buildingFileNames.map(function(name) { return <li>{name}</li>; })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Directory from './Directory';\nimport './App.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar\n}));\n\nexport default function App(props: React.PropsWithChildren<{}>): JSX.Element {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const classes = useStyles(props);\n\n  const menuClick = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  }\n\n  const menuClose = () => {\n    setAnchorEl(null);\n  }\n\n  const menuOpen = () => {\n    window.alert('hello');\n    setAnchorEl(null);\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <ToolBar>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={menuClick}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Menu\n            keepMounted\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={menuClose}\n          >\n            <MenuItem onClick={menuOpen}>Open</MenuItem>\n          </Menu>\n          <Typography\n            variant=\"h5\"\n            color=\"inherit\"\n            className={classes.flex}\n          >\n            Traffic Editor\n          </Typography>\n        </ToolBar>\n      </AppBar>\n      <div className={classes.toolbarMargin} />\n      <Directory>\n      </Directory>\n      <div>\n        hello world\n      </div>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}