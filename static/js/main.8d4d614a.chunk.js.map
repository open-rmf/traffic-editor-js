{"version":3,"sources":["Store.ts","EditorParam.ts","EditorObject.ts","EditorProp.ts","Vertex.ts","Feature.ts","Level.ts","Building.ts","BuildingSummary.tsx","SceneDoor.tsx","SceneFeature.tsx","SceneFloor.tsx","SceneLane.tsx","SceneImage.tsx","SceneMeasurement.tsx","SceneModel.tsx","SceneVertex.tsx","SceneWall.tsx","SceneLevel.tsx","SceneBuilding.tsx","EditorScene.tsx","PropertyEditor.tsx","YAMLParser.ts","OpenDialog.tsx","MainMenu.tsx","App.tsx","index.tsx"],"names":["EditorToolID","EditorParam","type_idx","name","value","uuid","_name","data","p","generate_uuid","EditorObject","params","props","object_type_name","params_yaml","param_name","this","push","fromYAML","node","YAML","YAMLMap","param","param_value_node","YAMLSeq","add","flow","key","Math","round","EditorProp","_getter","get_value","set_value","v","Vertex","x","y","length","paramsToYAML","vertex","paramsFromYAML","roundNicely","Feature","feature","Level","elevation","scale","doors","vertices","walls","measurements","floors","lanes","models","images","features","constraints","map","constraint","toYAML","door","isLegacyDefaultImage","filename","floor","lane","layers_node","image","toLayerYAML","measurement","model","wall","sum","count","meas","dx","start_idx","end_idx","dy","d_pixels","sqrt","distance","level","EditorImage","layer_name","EditorConstraint","EditorDoor","EditorFloor","fromLayerYAML","EditorLane","EditorModel","EditorMeasurement","EditorWall","calculateScale","Building","url_base","levels","reference_level_name","yaml_doc","Document","levels_node","get","lifts_node","toString","lineWidth","minContentWidth","vec_min","THREE","Infinity","vec_max","bb","computeBoundingBox","cx","min","max","cy","transformPoint","t_cx","t_cy","target","position","z","yaml_text","yaml","parse","building","level_name","level_data","parseDocument","vertex_indices","vertices_node","vertex_index","vertex_idx","offset","yaw","color","visible","blob","Blob","color_node","transform_node","_blob","console","log","size","feature_yaml","ids","model_name","instance_name","is_static","useStore","create","set","selection","editorMode","enableMotionControls","activeTool","SELECT","propertyRepaintCount","repaintCount","cameraInitialPose","fn","produce","setSelection","setStore","newSelection","state","clearSelection","setActiveTool","newTool","repaintPropertyEditor","updateVertexPoint","level_uuid","vertex_uuid","updateModelPoint","model_uuid","updateFeaturePoint","feature_level","feature_uuid","FeatureTreeItem","TreeItem","nodeId","label","onClick","event","ModelTreeItem","ConstraintTreeItem","substring","ParamTreeItem","DoorTreeItem","ImageTreeItem","FloorTreeItem","idx","join","WallTreeItem","MeasurementTreeItem","LaneTreeItem","VertexTreeItem","LevelTreeItem","BuildingSummary","style","margin","TreeView","defaultCollapseIcon","defaultExpandIcon","SceneDoor","v1","vertex_start","v2","vertex_end","len","xyrot","atan2","React","useMemo","setRGB","rotation","stopPropagation","args","SceneFeature","isMoveToolActive","MOVE","useState","dragActive","setDragActive","PI","onPointerDown","setPointerCapture","pointerId","onPointerUp","releasePointerCapture","onPointerMove","inverseTransformPoint","unprojectedPoint","px","py","intersection_point","ray","intersectPlane","Text","SceneFloor","shape","started","t_x","t_y","lineTo","moveTo","v0_x","v0_y","SceneLane","SceneImage","useLoader","TextureLoader","texture","width_pixels","height_pixels","width_meters","height_meters","magFilter","minFilter","width","height","SceneMeasurement","SceneModel","SceneVertex","SceneWall","SceneLevel","filter","SceneBuilding","EditorScene","Controls","DefaultUp","perspective_camera","useRef","orthographic_camera","PerspectiveCamera","ref","fov","makeDefault","OrthographicCamera","zoom","OrbitControls","enableDamping","screenSpacePanning","camera","current","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","mouseButtons","LEFT","MIDDLE","PAN","RIGHT","ROTATE","touches","ONE","TWO","enabled","frameloop","onPointerMissed","fallback","useStyles","makeStyles","theme","noSelectionDiv","table","padding","tableHead","tableHeadRow","borderBottomStyle","borderBottom","borderBottomColor","palette","primary","main","tableHeadCell","fontWeight","paddingLeft","tableCell","PropertyEditor","classes","Table","className","TableHead","TableCell","TableBody","prop","TableRow","YAMLParser","computeInitialCameraPose","setState","YAMLRetriever","resource_name","a","fetch","then","response","text","YAMLRetrieveDemo","process","YAMLSender","url","Object","getPrototypeOf","maxFlowStringSingleLineLength","getState","toYAMLString","yaml_size","method","headers","body","directoryButton","fontSize","typography","h5","textDecoration","dialog","backgroundColor","background","paper","OpenDialog","buildingFileNames","setBuildingFileNames","directoryHandle","setDirectoryHandle","onDirectoryClick","window","showDirectoryPicker","handle","entry","endsWith","previous","values","loadFile","getFileHandle","fileHandle","getFile","file","onOpen","Dialog","open","onClose","onCancel","DialogTitle","DialogContent","Button","variant","List","subheader","ListSubheader","component","ListItem","button","ListItemIcon","ListItemText","e","buildingFileList","DialogActions","StyledToggleButtonGroup","withStyles","root","light","spacing","marginRight","grouped","contrastText","dark","ToggleButtonGroup","flex","menuButton","marginLeft","appTitle","filler","MainMenu","menuAnchorEl","setMenuAnchorEl","isOpenDialogOpen","setIsOpenDialogOpen","snackOpen","setSnackOpen","snackMessage","setSnackMessage","mapType","setMapType","save","useCallback","snackClose","useEffect","keyDown","toLowerCase","ctrlKey","preventDefault","addEventListener","removeEventListener","AppBar","IconButton","aria-label","currentTarget","keepMounted","anchorEl","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","transitionDuration","MenuItem","Divider","Typography","exclusive","onChange","ToggleButton","Tooltip","title","newMode","setEditorMode","Snackbar","autoHideDuration","TransitionProps","appear","action","Fragment","severity","flexGrow","minHeight","toolbarMargin","mixins","toolbar","workingArea","gridLeftColumn","borderRight","borderRightStyle","borderRightColor","propertyGridItem","borderTop","borderTopStyle","borderTopColor","App","Grid","container","xs","direction","item","overflow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d4d614a.chunk.js","sourcesContent":["import create from 'zustand';\nimport produce from 'immer';\nimport * as THREE from 'three';\nimport { v4 as generate_uuid } from 'uuid';\nimport YAML from 'yaml';\n//import { EditorParam } from './EditorParam'\nimport { EditorObject } from './EditorObject';\nimport { Building } from './Building';\nimport { Feature } from './Feature';\nimport { Level } from './Level';\n\nexport class EditorWall extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorWall {\n    let wall = new EditorWall();\n    wall.object_type_name = 'Wall';\n    wall.uuid = generate_uuid();\n    wall.paramsFromYAML(data[2]);\n    wall.start_idx = data[0];\n    wall.end_idx = data[1];\n    return wall;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorMeasurement extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n  distance: number = 1;\n\n  static fromYAML(data: any): EditorMeasurement {\n    let measurement = new EditorMeasurement();\n    measurement.object_type_name = 'Measurement'\n    measurement.uuid = generate_uuid();\n    measurement.start_idx = data[0];\n    measurement.end_idx = data[1];\n    measurement.distance = data[2]['distance'][1];\n    return measurement;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    let params_yaml = this.paramsToYAML();\n    params_yaml.add({ key: 'distance', value: [3, this.distance] });\n    node.add(params_yaml);\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorLane extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorLane {\n    let lane = new EditorLane();\n    lane.object_type_name = 'Lane';\n    lane.uuid = generate_uuid();\n    lane.paramsFromYAML(data[2]);\n    lane.start_idx = data[0];\n    lane.end_idx = data[1];\n    return lane;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorDoor extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorDoor {\n    let door = new EditorDoor();\n    door.object_type_name = 'Door';\n    door.uuid = generate_uuid();\n    door.paramsFromYAML(data[2]);\n    door.start_idx = data[0];\n    door.end_idx = data[1];\n    return door;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorFloor extends EditorObject {\n  vertex_indices: number[] = [];\n\n  static fromYAML(data: any): EditorFloor {\n    let floor = new EditorFloor();\n    floor.uuid = generate_uuid();\n    floor.paramsFromYAML(data['parameters']);\n    floor.vertex_indices = data['vertices'].map((vertex_idx: number) => vertex_idx);\n    return floor;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'parameters', value: this.paramsToYAML() });\n\n    let vertices_node = new YAML.YAMLSeq();\n    for (const vertex_index of this.vertex_indices) {\n      vertices_node.add(vertex_index);\n    }\n    vertices_node.flow = true;\n    node.add({ key: 'vertices', value: vertices_node });\n    return node;\n  }\n}\n\nexport class EditorImage extends EditorObject {\n  name: string = '';\n  filename: string = '';\n  offset: THREE.Vector3 = new THREE.Vector3(0, 0, 0);\n  yaw: number = 0;\n  scale: number = 1;\n  isLegacyDefaultImage: boolean = false;\n  color: number[] = [1, 1, 1, 1];\n  visible: boolean = true;\n  features: Feature[] = [];\n  blob: Blob = new Blob([]);\n\n  static fromLayerYAML(layer_name: string, data: any): EditorImage {\n    //console.log(data);\n    let image = new EditorImage();\n    image.object_type_name = 'Image';\n    image.uuid = generate_uuid();\n    image.name = layer_name;\n    image.filename = data['filename'];\n    image.color = data['color'];\n    image.offset.x = data['transform']['translation_x'];\n    image.offset.y = data['transform']['translation_y'];\n    image.scale = data['transform']['scale'];\n    image.yaw = data['transform']['yaw'];\n    image.isLegacyDefaultImage = false;\n    image.visible = data['visible'];\n    image.features = data['features'].map((feature_yaml: any) => Feature.fromYAML(feature_yaml));\n    return image;\n  }\n\n  toLayerYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    let color_node = new YAML.YAMLSeq();\n    color_node.add(this.color[0]);\n    color_node.add(this.color[1]);\n    color_node.add(this.color[2]);\n    color_node.add(this.color[3]);\n    color_node.flow = true;\n    node.add({ key: 'color', value: color_node });\n    node.add({ key: 'features', value: this.features.map(feature => feature.toYAML()) });\n    node.add({ key: 'filename', value: this.filename });\n    let transform_node = new YAML.YAMLMap();\n    transform_node.add({ key: 'scale', value: this.scale });\n    transform_node.add({ key: 'translation_x', value: this.offset.x });\n    transform_node.add({ key: 'translation_y', value: this.offset.y });\n    transform_node.add({ key: 'yaw', value: this.yaw });\n    node.add({ key: 'transform', value: transform_node });\n    node.add({ key: 'visible', value: this.visible });\n    return node;\n  }\n\n  loadBlob(_blob: Blob): void {\n    this.blob = _blob;\n    console.log(`image ${this.filename} retrieved ${this.blob.size} bytes`);\n  }\n}\n\nexport class EditorConstraint extends EditorObject {\n  ids: string[] = [];\n\n  static fromYAML(data: any): EditorConstraint {\n    let constraint = new EditorConstraint();\n    constraint.uuid = generate_uuid();\n    constraint.ids = [ data['ids'][0], data['ids'][1] ];\n    return constraint;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'ids', value: this.ids });\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorModel extends EditorObject {\n  model_name: string = '';\n  instance_name: string = '';\n  is_static: boolean = true;\n  x: number = 0;\n  y: number = 0;\n  z: number = 0;\n  yaw: number = 0;\n\n  static fromYAML(data: any): EditorModel {\n    let model = new EditorModel();\n    model.object_type_name = 'Model';\n    model.uuid = generate_uuid();\n    model.model_name = data['model_name'];\n    model.instance_name = data['name'];\n    model.is_static = data['static'];\n    model.x = data['x'];\n    model.y = -data['y'];\n    model.yaw = data['yaw'];\n    model.z = data['z'];\n    return model;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'model_name', value: this.model_name });\n    node.add({ key: 'name', value: this.instance_name });\n    node.add({ key: 'static', value: this.is_static });\n    node.add({ key: 'x', value: this.x });\n    node.add({ key: 'y', value: -this.y });\n    node.add({ key: 'yaw', value: this.yaw });\n    node.add({ key: 'z', value: this.z });\n    node.flow = true;\n    return node;\n  }\n}\n\nexport enum EditorToolID {\n  SELECT,\n  MOVE,\n}\n\nexport interface CameraPose {\n  position: THREE.Vector3,\n  target: THREE.Vector3\n}\n\nexport interface StoreState {\n  building: Building,\n  selection: EditorObject | null,\n  editorMode: string,\n  enableMotionControls: boolean,\n  activeTool: EditorToolID,\n  cameraInitialPose: CameraPose,\n  propertyRepaintCount: number,\n  repaintCount: number,\n  set: (fn: (draftState: StoreState) => void) => void\n}\n/*\n\n  setSelection: (newSelection: EditorObject) => void,\n  clearSelection: () => void,\n  setEditorMode: (newEditorMode: string) => void,\n\n  setEnableMotionControls: (newEnableMotionControls: boolean) => void,\n\n  setActiveTool: (newActiveTool: EditorToolID) => void,\n\n  //updateVertexPoint: (level_uuid: string, vertex_uuid: string, x: number, y:number) => void,\n}\n*/\n\nexport const useStore = create<StoreState>(set => ({\n  building: new Building(),\n  selection: null,\n  editorMode: '2d',\n  enableMotionControls: true,\n  activeTool: EditorToolID.SELECT,\n  propertyRepaintCount: 0,\n  repaintCount: 0,\n  cameraInitialPose: {\n    position: new THREE.Vector3(0, 0, 5),\n    target: new THREE.Vector3(0, 0, 0),\n  },\n  set: fn => set(produce(fn)),\n}));\n\ntype StoreSetter = (fn: (draftState: StoreState) => void) => void;\n\nexport function setSelection(setStore: StoreSetter, newSelection: EditorObject) {\n  setStore(state => {\n    state.selection = newSelection;\n  });\n}\n\nexport function clearSelection(setStore: StoreSetter) {\n  setStore(state => {\n    state.selection = null;\n  });\n}\n\nexport function setEditorMode(setStore: StoreSetter, newMode: string) {\n  setStore(state => {\n    state.editorMode = newMode;\n  });\n}\n\nexport function setActiveTool(setStore: StoreSetter, newTool: EditorToolID) {\n  setStore(state => {\n    state.activeTool = newTool;\n  });\n}\n\nexport function repaintPropertyEditor(setStore: StoreSetter) {\n  setStore(state => {\n    state.propertyRepaintCount += 1;\n  });\n}\n\nexport function updateVertexPoint(\n  setStore: StoreSetter,\n  level_uuid: string,\n  vertex_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.building.levels.map(level => {\n      if (level.uuid === level_uuid) {\n        level.vertices.map(vertex => {\n          if (vertex.uuid === vertex_uuid) {\n            vertex.x = x;\n            vertex.y = y;\n          }\n          return vertex;\n        })\n      }\n      return level;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n\nexport function updateModelPoint(\n  setStore: StoreSetter,\n  level_uuid: string,\n  model_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.building.levels.map(level => {\n      if (level.uuid === level_uuid) {\n        level.models.map(model => {\n          if (model.uuid === model_uuid) {\n            model.x = x;\n            model.y = y;\n          }\n          return model;\n        })\n      }\n      return level;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n\nexport function updateFeaturePoint(\n  setStore: StoreSetter,\n  feature_level: Level,\n  feature_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.building.levels.map(level => {\n      if (level === feature_level) {\n        level.features.map(feature => {\n          if (feature.uuid === feature_uuid) {\n            feature.x = x;\n            feature.y = y;\n          }\n          return feature;\n        })\n      }\n      return level;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n","//import YAML from 'yaml'\nimport { v4 as generate_uuid } from 'uuid'\n\nexport class EditorParam {\n  type_idx: number = 0;\n  name: string = '';\n  value: any = 0;\n  uuid: string = '';\n\n  static fromYAML(_name: string, data: any): EditorParam {\n    let p = new EditorParam();\n    p.name = _name;\n    p.type_idx = data[0];\n    p.value = data[1];\n    p.uuid = generate_uuid();\n    return p;\n  }\n}\n","import YAML from 'yaml'\nimport { EditorParam } from './EditorParam';\nimport { EditorProp } from './EditorProp';\n\nexport class EditorObject {\n  uuid: string = '';\n  params: EditorParam[] = [];\n  props: EditorProp[] = [];\n  object_type_name: string = '';\n\n  paramsFromYAML(params_yaml: any): void {\n    for (const param_name in params_yaml) {\n      this.params.push(EditorParam.fromYAML(param_name, params_yaml[param_name]));\n    }\n  }\n\n  paramsToYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    for (const param of this.params) {\n      let param_value_node = new YAML.YAMLSeq();\n      param_value_node.add(param.type_idx);\n      param_value_node.add(param.value);\n      param_value_node.flow = true;\n      node.add({ key: param.name, value: param_value_node });\n    }\n    node.flow = true;\n    return node;\n  }\n\n  static roundNicely(value: number): number {\n    return Math.round(value * 1000) / 1000;\n  }\n}\n","import { v4 as generate_uuid } from 'uuid'\n\nexport class EditorProp {\n  name: string = '';\n  get_value: () => any = () => '';\n  set_value: (_: any) => void = (v: any) => { };\n  uuid: string = '';\n\n  constructor(_name: string, _getter: () => any) {\n    this.name = _name;\n    this.get_value = _getter;\n    this.uuid = generate_uuid();\n  }\n}\n","import { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport { v4 as generate_uuid } from 'uuid';\nimport YAML from 'yaml';\n\nexport class Vertex extends EditorObject {\n  x: number = 0;\n  y: number = 0;\n  name: string = '';\n\n  static fromYAML(data: any): Vertex {\n    let vertex = new Vertex();\n    vertex.object_type_name = 'Vertex';\n    vertex.uuid = generate_uuid();\n    vertex.x = data[0];\n    vertex.y = -data[1];\n    vertex.name = data[3];\n    vertex.paramsFromYAML(data[4]);\n\n    vertex.props.push(new EditorProp('name', () => vertex.name));\n    vertex.props.push(new EditorProp('x', () => { return EditorObject.roundNicely(vertex.x)} ));\n    vertex.props.push(new EditorProp('y', () => { return EditorObject.roundNicely(vertex.y)} ));\n\n    return vertex;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.x);\n    node.add(-this.y);\n    node.add(0.0);\n    node.add(this.name);\n    if (this.params.length)\n      node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n","import { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport YAML from 'yaml';\n//import { v4 as generate_uuid } from 'uuid';\n\nexport class Feature extends EditorObject {\n  name: string = '';\n  x: number = 0;\n  y: number = 0;\n\n  static fromYAML(data: any): Feature {\n    let feature = new Feature();\n    feature.object_type_name = 'Feature';\n    feature.uuid = data['id'];\n    feature.name = data['name'];\n    feature.x = data['x'];\n    feature.y = -data['y'];\n\n    feature.props.push(new EditorProp('name', () => feature.name));\n    feature.props.push(new EditorProp('x', () => { return EditorObject.roundNicely(feature.x)} ));\n    feature.props.push(new EditorProp('y', () => { return EditorObject.roundNicely(feature.y)} ));\n\n    return feature;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'id', value: this.uuid });\n    node.add({ key: 'name', value: this.name });\n    node.add({ key: 'x', value: this.x });\n    node.add({ key: 'y', value: -this.y });\n    node.flow = true;\n    return node;\n  }\n}\n","import YAML from 'yaml';\nimport { v4 as generate_uuid } from 'uuid';\nimport { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport { Vertex } from './Vertex';\nimport { Feature } from './Feature';\n\n//import { EditorParam } from './EditorParam';\nimport {\n  EditorDoor,\n  EditorWall,\n  EditorMeasurement,\n  EditorFloor,\n  EditorImage,\n  EditorLane,\n  EditorModel,\n  EditorConstraint } from './Store';\n\nexport class Level extends EditorObject {\n  name: string = '';\n  elevation: number = 0;\n  scale: number = 1.234;\n  doors: EditorDoor[] = [];\n  vertices: Vertex[] = [];\n  walls: EditorWall[] = [];\n  measurements: EditorMeasurement[] = [];\n  floors: EditorFloor[] = [];\n  lanes: EditorLane[] = [];\n  models: EditorModel[] = [];\n  images: EditorImage[] = [];\n  features: Feature[] = [];\n  constraints: EditorConstraint[] = [];\n\n  static fromYAML(_name: string, data: any): Level {\n    let level = new Level();\n    level.object_type_name = 'Level';\n    level.uuid = generate_uuid();\n    level.name = _name;\n    level.props.push(new EditorProp('name', () => level.name));\n    level.props.push(new EditorProp('elevation', () => level.elevation));\n    level.props.push(new EditorProp('scale', () => level.scale));\n\n    if (data['drawing'] && data['drawing']['filename']) {\n      let image = new EditorImage();\n      image.uuid = generate_uuid();\n      image.filename = data['drawing']['filename'];\n      image.isLegacyDefaultImage = true;\n      level.images.push(image);\n    }\n\n    level.elevation = data['elevation'];\n    level.constraints = data['constraints'].map((constraint: any) => EditorConstraint.fromYAML(constraint));\n    level.doors = data['doors'].map((door: any) => EditorDoor.fromYAML(door));\n    level.features = data['features'].map((feature: any) => Feature.fromYAML(feature));\n    level.floors = data['floors'].map((floor: any) => EditorFloor.fromYAML(floor));\n    for (const layer_name in data['layers']) {\n      level.images.push(EditorImage.fromLayerYAML(layer_name, data['layers'][layer_name]));\n    }\n    level.lanes = data['lanes'].map((lane: any) => EditorLane.fromYAML(lane));\n    level.models = data['models'].map((model: any) => EditorModel.fromYAML(model));\n    level.measurements = data['measurements'].map((measurement: any) => EditorMeasurement.fromYAML(measurement));\n    level.vertices = data['vertices'].map((vertex: any) => Vertex.fromYAML(vertex));\n    level.walls = data['walls'].map((wall: any) => EditorWall.fromYAML(wall));\n\n    level.calculateScale();\n\n    return level;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n\n    node.add({ key: 'constraints', value: this.constraints.map(constraint => constraint.toYAML()) });\n    node.add({ key: 'doors', value: this.doors.map(door => door.toYAML()) });\n\n    if (this.images.length > 0 && this.images[0].isLegacyDefaultImage) {\n      node.add({ key: 'drawing', value: { 'filename': this.images[0].filename } });\n    }\n\n    node.add({ key: 'elevation', value: this.elevation });\n    node.add({ key: 'features', value: this.features.map(feature => feature.toYAML()) });\n    node.add({ key: 'flattened_x_offset', value: 0 });\n    node.add({ key: 'flattened_y_offset', value: 0 });\n    node.add({ key: 'floors', value: this.floors.map(floor => floor.toYAML()) });\n    node.add({ key: 'lanes', value: this.lanes.map(lane => lane.toYAML()) });\n\n    let layers_node = new YAML.YAMLMap();\n    for (const image of this.images) {\n      if (!image.isLegacyDefaultImage) {\n        layers_node.add({ key: image.name, value: image.toLayerYAML() });\n      }\n    }\n    node.add({ key: 'layers', value: layers_node });\n    node.add({ key: 'measurements', value: this.measurements.map(measurement => measurement.toYAML()) });\n    node.add({ key: 'models', value: this.models.map(model => model.toYAML()) });\n    node.add({ key: 'vertices', value: this.vertices.map(vertex => vertex.toYAML()) });\n    node.add({ key: 'walls', value: this.walls.map(wall => wall.toYAML()) });\n    return node;\n  }\n\n  calculateScale(): void {\n    let sum = 0.0;\n    let count = 0;\n    for (const meas of this.measurements) {\n      count++;\n      const dx = this.vertices[meas.start_idx].x - this.vertices[meas.end_idx].x;\n      const dy = this.vertices[meas.start_idx].y - this.vertices[meas.end_idx].y;\n      const d_pixels = Math.sqrt(dx*dx + dy*dy);\n      sum += meas.distance / d_pixels;\n    }\n\n    if (count > 0) {\n      this.scale = sum / count;\n    }\n    else {\n      this.scale = 0.05;  // just use something sane...\n    }\n  }\n\n  transformPoint(x: number, y: number): [number, number] {\n    return [\n      x * this.scale,\n      y * this.scale,\n    ];\n  }\n\n  inverseTransformPoint(x: number, y: number): [number, number] {\n    return [\n      x / this.scale,\n      y / this.scale,\n    ];\n  }\n}\n","import YAML from 'yaml';\nimport * as THREE from 'three';\nimport { v4 as generate_uuid } from 'uuid';\nimport { EditorObject } from './EditorObject';\nimport { CameraPose } from './Store';\nimport { Level } from './Level';\n\nexport class Building extends EditorObject {\n  name: string = '';\n  url_base: string = '';\n  levels: Level[] = [];\n  reference_level_name: string = '';\n  yaml_doc: YAML.Document = new YAML.Document();;\n\n  static fromYAML(yaml_text: string): Building {\n    const yaml = YAML.parse(yaml_text);\n    let building = new Building();\n    building.uuid = generate_uuid();\n    building.name = yaml['name'];\n    for (const level_name in yaml['levels']) {\n      const level_data = yaml['levels'][level_name];\n      building.levels.push(Level.fromYAML(level_name, level_data));\n    }\n    if (yaml['reference_level_name']) {\n      building.reference_level_name = yaml['reference_level_name'];\n    }\n    else {\n      if (building.levels.length > 0) {\n        building.reference_level_name = building.levels[0].name;\n      }\n    }\n    building.yaml_doc = YAML.parseDocument(yaml_text);\n    return building;\n  }\n\n  toYAMLString(): string {\n    let yaml_doc = new YAML.Document(new YAML.YAMLMap());\n    let levels_node = new YAML.YAMLMap();\n    for (const level of this.levels) {\n      levels_node.add({ key: level.name, value: level.toYAML() });\n    }\n    yaml_doc.add({ key: 'crowd_sim', value: this.yaml_doc.get('crowd_sim') });\n    yaml_doc.add({ key: 'levels', value: levels_node });\n\n    let lifts_node = new YAML.YAMLMap();\n    // todo: add lifts to this map node\n    // only use flow style to enforce whitespace similarity for empty maps\n    lifts_node.flow = true;\n\n    yaml_doc.add({ key: 'lifts', value: lifts_node });\n    yaml_doc.add({ key: 'name', value: this.name });\n    return yaml_doc.toString({lineWidth: 0, minContentWidth: 2});\n  }\n\n  computeBoundingBox(): THREE.Box3 {\n    let vec_min = new THREE.Vector3(Infinity, Infinity, Infinity);\n    let vec_max = new THREE.Vector3(-Infinity, -Infinity, -Infinity);\n    for (const level of this.levels) {\n      for (const vertex of level.vertices) {\n        if (vertex.x < vec_min.x)\n          vec_min.x = vertex.x;\n        if (vertex.x > vec_max.x)\n          vec_max.x = vertex.x;\n  \n        if (vertex.y < vec_min.y)\n          vec_min.y = vertex.y;\n        if (vertex.y > vec_max.y)\n          vec_max.y = vertex.y;\n      }\n    }\n    return new THREE.Box3(vec_min, vec_max);\n  }\n\n  computeInitialCameraPose(): CameraPose {\n    if (this.levels.length) {\n      const bb = this.computeBoundingBox();\n      const cx = (bb.min.x + bb.max.x) / 2;\n      const cy = (bb.min.y + bb.max.y) / 2;\n      const [t_cx, t_cy] = this.levels[0].transformPoint(cx, cy);\n      const target = new THREE.Vector3(t_cx, t_cy, 0);\n      const position = new THREE.Vector3(\n        target.x + 10,\n        target.y - 10,\n        target.z + 10);\n      return {\n        position: position,\n        target: target,\n      };\n    }\n    else {\n      return {\n        position: new THREE.Vector3(10, 10, 10),\n        target: new THREE.Vector3(0, 0, 0),\n      };\n    }\n  }\n}\n","import React from 'react';\nimport {\n  EditorConstraint,\n  EditorDoor,\n  EditorFloor,\n  EditorImage,\n  EditorLane,\n  EditorMeasurement,\n  EditorModel,\n  EditorWall,\n  setSelection,\n  useStore,\n} from './Store';\nimport { EditorParam } from './EditorParam';\nimport { Level } from './Level';\nimport { Vertex } from './Vertex';\nimport { Feature } from './Feature';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nfunction FeatureTreeItem(props: { feature: Feature }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.feature.uuid}\n      key={props.feature.uuid}\n      label={`${props.feature.x}, ${props.feature.y}`}\n      onClick={(event) => {\n        setSelection(setStore, props.feature);\n      }}\n    >\n    </TreeItem>\n  );\n}\n\nfunction ModelTreeItem(props: { model: EditorModel }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.model.uuid}\n      key={props.model.uuid}\n      label={`${props.model.instance_name}`}\n      onClick={(event) => {\n        setSelection(setStore, props.model);\n      }}\n    >\n    </TreeItem>\n  );\n}\n\n\nfunction ConstraintTreeItem(props: { constraint: EditorConstraint }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.constraint.uuid}\n      key={props.constraint.uuid}\n      label={`${props.constraint.ids[0].substring(1, 9)} - ${props.constraint.ids[1].substring(1, 9)}`}\n      onClick={(event) => {\n        setSelection(setStore, props.constraint);\n      }}\n    >\n      {props.constraint.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction DoorTreeItem(props: { door: EditorDoor }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.door.start_idx} => ${props.door.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.door.uuid}\n      key={props.door.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.door);\n      }}\n      label={label} />\n  );\n}\n\nfunction ParamTreeItem(props: { param: EditorParam }): JSX.Element {\n  return (\n    <TreeItem\n      nodeId={props.param.uuid}\n      key={props.param.uuid}\n      label={`${props.param.name} = ${props.param.value}`}\n    />\n  );\n}\n\nfunction ImageTreeItem(props: { image: EditorImage }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.image.uuid}\n      key={props.image.uuid}\n      label={props.image.filename}\n      onClick={(event) => {\n        setSelection(setStore, props.image);\n      }}\n    >\n      {props.image.params.map((param) => <ParamTreeItem param={param} />)}\n      <TreeItem\n        nodeId={`${props.image.uuid}_features`}\n        key={`${props.image.uuid}_features`}\n        label=\"features\"\n      >\n        {props.image.features.map((feature) => <FeatureTreeItem feature={feature} />)}\n      </TreeItem>\n    </TreeItem>\n  );\n}\n\nfunction FloorTreeItem(props: { floor: EditorFloor }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = 'floor (' + props.floor.vertex_indices.map((idx) => idx.toString()).join(', ') + ')';\n  return(\n    <TreeItem\n      nodeId={props.floor.uuid}\n      key={props.floor.uuid}\n      label={label}\n      onClick={(event) => {\n        setSelection(setStore, props.floor);\n      }}\n    >\n      {props.floor.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction WallTreeItem(props: { wall: EditorWall }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.wall.start_idx} => ${props.wall.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.wall.uuid}\n      key={props.wall.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.wall);\n      }}\n      label={label} />\n  );\n}\n\nfunction MeasurementTreeItem(props: { measurement: EditorMeasurement }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.measurement.start_idx}-${props.measurement.end_idx}) = ${props.measurement.distance}`;\n  return(\n    <TreeItem\n      nodeId={props.measurement.uuid}\n      key={props.measurement.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.measurement);\n      }}\n      label={label} />\n  );\n}\n\nfunction LaneTreeItem(props: { lane: EditorLane }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.lane.start_idx} => ${props.lane.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.lane.uuid}\n      key={props.lane.uuid}\n      label={label}\n      onClick={(event) => {\n        setSelection(setStore, props.lane);\n      }}\n    />\n  );\n}\n\nfunction VertexTreeItem(props: { vertex: Vertex }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  let label = \"(\" + props.vertex.x + \", \" + props.vertex.y + \")\";\n  if (props.vertex.name)\n    label = props.vertex.name + ': ' + label;\n  return (\n    <TreeItem\n      nodeId={props.vertex.uuid}\n      key={props.vertex.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.vertex);\n      }}\n      label={label}>\n      {props.vertex.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction LevelTreeItem(props: { level: Level }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.level.uuid}\n      key={props.level.uuid}\n      label={props.level.name}\n      onClick={(event) => {\n        setSelection(setStore, props.level);\n      }}>\n\n      <TreeItem nodeId={props.level.uuid + '_constraints'} label=\"constraints\">\n        {props.level.constraints.map(constraint => <ConstraintTreeItem constraint={constraint} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_doors'} label=\"doors\">\n        {props.level.doors.map(door => <DoorTreeItem door={door} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_features'} label=\"features\">\n        {props.level.features.map(feature => <FeatureTreeItem feature={feature} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_floors'} label=\"floors\">\n        {props.level.floors.map(floor => <FloorTreeItem floor={floor} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_images'} label=\"images\">\n        {props.level.images.map(image => <ImageTreeItem image={image} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_lanes'} label=\"lanes\">\n        {props.level.lanes.map(lane => <LaneTreeItem lane={lane} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_measurements'} label=\"measurements\">\n        {props.level.measurements.map(measurement => <MeasurementTreeItem measurement={measurement} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_models'} label=\"models\">\n        {props.level.models.map(model => <ModelTreeItem model={model} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_vertices'} label=\"vertices\">\n        {props.level.vertices.map(vertex => <VertexTreeItem vertex={vertex} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_walls'} label=\"walls\">\n        {props.level.walls.map(wall => <WallTreeItem wall={wall} /> )}\n      </TreeItem>\n    </TreeItem>\n  );\n}\n\nexport default function BuildingSummary(): JSX.Element {\n  const building = useStore(state => state.building);\n\n  if (building.name === '') {\n    return (\n      <div style={{margin: '1em'}}>\n        <p>\n          No map loaded.\n        </p>\n        <p>\n          To load a map, click the menu icon in the upper-left.\n        </p>\n      </div>\n    );\n  }\n \n  // defaultExpanded={[building.uuid + '_levels']}\n  return (\n    <TreeView\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId={building.uuid + '_name'} label={\"name: \" + building.name} />\n      <TreeItem nodeId={building.uuid + '_ref'} label={\"reference level: \" + building.reference_level_name } />\n      <TreeItem nodeId={building.uuid + '_levels'} label=\"levels\">\n        {building.levels.map((level) => <LevelTreeItem level={level} /> )}\n      </TreeItem>\n    </TreeView>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorDoor, setSelection } from './Store';\n\ninterface SceneDoorProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  door: EditorDoor,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneDoor(props: SceneDoorProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.1, 0.4, 0.4);\n    if (selection && selection.uuid === props.door.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.door.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 1.0 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.door.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.door);\n      }}\n    >\n      <boxGeometry args={[len, 0.5, 2]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Text } from '@react-three/drei'\nimport { Feature } from './Feature';\nimport { Level } from './Level';\nimport {\n  useStore,\n  EditorToolID,\n  repaintPropertyEditor,\n  setSelection,\n  updateFeaturePoint,\n} from './Store';\n\ninterface SceneFeatureProps {\n  feature: Feature,\n  elevation: number,\n  level: Level,\n}\n\nexport function SceneFeature(props: SceneFeatureProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const isMoveToolActive = useStore(state => state.activeTool === EditorToolID.MOVE);\n  const [ dragActive, setDragActive ] = React.useState(false);\n\n  const [x, y] = props.level.transformPoint(props.feature.x, props.feature.y);\n\n  let color = \"rgb(200, 200, 0)\";\n  if (selection && selection.uuid === props.feature.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  return (\n    <group>\n      <mesh\n        position={[x, y, 0.25 + props.elevation]}\n        scale={1.0}\n        rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n        key={props.feature.uuid}\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n        onPointerDown={(event) => {\n          setSelection(setStore, props.feature);\n          if (!isMoveToolActive)\n            return;\n          event.stopPropagation();\n          setDragActive(true);\n          if (event.target) {\n            (event.target as HTMLElement).setPointerCapture(event.pointerId);\n          }\n        }}\n        onPointerUp={(event) => {\n          event.stopPropagation();\n          setDragActive(false);\n          if (event.target) {\n            (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n          }\n          repaintPropertyEditor(setStore);\n        }}\n        onPointerMove={(event) => {\n          if (dragActive) {\n            event.stopPropagation();\n            if (editorMode === '2d') {\n              const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n              updateFeaturePoint(setStore, props.level, props.feature.uuid, px, py);\n            }\n            else {\n              let intersection_point = new THREE.Vector3();\n              event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n              const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n              updateFeaturePoint(setStore, props.level, props.feature.uuid, px, py);\n            }\n          }\n        }}\n      >\n        <cylinderGeometry args={[0.05, 0.15, 0.4, 16]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <Text color=\"blue\" position={[x, y, 0.36 + props.elevation]}>\n        {props.feature.name}\n      </Text>\n    </group>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorFloor, setSelection } from './Store';\n\ntype SceneFloorProps = {\n  floor: EditorFloor;\n  level: Level;\n  vertices: Vertex[];\n  elevation: number;\n}\n\nexport function SceneFloor(props: SceneFloorProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const shape = React.useMemo(() => {\n    const shape = new THREE.Shape();\n    let started = false;\n\n    for (const v of props.vertices) {\n      const [t_x, t_y] = props.level.transformPoint(v.x, v.y);\n      if (!started)\n      {\n        shape.moveTo(t_x, t_y);\n        started = true;\n      }\n      else\n        shape.lineTo(t_x, t_y);\n    }\n    const [v0_x, v0_y] = props.level.transformPoint(props.vertices[0].x, props.vertices[0].y);\n    shape.lineTo(v0_x, v0_y);\n    return shape;\n  }, [props.vertices, props.level])\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(1, 1, 1);\n    if (selection && selection.uuid === props.floor.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.floor.uuid]);\n\n  return (\n    <mesh\n      key={props.floor.uuid}\n      onClick={(event) => {\n        event.stopPropagation()\n        console.log('floor onClick')\n        setSelection(setStore, props.floor)\n      }}\n    >\n      <extrudeGeometry args={[shape, { 'depth': 0.1, 'bevelEnabled': false } ]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n\n  /*\n      <meshStandardMaterial color={color} transparent={true} opacity={0.5} />\n  return (\n    <gridHelper\n      args={[100, 100]}\n      rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n      position={new THREE.Vector3(50, -50, elevation)}/>\n  );\n   */\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorLane, setSelection } from './Store';\n\ninterface SceneLaneProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  lane: EditorLane,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneLane(props: SceneLaneProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.4, 0.05, 0.05);\n    if (selection && selection.uuid === props.lane.uuid) {\n      color.setRGB(0.8, 0.3, 0.01);\n    }\n    return color;\n  }, [selection, props.lane.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 0.2 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.lane.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.lane);\n      }}\n    >\n      <boxGeometry args={[len, 1.0, 0.1]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n//<meshStandardMaterial color={color} transparent={true} opacity={0.7} />\n","import React from 'react'\nimport * as THREE from 'three'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\nimport { useLoader } from '@react-three/fiber';\nimport { Level } from './Level';\nimport { useStore, EditorImage } from './Store';\n\ntype SceneImageProps = {\n  image: EditorImage,\n  elevation: number,\n  level: Level,\n}\n\nexport function SceneImage(props: SceneImageProps): JSX.Element {\n  //const selection = useStore(state => state.selection)\n  const url_base = useStore(state => state.building.url_base);\n  //const setStore = useStore(state => state.set);\n  const [ texture ] = useLoader(TextureLoader, [url_base + props.image.filename]);\n\n  let width_pixels = 128;\n  let height_pixels = 128;\n\n  let width_meters = 50.0;\n  let height_meters = 50.0;\n\n  if (texture) {\n    texture.magFilter = THREE.NearestFilter;\n    texture.minFilter = THREE.NearestFilter;\n    width_pixels = texture.image.width;\n    height_pixels = texture.image.height;\n    width_meters = width_pixels * props.level.scale;\n    height_meters = height_pixels * props.level.scale;\n  }\n\n  const x = props.image.offset.x;\n  const y = props.image.offset.y;\n  const scale = 1; // todo...\n  const yaw = props.image.yaw;\n\n  return (\n    <mesh\n      position={[x + width_meters / 2, y - height_meters / 2, props.elevation + 0.1]}\n      scale={scale}\n      rotation={new THREE.Euler(0, yaw, 0)}\n      key={props.image.uuid}\n    >\n      <boxGeometry args={[width_meters, height_meters, 0.1, 8]} />\n      <meshStandardMaterial map={texture} color={[1.0, 1.0, 1.0]} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorMeasurement, setSelection } from './Store';\n\ninterface SceneMeasurementProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  measurement: EditorMeasurement,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneMeasurement(props: SceneMeasurementProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.6, 0.1, 0.6);\n    if (selection && selection.uuid === props.measurement.uuid) {\n      color.setRGB(0.8, 0.3, 0.01);\n    }\n    return color;\n  }, [selection, props.measurement.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 0.2 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.measurement.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.measurement);\n      }}\n    >\n      <boxGeometry args={[len, 0.5, 0.1]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Level } from './Level';\nimport { useStore, EditorModel, EditorToolID, setSelection, updateModelPoint } from './Store';\n\ninterface SceneModelProps {\n  model: EditorModel,\n  elevation: number,\n  level: Level,\n  level_uuid: string,\n}\n\nexport function SceneModel(props: SceneModelProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const isMoveToolActive = useStore(state => state.activeTool === EditorToolID.MOVE);\n  const [ dragActive, setDragActive ] = React.useState(false);\n\n  const [x, y] = props.level.transformPoint(props.model.x, props.model.y);\n\n  let color = \"rgb(128, 128, 128)\";\n  if (selection && selection.uuid === props.model.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  return (\n    <mesh\n      position={[x, y, 0.25 + props.elevation]}\n      scale={1.0}\n      rotation={new THREE.Euler(Math.PI / 2, props.model.yaw, 0)}\n      key={props.model.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.model);\n      }}\n      onPointerDown={(event) => {\n        if (!isMoveToolActive)\n          return;\n        event.stopPropagation();\n        setDragActive(true);\n        if (event.target) {\n          (event.target as HTMLElement).setPointerCapture(event.pointerId);\n        }\n      }}\n      onPointerUp={(event) => {\n        event.stopPropagation();\n        setDragActive(false);\n        if (event.target) {\n          (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n        }\n      }}\n      onPointerMove={(event) => {\n        if (dragActive) {\n          event.stopPropagation();\n          if (editorMode === '2d') {\n            const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n            updateModelPoint(setStore, props.level_uuid, props.model.uuid, px, py);\n          }\n          else {\n            let intersection_point = new THREE.Vector3();\n            event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n            const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n            updateModelPoint(setStore, props.level_uuid, props.model.uuid, px, py);\n          }\n        }\n      }}\n    >\n      <boxGeometry args={[0.4, 0.4, 0.4, 8]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Text } from '@react-three/drei'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport {\n  useStore,\n  EditorToolID,\n  repaintPropertyEditor,\n  setSelection,\n  updateVertexPoint,\n} from './Store';\n\ninterface SceneVertexProps {\n  vertex: Vertex,\n  elevation: number,\n  level: Level,\n  level_uuid: string,\n}\n\nexport function SceneVertex(props: SceneVertexProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const isMoveToolActive = useStore(state => state.activeTool === EditorToolID.MOVE);\n  const [ dragActive, setDragActive ] = React.useState(false);\n\n  const [x, y] = props.level.transformPoint(props.vertex.x, props.vertex.y);\n\n  let color = \"rgb(0, 128, 0)\";\n  if (selection && selection.uuid === props.vertex.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  return (\n    <group>\n      <mesh\n        position={[x, y, 0.25 + props.elevation]}\n        scale={1.0}\n        rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n        key={props.vertex.uuid}\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n        onPointerDown={(event) => {\n          setSelection(setStore, props.vertex);\n          if (!isMoveToolActive)\n            return;\n          event.stopPropagation();\n          setDragActive(true);\n          if (event.target) {\n            (event.target as HTMLElement).setPointerCapture(event.pointerId);\n          }\n        }}\n        onPointerUp={(event) => {\n          event.stopPropagation();\n          setDragActive(false);\n          if (event.target) {\n            (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n          }\n          repaintPropertyEditor(setStore);\n        }}\n        onPointerMove={(event) => {\n          if (dragActive) {\n            event.stopPropagation();\n            if (editorMode === '2d') {\n              const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n              updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, px, py);\n            }\n            else {\n              let intersection_point = new THREE.Vector3();\n              event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n              const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n              updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, px, py);\n            }\n          }\n        }}\n      >\n        <cylinderGeometry args={[0.1, 0.1, 0.2, 16]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <Text color=\"blue\" position={[x, y, 0.36 + props.elevation]}>\n        {props.vertex.name}\n      </Text>\n    </group>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorWall, setSelection } from './Store';\n\ninterface SceneWallProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  wall: EditorWall,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneWall(props: SceneWallProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.1, 0.1, 0.7);\n    if (selection && selection.uuid === props.wall.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.wall.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 1.0 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.wall.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.wall);\n      }}\n    >\n      <boxGeometry args={[len, 0.1, 2]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport { Level } from './Level';\nimport { SceneDoor } from './SceneDoor';\nimport { SceneFeature } from './SceneFeature';\nimport { SceneFloor } from './SceneFloor';\nimport { SceneLane } from './SceneLane';\nimport { SceneImage } from './SceneImage';\nimport { SceneMeasurement } from './SceneMeasurement';\nimport { SceneModel } from './SceneModel';\nimport { SceneVertex } from './SceneVertex';\nimport { SceneWall } from './SceneWall';\nimport { useStore } from './Store';\n\ntype SceneLevelProps = {\n  level: Level\n}\n\nexport function SceneLevel(props: SceneLevelProps): JSX.Element {\n  const z = props.level.elevation / 2;\n  useStore(state => state.selection);  // needed to ensure repaints after de-selection\n\n  return (\n    <group>\n      {props.level.models.map(model =>\n        <SceneModel\n          key={model.uuid}\n          model={model}\n          level={props.level}\n          level_uuid={props.level.uuid}\n          elevation={z} />)}\n\n      {props.level.vertices.map((vertex) =>\n        <SceneVertex\n          key={vertex.uuid}\n          vertex={vertex}\n          level={props.level}\n          level_uuid={props.level.uuid}\n          elevation={z} />)}\n\n      {props.level.features.map(feature =>\n        <SceneFeature\n          key={feature.uuid}\n          feature={feature}\n          level={props.level}\n          elevation={z} />)}\n\n      {props.level.walls.map((wall) =>\n        <SceneWall\n          key={wall.uuid}\n          wall={wall}\n          level={props.level}\n          vertex_start={props.level.vertices[wall.start_idx]}\n          vertex_end={props.level.vertices[wall.end_idx]}\n          elevation={z} />)}\n\n      {props.level.doors.map((door) =>\n        <SceneDoor\n          key={door.uuid}\n          door={door}\n          level={props.level}\n          vertex_start={props.level.vertices[door.start_idx]}\n          vertex_end={props.level.vertices[door.end_idx]}\n          elevation={z} />)}\n\n      {props.level.floors.map((floor) =>\n        <SceneFloor\n          key={floor.uuid}\n          floor={floor}\n          level={props.level}\n          vertices={floor.vertex_indices.map((idx) => props.level.vertices[idx])}\n          elevation={z} />)}\n\n      {props.level.lanes.map(lane =>\n        <SceneLane\n          key={lane.uuid}\n          lane={lane}\n          level={props.level}\n          vertex_start={props.level.vertices[lane.start_idx]}\n          vertex_end={props.level.vertices[lane.end_idx]}\n          elevation={z} />)}\n\n      {props.level.images.filter(image => image.isLegacyDefaultImage).map(image =>\n        <SceneImage\n          key={image.uuid}\n          image={image}\n          level={props.level}\n          elevation={z} />)}\n\n      {props.level.measurements.map(meas =>\n        <SceneMeasurement\n          key={meas.uuid}\n          measurement={meas}\n          level={props.level}\n          vertex_start={props.level.vertices[meas.start_idx]}\n          vertex_end={props.level.vertices[meas.end_idx]}\n          elevation={z} />)}\n    </group>\n  );\n}\n","import React from 'react'\nimport { useStore } from './Store';\nimport { SceneLevel } from './SceneLevel';\n\ntype SceneBuildingProps = {\n}\n\nexport function SceneBuilding(props: SceneBuildingProps): JSX.Element {\n  const building = useStore(state => state.building);\n  useStore(state => state.selection);  // needed to ensure repaints after de-selection\n  useStore(state => state.repaintCount);  // needed to ensure repaints after tweaks\n\n  return (\n    <group>\n      {building.levels.map((level) => <SceneLevel key={level.uuid} level={level} />)}\n    </group>\n  );\n}\n","import * as THREE from 'three'\nimport { Canvas } from '@react-three/fiber'\nimport React, { useRef, Suspense } from 'react'\nimport { OrbitControls } from '@react-three/drei'\nimport { PerspectiveCamera, OrthographicCamera } from '@react-three/drei'\n\nimport { useStore, clearSelection } from './Store';\nimport { SceneBuilding } from './SceneBuilding';\n\ntype EditorSceneProps = {\n};\n\nexport function EditorScene(props: EditorSceneProps): JSX.Element {\n  const setStore = useStore(state => state.set);\n  //const clearSelection = useStore(state => state.clearSelection);\n  const editorMode = useStore(state => state.editorMode);\n  const cameraInitialPose = useStore(state => state.cameraInitialPose);\n\n  const Controls = (): JSX.Element => {\n    THREE.Object3D.DefaultUp = new THREE.Vector3(0, 0, 1);\n    const perspective_camera = useRef<THREE.Camera>(null);\n    const orthographic_camera = useRef<THREE.Camera>(null);\n    const enableMotionControls = useStore(state => state.enableMotionControls);\n\n    // todo: there is probably a better way to do this than having two cameras\n    return (\n      <>\n        <PerspectiveCamera\n          ref={perspective_camera}\n          position={cameraInitialPose.position}\n          fov={60}\n          makeDefault={editorMode === '3d'}\n        />\n        <OrthographicCamera\n          ref={orthographic_camera}\n          position={[cameraInitialPose.target.x, cameraInitialPose.target.y, cameraInitialPose.target.z + 5]}\n          zoom={20}\n          makeDefault={editorMode === '2d'}\n        />\n        {perspective_camera && orthographic_camera && <OrbitControls\n          enableDamping={false}\n          screenSpacePanning={editorMode === '3d' ? false : true}\n          target={cameraInitialPose.target}\n          camera={editorMode === '3d' ? perspective_camera.current! : orthographic_camera.current!}\n          maxPolarAngle={editorMode === '3d' ? Infinity : 0}\n          minAzimuthAngle={editorMode === '3d' ? -Infinity : 0}\n          maxAzimuthAngle={editorMode === '3d' ? Infinity : 0}\n          mouseButtons={{\n            LEFT: -1,\n            MIDDLE: THREE.MOUSE.PAN,\n            RIGHT: THREE.MOUSE.ROTATE,\n          }}\n          touches={{\n            ONE: THREE.TOUCH.PAN,\n            TWO: THREE.TOUCH.ROTATE\n          }}\n          enabled={enableMotionControls}\n        />}\n      </>\n    );\n  }\n\n  console.log('EditorScene()');\n  return (\n    <Canvas\n      frameloop=\"demand\"\n      onPointerMissed={() => {\n        clearSelection(setStore);\n      }}\n    >\n      <Controls />\n      <axesHelper />\n      <ambientLight />\n      <pointLight position={[10, 10, 10]} />\n      <Suspense fallback={null} >\n        <SceneBuilding />\n      </Suspense>\n    </Canvas>\n  )\n}\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { useStore } from './Store';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  noSelectionDiv: {\n  },\n  table: {\n    padding: '0px',\n    margin: '0px'\n  },\n  tableHead: {\n  },\n  tableHeadRow: {\n    borderBottomStyle: 'solid',\n    borderBottom: '1px',\n    borderBottomColor: theme.palette.primary.main,\n  },\n  tableHeadCell: {\n    fontWeight: 'bold',\n    padding: '0px',\n    paddingLeft: '5px',\n  },\n  tableCell: {\n    padding: '0px',\n    paddingLeft: '5px',\n  }\n}));\n\n/*\n      <TableHead className={classes.tableHead}>\n        <TableRow className={classes.tableHeadRow}>\n          <TableCell className={classes.tableHeadCell}>Property Name</TableCell>\n          <TableCell className={classes.tableHeadCell}>Property Value</TableCell>\n        </TableRow>\n      </TableHead>\n */\n\nexport default function PropertyEditor(): JSX.Element {\n  const classes = useStyles();\n  const selection = useStore(state => state.selection);\n  useStore(state => state.propertyRepaintCount);  // repaint during tool moves\n\n  if (!selection) {\n    return (<div className={classes.noSelectionDiv}></div>);\n  }\n\n  return (\n    <Table className={classes.table}>\n      <TableHead>\n        <TableCell className={classes.tableHeadCell}>{selection.object_type_name}</TableCell>\n        <TableCell className={classes.tableHeadCell}></TableCell>\n      </TableHead>\n      <TableBody>\n        {selection.props.map(prop =>\n          <TableRow>\n            <TableCell className={classes.tableCell}>{prop.name}</TableCell>\n            <TableCell className={classes.tableCell}>{prop.get_value()}</TableCell>\n          </TableRow>\n        )}\n        {selection.params.map(param =>\n          <TableRow>\n            <TableCell className={classes.tableCell}>{param.name}</TableCell>\n            <TableCell className={classes.tableCell}>{param.value.toString()}</TableCell>\n          </TableRow>\n        )}\n      </TableBody>\n    </Table>\n  );\n}\n","import { useStore } from './Store'\nimport { Building } from './Building'\nimport YAML from 'yaml'\n\n\nexport function YAMLParser(yaml_text: string, url_base: string): Building {\n  const building = Building.fromYAML(yaml_text);\n  building.url_base = url_base;\n  const cameraInitialPose = building.computeInitialCameraPose();\n\n  useStore.setState({\n    building: building,\n    selection: null,\n    cameraInitialPose: cameraInitialPose\n  });\n\n  return building;\n}\n\nexport async function YAMLRetriever(url_base: string, resource_name: string): Promise<void> {\n  await fetch(url_base + resource_name)\n    .then(response => response.text())\n    .then(text => YAMLParser(text, url_base))\n}\n\nexport async function YAMLRetrieveDemo(name: string): Promise<void> {\n  await YAMLRetriever(\n    process.env.PUBLIC_URL + `/demos/${name}/`,\n    `${name}.building.yaml`);\n}\n\nexport async function YAMLSender(url: string): Promise<void> {\n  Object.getPrototypeOf(YAML.YAMLMap).maxFlowStringSingleLineLength = 10000;\n  const { building } = useStore.getState();\n  let yaml_text: string = building.toYAMLString();\n  let yaml_size = new Blob([yaml_text]).size;  // utf-8 encoding length\n  await fetch(url, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/x-yaml',\n      'content-length': yaml_size.toString(),\n    },\n    body: yaml_text,\n  });\n}\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MapIcon from '@material-ui/icons/Map';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { YAMLParser } from './YAMLParser';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  directoryButton: {\n    fontSize: theme.typography.h5.fontSize\n  },\n  filename: {\n    fontSize: theme.typography.h5.fontSize,\n    textDecoration: 'underline'\n  },\n  dialog: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\ntype OpenDialogProps = {\n  open: boolean;\n  onOpen: () => void; //filename: string, handle: FileSystemDirectoryHandle | undefined) => void;\n  onCancel: () => void;\n};\n\nexport default function OpenDialog(props: OpenDialogProps): JSX.Element {\n  const classes = useStyles(props);\n  const [buildingFileNames, setBuildingFileNames] = React.useState<string[]>([]);\n  const [directoryHandle, setDirectoryHandle] = React.useState<FileSystemDirectoryHandle>();\n\n  const onDirectoryClick = async () => {\n    setBuildingFileNames([]);\n    const handle = await window.showDirectoryPicker();\n    await setDirectoryHandle(handle);\n    for await (const entry of handle.values()) {\n      if (entry.name.endsWith('.building.yaml'))\n        setBuildingFileNames(previous => [...previous, entry.name]);\n    }\n  }\n\n  const loadFile = async(filename: string) => {\n    if (directoryHandle) {\n      const fileHandle = await directoryHandle.getFileHandle(filename);\n      const file = await fileHandle.getFile();\n      const text = await file.text();\n      YAMLParser(text, '');\n    }\n    props.onOpen();\n  }\n\n  const buildingFileList = () => {\n    if (buildingFileNames.length > 0)\n      return (\n        <div>\n          <List\n            subheader={\n              <ListSubheader component=\"div\">\n                Available Files\n              </ListSubheader>\n            }\n          >\n            {buildingFileNames.map((filename) =>\n              <ListItem button key={filename}>\n                <ListItemIcon>\n                  <MapIcon />\n                </ListItemIcon>\n                <ListItemText primary={filename} onClick={e => {loadFile(filename)}} />\n              </ListItem>)\n            }\n          </List>\n        </div>\n      );\n  }\n\n  return (\n    <Dialog open={props.open} onClose={props.onCancel}>\n      <DialogTitle>Open Building Map</DialogTitle>\n      <DialogContent className={classes.dialog}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onDirectoryClick}>\n          Select Directory...\n        </Button>\n        {buildingFileList()}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onCancel} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useCallback } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport { useStore, EditorToolID, setEditorMode, clearSelection, setActiveTool } from './Store';\nimport OpenDialog from './OpenDialog';\nimport { YAMLRetriever, YAMLRetrieveDemo, YAMLSender } from './YAMLParser';\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\nimport PanToolIcon from '@material-ui/icons/PanTool';\n\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst StyledToggleButtonGroup = withStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(0.5),\n    marginRight: 5\n  },\n  grouped: {\n    //marginRight: theme.spacing(0.5),\n    //marginLeft: theme.spacing(0.5),\n    //margin: theme.spacing(0.5),\n    color: theme.palette.primary.contrastText,\n    //background: theme.palette.primary.dark,\n    \"&.Mui-selected:hover, &:hover\": {\n      background: theme.palette.primary.dark,\n    },\n    \"&.Mui-selected\": {\n      background: theme.palette.primary.dark,\n      color: theme.palette.primary.contrastText\n    },\n    /*\n    '&:not(:first-child)': {\n      borderRadius: '5px',\n    },\n    '&:first-child': {\n      borderRadius: '5px',\n    },\n    */\n  },\n}))(ToggleButtonGroup);\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  appTitle: {\n    marginRight: 20\n  },\n  filler: {\n    flex: 1\n  }\n}));\n\n\nexport default function MainMenu(props: React.PropsWithChildren<{}>): JSX.Element {\n  const classes = useStyles(props);\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState(null);\n  const [isOpenDialogOpen, setIsOpenDialogOpen] = React.useState(false);\n  const [snackOpen, setSnackOpen] = React.useState(false);\n  const [snackMessage, setSnackMessage] = React.useState('');\n  const [mapType, setMapType] = React.useState('');\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const activeTool = useStore(state => state.activeTool);\n  //const setEditorMode = useStore(state => state.setEditorMode);\n  //const setActiveTool = useStore(state => state.setActiveTool);\n  //const clearSelection = useStore(state => state.clearSelection);\n\n  const onModeChange = (event: React.MouseEvent<HTMLElement>, newMode: string | null) => {\n    if (newMode !== null) {\n      setEditorMode(setStore, newMode);\n      clearSelection(setStore);\n    }\n  };\n\n  const onToolChange = (event: React.MouseEvent<HTMLElement>, newTool: EditorToolID | null) => {\n    if (newTool !== null) {\n      setActiveTool(setStore, newTool);\n      clearSelection(setStore);\n    }\n  }\n\n  const save = useCallback(\n    async () => {\n      if (mapType === 'local_file') {\n        setSnackMessage('Cannot save. Local file save not yet implemented.');\n        setSnackOpen(true);\n      }\n      else if (mapType === 'local_rest') {\n        try {\n          await YAMLSender('http://localhost:8000/map_file');\n        } catch (error) {\n          setSnackMessage('Error while saving to local REST server');\n          setSnackOpen(true);\n        }\n      }\n      else if (mapType === 'demo') {\n        setSnackMessage('Cannot save. Demo maps are read-only.');\n        setSnackOpen(true);\n      }\n      else {\n        setSnackMessage('Cannot save. No map loaded.');\n        setSnackOpen(true);\n      }\n    },\n    [mapType]\n  );\n\n  const snackClose = () => {\n    setSnackOpen(false);\n  }\n\n  React.useEffect(() => {\n    const keyDown = (event: KeyboardEvent) => {\n      let key = event.key.toLowerCase();\n      if (key === 'm') {\n        setActiveTool(setStore, EditorToolID.MOVE);\n        clearSelection(setStore);\n      } else if (key === 'escape') {\n        setActiveTool(setStore, EditorToolID.SELECT);\n        clearSelection(setStore);\n      } else if (key === 's' && event.ctrlKey) {\n        event.preventDefault();\n        save();\n        return false;\n      }\n    };\n\n    window.addEventListener('keydown', keyDown);\n    return () => {\n      window.removeEventListener('keydown', keyDown);\n    };\n  }, [setStore, save]);\n\n  return (\n    <AppBar position=\"fixed\">\n      <ToolBar>\n        <IconButton\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"Menu\"\n          onClick={(e: any) => { setMenuAnchorEl(e.currentTarget); }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          keepMounted\n          anchorEl={menuAnchorEl}\n          open={Boolean(menuAnchorEl)}\n          onClose={() => setMenuAnchorEl(null)}\n          getContentAnchorEl={null}\n          anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\n          transformOrigin={{vertical: 'top', horizontal: 'center'}}\n          transitionDuration={0.0}\n        >\n          <MenuItem\n            onClick={async () => {\n              try {\n                await YAMLRetriever('http://localhost:8000/', 'map_file');\n                setMapType('local_rest');\n              } catch (error) {\n                setSnackMessage('could not open file from localhost:8000');\n                setSnackOpen(true);\n              }\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open map from localhost:8000\n            </ListItemText>\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              await YAMLRetrieveDemo('office');\n              setMapType('demo');\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open demo map\n            </ListItemText>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              setIsOpenDialogOpen(true);\n              setMapType('local_file');\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open map from local file...\n            </ListItemText>\n          </MenuItem>\n          <Divider />\n          <MenuItem\n            onClick={() => {\n              save();\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <SaveIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Save\n            </ListItemText>\n          </MenuItem>\n        </Menu>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.appTitle}>\n          Traffic Editor\n        </Typography>\n        <div className={classes.filler} />\n        <StyledToggleButtonGroup\n          value={activeTool}\n          size=\"small\"\n          exclusive\n          onChange={onToolChange}\n          aria-label=\"tool\"\n        >\n          <ToggleButton value={EditorToolID.SELECT}>\n            <Tooltip title=\"Select tool [Escape]\">\n              <PanToolIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={EditorToolID.MOVE}>\n            <Tooltip title=\"Move tool [m]\">\n              <OpenWithIcon />\n            </Tooltip>\n          </ToggleButton>\n        </StyledToggleButtonGroup>\n        <StyledToggleButtonGroup\n          value={editorMode}\n          size=\"small\"\n          exclusive\n          onChange={onModeChange}\n          aria-label=\"editor mode\"\n        >\n          <ToggleButton value=\"3d\">3D</ToggleButton>\n          <ToggleButton value=\"2d\">2D</ToggleButton>\n        </StyledToggleButtonGroup>\n      </ToolBar>\n      <OpenDialog\n        open={isOpenDialogOpen}\n        onOpen={() => setIsOpenDialogOpen(false)}\n        onCancel={() => setIsOpenDialogOpen(false)}\n      />\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        open={snackOpen}\n        onClose={snackClose}\n        autoHideDuration={2000}\n        transitionDuration={0}\n        TransitionProps={{\n          appear: false,\n        }}\n        action={\n          <React.Fragment>\n            <IconButton onClick={snackClose}>\n              <CloseIcon />\n            </IconButton>\n          </React.Fragment>\n        }\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={snackClose}>\n          {snackMessage}\n        </MuiAlert>\n      </Snackbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport BuildingSummary from './BuildingSummary';\nimport { EditorScene } from './EditorScene';\nimport PropertyEditor from './PropertyEditor';\nimport MainMenu from './MainMenu';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    minHeight: '100vh',\n  },\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar,\n  workingArea: {\n    backgroundColor: \"black\",\n    height: `calc(100vh - 64px)`,\n  },\n  gridLeftColumn: {\n    borderRight: '5px',\n    borderRightStyle: 'solid',\n    borderRightColor: theme.palette.primary.main,\n  },\n  propertyGridItem: {\n    borderTop: '5px',\n    borderTopStyle: 'solid',\n    borderTopColor: theme.palette.primary.main,\n  }\n}));\n\nexport default function App(props: React.PropsWithChildren<{}>): JSX.Element {\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes.root}>\n      <MainMenu />\n      <div className={classes.toolbarMargin} />\n      <Grid container spacing={0}>\n        <Grid className={classes.gridLeftColumn} container xs={3} direction=\"column\" spacing={0}>\n          <Grid item style={{height: '40vh', overflow: 'auto'}}>\n            <BuildingSummary />\n          </Grid>\n          <Grid item className={classes.propertyGridItem} style={{height: '40vh', overflow: 'auto'}}>\n            <PropertyEditor />\n          </Grid>\n        </Grid>\n        <Grid item xs={9} className={classes.workingArea}>\n          <EditorScene />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}