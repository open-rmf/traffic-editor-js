{"version":3,"sources":["CoordinateSystem.ts","EditorParam.ts","EditorObject.ts","EditorProp.ts","Vertex.ts","Feature.ts","Level.ts","ToolID.ts","Site.ts","Store.ts","SiteTreeView.tsx","SceneDoor.tsx","SceneFeature.tsx","SceneFloor.tsx","SceneLane.tsx","SceneImage.tsx","SceneMeasurement.tsx","SceneModel.tsx","SceneVertex.tsx","SceneWall.tsx","SceneLevel.tsx","SceneRobot.tsx","SceneSite.tsx","SceneMapTile.tsx","SceneMap.tsx","EditorScene.tsx","PropertyEditor.tsx","YAMLParser.ts","OpenDialog.tsx","NewDialog.tsx","MqttDialog.tsx","MainMenu.tsx","App.tsx","index.tsx"],"names":["CoordinateSystem","EditorParam","type_idx","name","value","uuid","_name","data","p","generate_uuid","EditorObject","params","props","object_type_name","params_yaml","param_name","this","push","fromYAML","node","YAML","YAMLMap","param","param_value_node","YAMLSeq","add","flow","key","Math","round","EditorProp","_getter","get_value","set_value","v","Vertex","x","y","roundNicely","length","paramsToYAML","vertex","paramsFromYAML","Feature","feature","CoordinateSystemToString","cs","Legacy","WGS84","WebMercator","ToolID","Level","elevation","scale","doors","vertices","walls","measurements","floors","lanes","models","images","features","constraints","coordinateSystem","map","constraint","toYAML","door","isLegacyDefaultImage","filename","floor","lane","layers_node","image","toLayerYAML","measurement","model","wall","sum","count","meas","dx","start_idx","end_idx","dy","d_pixels","sqrt","distance","_coordinateSystem","level","EditorImage","layer_name","EditorConstraint","EditorDoor","EditorFloor","fromLayerYAML","EditorLane","EditorModel","EditorMeasurement","EditorWall","calculateScale","Site","url_base","levels","reference_level_name","coordinate_system","yaml_doc","Document","save","levels_node","get","lifts_node","toString","lineWidth","minContentWidth","vec_min","THREE","Infinity","vec_max","bb","computeBoundingBox","cx","min","max","cy","transformPoint","t_cx","t_cy","target","position","z","zoom","site","yaml_text","yaml","parse","level_name","s","Undefined","console","log","CoordinateSystemFromString","level_data","parseDocument","vertex_indices","vertices_node","vertex_index","vertex_idx","offset","yaw","color","visible","blob","Blob","color_node","transform_node","_blob","size","feature_yaml","ids","model_name","instance_name","is_static","useStore","create","set","selection","editorMode","enableMotionControls","activeTool","SELECT","activeMotionTool","NONE","propertyRepaintCount","repaintCount","disableEditorTools","activeUUID","cameraInitialPose","cameraPose","fn","produce","mqtt_client","mqtt_robot_telemetry","setSelection","setStore","newSelection","state","clearSelection","setActiveTool","newTool","setState","setActiveMotionTool","repaintPropertyEditor","updateModelPoint","level_uuid","model_uuid","updateFeaturePoint","feature_level","feature_uuid","FeatureTreeItem","TreeItem","nodeId","label","onClick","event","ModelTreeItem","ConstraintTreeItem","substring","ParamTreeItem","DoorTreeItem","ImageTreeItem","FloorTreeItem","idx","join","WallTreeItem","MeasurementTreeItem","LaneTreeItem","VertexTreeItem","LevelTreeItem","SiteTreeView","style","margin","TreeView","defaultCollapseIcon","defaultExpandIcon","SceneDoor","v1","vertex_start","v2","vertex_end","len","xyrot","atan2","React","useMemo","setRGB","rotation","stopPropagation","args","SceneFeature","isMoveToolActive","MOVE","useState","dragActive","setDragActive","PI","onPointerDown","setPointerCapture","pointerId","onPointerUp","releasePointerCapture","onPointerMove","inverseTransformPoint","unprojectedPoint","px","py","intersection_point","ray","intersectPlane","Text","SceneFloor","shape","started","t_x","t_y","lineTo","moveTo","v0_x","v0_y","SceneLane","laneWidth","laneHeight","SceneImage","useLoader","TextureLoader","texture","width_meters","height_meters","magFilter","minFilter","width","height","SceneMeasurement","SceneModel","SceneVertex","captureTools","ADD_LANE","activeMotionLinePoint","setActiveMotionLinePoint","showActiveMotionGeometry","setShowActiveMotionGeometry","updateActiveMotionGeometry","useCallback","self","setFromPoints","vertexDiameter","newUUID","includes","start_uuid","end_uuid","getState","i","addLane","mouse_x","mouse_y","vertex_uuid","updateVertexPoint","attach","onUpdate","linewidth","linecap","SceneWall","SceneLevel","fallback","filter","SceneRobot","color_pointer","color_text","radius","heading","telemetry","pointer_x","cos","pointer_y","sin","fontSize","SceneSite","robots","useFrame","camera","c","center_x","matrixWorld","elements","center_y","center_z","robot","SceneMapTile","side_len","pow","wx","wy","url","setTexture","useEffect","load","ADD_VERTEX","addVertex","clamp","v_min","v_max","SceneMap","tiles","setTiles","viewport","useThree","canvasSize","currentPerformance","performance","current","right_x","right","left_x","left","top_y","top","bottom_y","bottom","zoom_level","ceil","disable","left_x_grid_idx","right_x_grid_idx","top_y_grid_idx","bottom_y_grid_idx","max_cell","next_tiles","Array","y_idx","x_idx","tile_desc","EditorScene","showMap","Controls","DefaultUp","perspective_camera","useRef","orthographic_camera","PerspectiveCamera","ref","fov","makeDefault","OrthographicCamera","OrbitControls","enableDamping","screenSpacePanning","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","mouseButtons","LEFT","PAN","MIDDLE","RIGHT","ROTATE","touches","ONE","TWO","enabled","regress","frameloop","mode","linear","onPointerMissed","intensity","useStyles","makeStyles","theme","noSelectionDiv","table","padding","tableHead","tableHeadRow","borderBottomStyle","borderBottom","borderBottomColor","palette","primary","main","tableHeadCell","fontWeight","paddingLeft","tableCell","PropertyEditor","classes","Table","className","TableHead","TableCell","TableBody","prop","TableRow","YAMLParser","computeInitialCameraPose","YAMLRetriever","resource_name","a","fetch","then","response","text","YAMLRetrieveDemo","process","YAMLSender","Object","getPrototypeOf","maxFlowStringSingleLineLength","toYAMLString","yaml_size","method","headers","body","directoryButton","typography","h5","textDecoration","dialog","backgroundColor","background","paper","OpenDialog","buildingFileNames","setBuildingFileNames","directoryHandle","setDirectoryHandle","onDirectoryClick","window","showDirectoryPicker","handle","entry","endsWith","previous","values","loadFile","getFileHandle","fileHandle","getFile","file","createWritable","writable","write","close","onOpen","Dialog","open","onClose","onCancel","DialogTitle","DialogContent","Button","variant","List","subheader","ListSubheader","component","ListItem","button","ListItemIcon","ListItemText","e","buildingFileList","DialogActions","spacing","NewDialog","site_name","isFileSystemAccessible","TextField","id","inputRef","fromNewCommand","broker_host","broker_port","defaultValue","type","client","mqtt","connect","on","subscribe","topic","payload","packet","topic_tokens","split","robot_name","telemetry_payload","JSON","lat_webm","lat_radians","lon_webm","tan","found_robot","updated_robot","robot_telemetry","StyledToggleButtonGroup","withStyles","root","light","marginRight","grouped","contrastText","dark","ToggleButtonGroup","flex","menuButton","marginLeft","appTitle","filler","MainMenu","menuAnchorEl","setMenuAnchorEl","isOpenDialogOpen","setIsOpenDialogOpen","isNewDialogOpen","setIsNewDialogOpen","isMqttDialogOpen","setIsMqttDialogOpen","snackOpen","setSnackOpen","snackMessage","setSnackMessage","mapType","setMapType","snackClose","keyDown","toLowerCase","ctrlKey","preventDefault","addEventListener","removeEventListener","AppBar","IconButton","aria-label","currentTarget","keepMounted","anchorEl","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","transitionDuration","MenuItem","Divider","Typography","exclusive","onChange","ToggleButton","Tooltip","title","disabled","ADD_WALL","newMode","setEditorMode","onNew","Snackbar","autoHideDuration","TransitionProps","appear","action","Fragment","severity","flexGrow","minHeight","toolbarMargin","mixins","toolbar","workingArea","gridLeftColumn","borderRight","borderRightStyle","borderRightColor","propertyGridItem","borderTop","borderTopStyle","borderTopColor","App","Grid","container","xs","direction","item","overflow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9d3d706.chunk.js","sourcesContent":["export enum CoordinateSystem {\n  Undefined = 0,\n  Legacy = 1,\n  WGS84 = 2,\n  WebMercator = 3,\n}\n \n// Wanted to have these functions inside a CoordinateSystem\n// namespace, but this triggers @typescript-eslint/no-redeclare\n// so I'll just prefix the function names below. Not sure\n// if there is a nicer way to do this.\n\nexport function CoordinateSystemToString(cs: CoordinateSystem): string {\n  if (cs === CoordinateSystem.Legacy) {\n    return \"legacy\";\n  }\n  else if (cs === CoordinateSystem.WGS84) {\n    return \"wgs84\";\n  }\n  else if (cs === CoordinateSystem.WebMercator) {\n    return \"web_mercator\";\n  }\n  else {\n    return \"unknown\";\n  }\n}\n\nexport function CoordinateSystemFromString(s: string): CoordinateSystem {\n  let cs: CoordinateSystem = CoordinateSystem.Undefined;\n  if (s === \"legacy\") {\n    cs = CoordinateSystem.Legacy;\n  }\n  else if (s === \"wgs84\") {\n    cs = CoordinateSystem.WGS84;\n  }\n  else if (s === \"web_mercator\") {\n    cs = CoordinateSystem.WebMercator;\n  }\n  else {\n    console.log(\"AHHHHH unknown coordinate system: \" + s);\n  }\n  return cs;\n}\n","//import YAML from 'yaml'\nimport { v4 as generate_uuid } from 'uuid'\n\nexport class EditorParam {\n  type_idx: number = 0;\n  name: string = '';\n  value: any = 0;\n  uuid: string = '';\n\n  static fromYAML(_name: string, data: any): EditorParam {\n    let p = new EditorParam();\n    p.name = _name;\n    p.type_idx = data[0];\n    p.value = data[1];\n    p.uuid = generate_uuid();\n    return p;\n  }\n}\n","import YAML from 'yaml'\nimport { EditorParam } from './EditorParam';\nimport { EditorProp } from './EditorProp';\n\nexport class EditorObject {\n  uuid: string = '';\n  params: EditorParam[] = [];\n  props: EditorProp[] = [];\n  object_type_name: string = '';\n\n  paramsFromYAML(params_yaml: any): void {\n    for (const param_name in params_yaml) {\n      this.params.push(EditorParam.fromYAML(param_name, params_yaml[param_name]));\n    }\n  }\n\n  paramsToYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    for (const param of this.params) {\n      let param_value_node = new YAML.YAMLSeq();\n      param_value_node.add(param.type_idx);\n      param_value_node.add(param.value);\n      param_value_node.flow = true;\n      node.add({ key: param.name, value: param_value_node });\n    }\n    node.flow = true;\n    return node;\n  }\n\n  static roundNicely(value: number): number {\n    return Math.round(value * 1000) / 1000;\n  }\n}\n","import { v4 as generate_uuid } from 'uuid'\n\nexport class EditorProp {\n  name: string = '';\n  get_value: () => any = () => '';\n  set_value: (_: any) => void = (v: any) => { };\n  uuid: string = '';\n\n  constructor(_name: string, _getter: () => any) {\n    this.name = _name;\n    this.get_value = _getter;\n    this.uuid = generate_uuid();\n  }\n}\n","import { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport { v4 as generate_uuid } from 'uuid';\nimport YAML from 'yaml';\n\nexport class Vertex extends EditorObject {\n  x: number = 0;\n  y: number = 0;\n  name: string = '';\n\n  constructor() {\n    super();\n    this.props.push(new EditorProp('name', () => this.name));\n    this.props.push(new EditorProp('x', () => { return EditorObject.roundNicely(this.x)} ));\n    this.props.push(new EditorProp('y', () => { return EditorObject.roundNicely(this.y)} ));\n  }\n\n  static fromYAML(data: any): Vertex {\n    let vertex = new Vertex();\n    vertex.object_type_name = 'Vertex';\n    vertex.uuid = generate_uuid();\n    vertex.x = data[0];\n    vertex.y = -data[1];\n    vertex.name = data[3];\n    vertex.paramsFromYAML(data[4]);\n\n    return vertex;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.x);\n    node.add(-this.y);\n    node.add(0.0);\n    node.add(this.name);\n    if (this.params.length)\n      node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n","import { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport YAML from 'yaml';\n//import { v4 as generate_uuid } from 'uuid';\n\nexport class Feature extends EditorObject {\n  name: string = '';\n  x: number = 0;\n  y: number = 0;\n\n  static fromYAML(data: any): Feature {\n    let feature = new Feature();\n    feature.object_type_name = 'Feature';\n    feature.uuid = data['id'];\n    feature.name = data['name'];\n    feature.x = data['x'];\n    feature.y = -data['y'];\n\n    feature.props.push(new EditorProp('name', () => feature.name));\n    feature.props.push(new EditorProp('x', () => { return EditorObject.roundNicely(feature.x)} ));\n    feature.props.push(new EditorProp('y', () => { return EditorObject.roundNicely(feature.y)} ));\n\n    return feature;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'id', value: this.uuid });\n    node.add({ key: 'name', value: this.name });\n    node.add({ key: 'x', value: this.x });\n    node.add({ key: 'y', value: -this.y });\n    node.flow = true;\n    return node;\n  }\n}\n","import YAML from 'yaml';\nimport { v4 as generate_uuid } from 'uuid';\nimport { EditorObject } from './EditorObject';\nimport { EditorProp } from './EditorProp';\nimport { Vertex } from './Vertex';\nimport { Feature } from './Feature';\nimport { CoordinateSystem, CoordinateSystemToString } from './CoordinateSystem';\n\n//import { EditorParam } from './EditorParam';\nimport {\n  EditorDoor,\n  EditorWall,\n  EditorMeasurement,\n  EditorFloor,\n  EditorImage,\n  EditorLane,\n  EditorModel,\n  EditorConstraint\n} from './Store';\n\nexport class Level extends EditorObject {\n  name: string = '';\n  elevation: number = 0;\n  scale: number = 1.234;\n  doors: EditorDoor[] = [];\n  vertices: Vertex[] = [];\n  walls: EditorWall[] = [];\n  measurements: EditorMeasurement[] = [];\n  floors: EditorFloor[] = [];\n  lanes: EditorLane[] = [];\n  models: EditorModel[] = [];\n  images: EditorImage[] = [];\n  features: Feature[] = [];\n  constraints: EditorConstraint[] = [];\n  coordinateSystem: CoordinateSystem = CoordinateSystem.Legacy;\n\n  constructor() {\n    super();\n    this.props.push(new EditorProp('name', () => this.name));\n    this.props.push(new EditorProp('elevation', () => this.elevation));\n    this.props.push(new EditorProp('scale', () => this.scale));\n    this.props.push(new EditorProp('coordinates', () => CoordinateSystemToString(this.coordinateSystem)));\n  }\n\n  static fromYAML(_name: string, data: any, _coordinateSystem: CoordinateSystem): Level {\n    let level = new Level();\n    level.object_type_name = 'Level';\n    level.uuid = generate_uuid();\n    level.name = _name;\n    level.coordinateSystem = _coordinateSystem;\n\n    if (data['drawing'] && data['drawing']['filename']) {\n      let image = new EditorImage();\n      image.uuid = generate_uuid();\n      image.filename = data['drawing']['filename'];\n      image.isLegacyDefaultImage = true;\n      level.images.push(image);\n    }\n\n    level.elevation = data['elevation'];\n\n    if (data['constraints']) {\n      level.constraints = data['constraints'].map((constraint: any) => EditorConstraint.fromYAML(constraint));\n    }\n\n    if (data['doors']) {\n      level.doors = data['doors'].map((door: any) => EditorDoor.fromYAML(door));\n    }\n\n    if (data['features']) {\n      level.features = data['features'].map((feature: any) => Feature.fromYAML(feature));\n    }\n\n    if (data['floors']) {\n      level.floors = data['floors'].map((floor: any) => EditorFloor.fromYAML(floor));\n    }\n\n    for (const layer_name in data['layers']) {\n      level.images.push(EditorImage.fromLayerYAML(layer_name, data['layers'][layer_name]));\n    }\n\n    if (data['lanes']) {\n      level.lanes = data['lanes'].map((lane: any) => EditorLane.fromYAML(lane));\n    }\n\n    if (data['models']) {\n      level.models = data['models'].map((model: any) => EditorModel.fromYAML(model));\n    }\n\n    if (data['measurements']) {\n      level.measurements = data['measurements'].map((measurement: any) => EditorMeasurement.fromYAML(measurement));\n    }\n\n    if (data['vertices']) {\n      level.vertices = data['vertices'].map((vertex: any) => Vertex.fromYAML(vertex));\n    }\n\n    if (data['walls']) {\n      level.walls = data['walls'].map((wall: any) => EditorWall.fromYAML(wall));\n    }\n\n    level.calculateScale();\n\n    return level;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n\n    node.add({ key: 'constraints', value: this.constraints.map(constraint => constraint.toYAML()) });\n    node.add({ key: 'doors', value: this.doors.map(door => door.toYAML()) });\n\n    if (this.images.length > 0 && this.images[0].isLegacyDefaultImage) {\n      node.add({ key: 'drawing', value: { 'filename': this.images[0].filename } });\n    }\n\n    node.add({ key: 'elevation', value: this.elevation });\n    node.add({ key: 'features', value: this.features.map(feature => feature.toYAML()) });\n    node.add({ key: 'flattened_x_offset', value: 0 });\n    node.add({ key: 'flattened_y_offset', value: 0 });\n    node.add({ key: 'floors', value: this.floors.map(floor => floor.toYAML()) });\n    node.add({ key: 'lanes', value: this.lanes.map(lane => lane.toYAML()) });\n\n    let layers_node = new YAML.YAMLMap();\n    for (const image of this.images) {\n      if (!image.isLegacyDefaultImage) {\n        layers_node.add({ key: image.name, value: image.toLayerYAML() });\n      }\n    }\n    node.add({ key: 'layers', value: layers_node });\n    node.add({ key: 'measurements', value: this.measurements.map(measurement => measurement.toYAML()) });\n    node.add({ key: 'models', value: this.models.map(model => model.toYAML()) });\n    node.add({ key: 'vertices', value: this.vertices.map(vertex => vertex.toYAML()) });\n    node.add({ key: 'walls', value: this.walls.map(wall => wall.toYAML()) });\n    return node;\n  }\n\n  calculateScale(): void {\n    // if the coordinate system is defined as \"Legacy\", that means it's\n    // scaled relative to pixels of some \"reference\" image.\n    if (this.coordinateSystem === CoordinateSystem.Legacy) {\n      let sum = 0.0;\n      let count = 0;\n      for (const meas of this.measurements) {\n        count++;\n        const dx = this.vertices[meas.start_idx].x - this.vertices[meas.end_idx].x;\n        const dy = this.vertices[meas.start_idx].y - this.vertices[meas.end_idx].y;\n        const d_pixels = Math.sqrt(dx*dx + dy*dy);\n        sum += meas.distance / d_pixels;\n      }\n  \n      if (count > 0) {\n        this.scale = sum / count;\n      }\n      else {\n        this.scale = 0.05;  // just use something sane...\n      }\n    }\n    else {\n      // other coordinate systems don't need this arbitrary pixel-scaling.\n      this.scale = 1.0;\n    }\n  }\n\n  transformPoint(x: number, y: number): [number, number] {\n    return [\n      x * this.scale,\n      y * this.scale,\n    ];\n  }\n\n  inverseTransformPoint(x: number, y: number): [number, number] {\n    return [\n      x / this.scale,\n      y / this.scale,\n    ];\n  }\n}\n","export enum ToolID {\n  SELECT,\n  MOVE,\n  ADD_VERTEX,\n  ADD_LANE,\n  ADD_WALL,\n  NONE\n}\n","import YAML from 'yaml';\nimport * as THREE from 'three';\nimport { v4 as generate_uuid } from 'uuid';\nimport { EditorObject } from './EditorObject';\nimport { CameraPose } from './Store';\nimport { Level } from './Level';\nimport {\n  CoordinateSystem,\n  CoordinateSystemFromString,\n  CoordinateSystemToString\n} from './CoordinateSystem';\n\nexport class Site extends EditorObject {\n  name: string = '';\n  filename: string = '';\n  url_base: string = '';\n  levels: Level[] = [];\n  reference_level_name: string = '';\n  uuid: string = '';\n  params = [];\n  props = [];\n  object_type_name = 'Site';\n  coordinate_system: CoordinateSystem = CoordinateSystem.Legacy;\n  yaml_doc: YAML.Document = new YAML.Document();\n  save: () => void = () => {};\n\n  static fromNewCommand(): Site {\n    let site = new Site();\n    site.uuid = generate_uuid();\n    site.name = 'Unnamed Site';\n    site.coordinate_system = CoordinateSystem.WebMercator;\n    return site;\n  }\n\n  static fromYAML(yaml_text: string): Site {\n    const yaml = YAML.parse(yaml_text);\n    let site = new Site();\n    site.uuid = generate_uuid();\n    site.name = yaml['name'];\n    if (yaml['coordinate_system']) {\n      site.coordinate_system = CoordinateSystemFromString(yaml['coordinate_system']);\n    }\n    for (const level_name in yaml['levels']) {\n      const level_data = yaml['levels'][level_name];\n      site.levels.push(Level.fromYAML(level_name, level_data, site.coordinate_system));\n    }\n    if (yaml['reference_level_name']) {\n      site.reference_level_name = yaml['reference_level_name'];\n    }\n    else {\n      if (site.levels.length > 0) {\n        site.reference_level_name = site.levels[0].name;\n      }\n    }\n    site.yaml_doc = YAML.parseDocument(yaml_text);\n    return site;\n  }\n\n  toYAMLString(): string {\n    let yaml_doc = new YAML.Document(new YAML.YAMLMap());\n    let levels_node = new YAML.YAMLMap();\n    for (const level of this.levels) {\n      levels_node.add({ key: level.name, value: level.toYAML() });\n    }\n    yaml_doc.add({ key: 'coordinate_system', value: CoordinateSystemToString(this.coordinate_system) });\n    yaml_doc.add({ key: 'crowd_sim', value: this.yaml_doc.get('crowd_sim') });\n    yaml_doc.add({ key: 'levels', value: levels_node });\n\n    let lifts_node = new YAML.YAMLMap();\n    // todo: add lifts to this map node\n    // only use flow style to enforce whitespace similarity for empty maps\n    lifts_node.flow = true;\n\n    yaml_doc.add({ key: 'lifts', value: lifts_node });\n    yaml_doc.add({ key: 'name', value: this.name });\n    return yaml_doc.toString({lineWidth: 0, minContentWidth: 2});\n  }\n\n  computeBoundingBox(): THREE.Box3 {\n    let vec_min = new THREE.Vector3(Infinity, Infinity, Infinity);\n    let vec_max = new THREE.Vector3(-Infinity, -Infinity, -Infinity);\n    for (const level of this.levels) {\n      for (const vertex of level.vertices) {\n        if (vertex.x < vec_min.x)\n          vec_min.x = vertex.x;\n        if (vertex.x > vec_max.x)\n          vec_max.x = vertex.x;\n  \n        if (vertex.y < vec_min.y)\n          vec_min.y = vertex.y;\n        if (vertex.y > vec_max.y)\n          vec_max.y = vertex.y;\n      }\n    }\n    return new THREE.Box3(vec_min, vec_max);\n  }\n\n  computeInitialCameraPose(): CameraPose {\n    if (this.levels.length) {\n      const bb = this.computeBoundingBox();\n      const cx = (bb.min.x + bb.max.x) / 2;\n      const cy = (bb.min.y + bb.max.y) / 2;\n      const [t_cx, t_cy] = this.levels[0].transformPoint(cx, cy);\n      const target = new THREE.Vector3(t_cx, t_cy, 0);\n      const position = new THREE.Vector3(\n        target.x + 10,\n        target.y - 10,\n        target.z + 10);\n      return {\n        position: position,\n        target: target,\n        zoom: 20,\n      };\n    }\n    else {\n      if (this.coordinate_system === CoordinateSystem.Legacy) {\n        return {\n          position: new THREE.Vector3(10, 10, 10),\n          target: new THREE.Vector3(0, 0, 0),\n          zoom: 20,\n        };\n      }\n      else {\n        // center on singapore\n        return {\n          position: new THREE.Vector3(201830, -127030, 10),\n          target: new THREE.Vector3(201830, -127030, 0),\n          zoom: 5,\n        };\n      }\n    }\n  }\n}\n","import create from 'zustand';\nimport produce from 'immer';\nimport * as THREE from 'three';\n//import * as net from 'net';\nimport { v4 as generate_uuid } from 'uuid';\nimport YAML from 'yaml';\n//import { EditorParam } from './EditorParam'\nimport { EditorObject } from './EditorObject';\nimport { Site } from './Site';\nimport { CoordinateSystem } from './CoordinateSystem';\nimport { Feature } from './Feature';\nimport { Level } from './Level';\nimport { Vertex } from './Vertex';\nimport { ToolID } from './ToolID';\nimport mqtt from 'mqtt';\n\nexport class EditorWall extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorWall {\n    let wall = new EditorWall();\n    wall.object_type_name = 'Wall';\n    wall.uuid = generate_uuid();\n    wall.paramsFromYAML(data[2]);\n    wall.start_idx = data[0];\n    wall.end_idx = data[1];\n    return wall;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorMeasurement extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n  distance: number = 1;\n\n  static fromYAML(data: any): EditorMeasurement {\n    let measurement = new EditorMeasurement();\n    measurement.object_type_name = 'Measurement'\n    measurement.uuid = generate_uuid();\n    measurement.start_idx = data[0];\n    measurement.end_idx = data[1];\n    measurement.distance = data[2]['distance'][1];\n    return measurement;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    let params_yaml = this.paramsToYAML();\n    params_yaml.add({ key: 'distance', value: [3, this.distance] });\n    node.add(params_yaml);\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorLane extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorLane {\n    let lane = new EditorLane();\n    lane.object_type_name = 'Lane';\n    lane.uuid = generate_uuid();\n    lane.paramsFromYAML(data[2]);\n    lane.start_idx = data[0];\n    lane.end_idx = data[1];\n    return lane;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorDoor extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorDoor {\n    let door = new EditorDoor();\n    door.object_type_name = 'Door';\n    door.uuid = generate_uuid();\n    door.paramsFromYAML(data[2]);\n    door.start_idx = data[0];\n    door.end_idx = data[1];\n    return door;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorFloor extends EditorObject {\n  vertex_indices: number[] = [];\n\n  static fromYAML(data: any): EditorFloor {\n    let floor = new EditorFloor();\n    floor.uuid = generate_uuid();\n    floor.paramsFromYAML(data['parameters']);\n    floor.vertex_indices = data['vertices'].map((vertex_idx: number) => vertex_idx);\n    return floor;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'parameters', value: this.paramsToYAML() });\n\n    let vertices_node = new YAML.YAMLSeq();\n    for (const vertex_index of this.vertex_indices) {\n      vertices_node.add(vertex_index);\n    }\n    vertices_node.flow = true;\n    node.add({ key: 'vertices', value: vertices_node });\n    return node;\n  }\n}\n\nexport class EditorImage extends EditorObject {\n  name: string = '';\n  filename: string = '';\n  offset: THREE.Vector3 = new THREE.Vector3(0, 0, 0);\n  yaw: number = 0;\n  scale: number = 1;\n  isLegacyDefaultImage: boolean = false;\n  color: number[] = [1, 1, 1, 1];\n  visible: boolean = true;\n  features: Feature[] = [];\n  blob: Blob = new Blob([]);\n\n  static fromLayerYAML(layer_name: string, data: any): EditorImage {\n    //console.log(data);\n    let image = new EditorImage();\n    image.object_type_name = 'Image';\n    image.uuid = generate_uuid();\n    image.name = layer_name;\n    image.filename = data['filename'];\n    image.color = data['color'];\n    image.offset.x = data['transform']['translation_x'];\n    image.offset.y = data['transform']['translation_y'];\n    image.scale = data['transform']['scale'];\n    image.yaw = data['transform']['yaw'];\n    image.isLegacyDefaultImage = false;\n    image.visible = data['visible'];\n    image.features = data['features'].map((feature_yaml: any) => Feature.fromYAML(feature_yaml));\n    return image;\n  }\n\n  toLayerYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    let color_node = new YAML.YAMLSeq();\n    color_node.add(this.color[0]);\n    color_node.add(this.color[1]);\n    color_node.add(this.color[2]);\n    color_node.add(this.color[3]);\n    color_node.flow = true;\n    node.add({ key: 'color', value: color_node });\n    node.add({ key: 'features', value: this.features.map(feature => feature.toYAML()) });\n    node.add({ key: 'filename', value: this.filename });\n    let transform_node = new YAML.YAMLMap();\n    transform_node.add({ key: 'scale', value: this.scale });\n    transform_node.add({ key: 'translation_x', value: this.offset.x });\n    transform_node.add({ key: 'translation_y', value: this.offset.y });\n    transform_node.add({ key: 'yaw', value: this.yaw });\n    node.add({ key: 'transform', value: transform_node });\n    node.add({ key: 'visible', value: this.visible });\n    return node;\n  }\n\n  loadBlob(_blob: Blob): void {\n    this.blob = _blob;\n    console.log(`image ${this.filename} retrieved ${this.blob.size} bytes`);\n  }\n}\n\nexport class EditorConstraint extends EditorObject {\n  ids: string[] = [];\n\n  static fromYAML(data: any): EditorConstraint {\n    let constraint = new EditorConstraint();\n    constraint.uuid = generate_uuid();\n    constraint.ids = [ data['ids'][0], data['ids'][1] ];\n    return constraint;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'ids', value: this.ids });\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorModel extends EditorObject {\n  model_name: string = '';\n  instance_name: string = '';\n  is_static: boolean = true;\n  x: number = 0;\n  y: number = 0;\n  z: number = 0;\n  yaw: number = 0;\n\n  static fromYAML(data: any): EditorModel {\n    let model = new EditorModel();\n    model.object_type_name = 'Model';\n    model.uuid = generate_uuid();\n    model.model_name = data['model_name'];\n    model.instance_name = data['name'];\n    model.is_static = data['static'];\n    model.x = data['x'];\n    model.y = -data['y'];\n    model.yaw = data['yaw'];\n    model.z = data['z'];\n    return model;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'model_name', value: this.model_name });\n    node.add({ key: 'name', value: this.instance_name });\n    node.add({ key: 'static', value: this.is_static });\n    node.add({ key: 'x', value: this.x });\n    node.add({ key: 'y', value: -this.y });\n    node.add({ key: 'yaw', value: this.yaw });\n    node.add({ key: 'z', value: this.z });\n    node.flow = true;\n    return node;\n  }\n}\n\nexport interface CameraPose {\n  position: THREE.Vector3,\n  target: THREE.Vector3,\n  zoom: number,\n}\n\nexport interface RobotTelemetry {\n  name: string,\n  x: number,\n  y: number,\n  z: number,\n  heading: number,\n}\n\nexport interface StoreState {\n  site: Site,\n  selection: EditorObject | null,\n  editorMode: string,\n  enableMotionControls: boolean,\n  activeTool: ToolID,\n  activeMotionTool: ToolID,\n  cameraInitialPose: CameraPose,\n  cameraPose: CameraPose,\n  propertyRepaintCount: number,\n  repaintCount: number,\n  disableEditorTools: boolean,\n  activeUUID: string,\n  set: (fn: (draftState: StoreState) => void) => void,\n  mqtt_client: mqtt.MqttClient | null,\n  mqtt_robot_telemetry: RobotTelemetry[],\n}\n\nexport const useStore = create<StoreState>(set => ({\n  site: new Site(),\n  selection: null,\n  editorMode: '2d',\n  enableMotionControls: true,\n  activeTool: ToolID.SELECT,\n  activeMotionTool: ToolID.NONE,\n  propertyRepaintCount: 0,\n  repaintCount: 0,\n  disableEditorTools: false,\n  activeUUID: '',\n  cameraInitialPose: {\n    position: new THREE.Vector3(0, 0, 100),\n    target: new THREE.Vector3(0, 0, 0),\n    zoom: 20,\n  },\n  cameraPose: {\n    position: new THREE.Vector3(0, 0, 100),\n    target: new THREE.Vector3(0, 0, 0),\n    zoom: 20,\n  },\n  set: fn => set(produce(fn)),\n  mqtt_client: null,\n  mqtt_robot_telemetry: [],\n}));\n\nexport type StoreSetter = (fn: (draftState: StoreState) => void) => void;\n\nexport function setSelection(setStore: StoreSetter, newSelection: EditorObject) {\n  setStore(state => {\n    state.selection = newSelection;\n  });\n}\n\nexport function clearSelection(setStore: StoreSetter) {\n  setStore(state => {\n    state.selection = null;\n  });\n}\n\nexport function setEditorMode(setStore: StoreSetter, newMode: string) {\n  setStore(state => {\n    state.editorMode = newMode;\n  });\n}\n\nexport function setActiveTool(newTool: ToolID) {\n  useStore.setState({\n    activeTool: newTool,\n    activeUUID: ''\n  });\n}\n\nexport function setActiveMotionTool(newTool: ToolID) {\n  useStore.setState({ activeMotionTool: newTool });\n}\n\nexport function setActiveUUID(newUUID: string) {\n  useStore.setState({ activeUUID: newUUID });\n}\n\nexport function repaintPropertyEditor(setStore: StoreSetter) {\n  setStore(state => {\n    state.propertyRepaintCount += 1;\n  });\n}\n\nexport function disableEditorTools(disable: boolean) {\n  let currentState = useStore.getState().disableEditorTools;\n  if (currentState === disable)\n    return; // nothing to do\n  useStore.setState({ disableEditorTools: disable });\n}\n\nexport function addVertex(x: number, y: number) {\n  console.log(`addVertex(${x}, ${y})`);\n  //\n  //let site = useStore(state => state.site);\n  let vertex = new Vertex();\n  vertex.uuid = generate_uuid();\n  vertex.x = x;\n  vertex.y = y;\n\n  let site = useStore.getState().site;\n\n  if (site.levels.length === 0) {\n    // add a default level\n    let level = new Level();\n    level.uuid = generate_uuid();\n\n    level.name = 'default';\n    level.scale = site.coordinate_system === CoordinateSystem.Legacy ? 0.05 : 1;\n    vertex.x *= level.scale;\n    vertex.y *= level.scale;\n\n    level.vertices = [vertex];\n\n    site.levels = [level];\n  }\n  else {\n    // todo: some way of defining the active level\n    let level = site.levels[0];\n    vertex.x *= level.scale;\n    vertex.y *= level.scale;\n    level.vertices = [...level.vertices, vertex];\n  }\n\n  useStore.setState({\n    site: site,\n    repaintCount: useStore.getState().repaintCount + 1,\n  });\n}\n\nexport function updateVertexPoint(\n  setStore: StoreSetter,\n  level_uuid: string,\n  vertex_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.site.levels.map(level => {\n      if (level.uuid === level_uuid) {\n        level.vertices.map(vertex => {\n          if (vertex.uuid === vertex_uuid) {\n            vertex.x = x;\n            vertex.y = y;\n          }\n          return vertex;\n        })\n      }\n      return level;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n\nexport function updateModelPoint(\n  setStore: StoreSetter,\n  level_uuid: string,\n  model_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.site.levels.map(level => {\n      if (level.uuid === level_uuid) {\n        level.models.map(model => {\n          if (model.uuid === model_uuid) {\n            model.x = x;\n            model.y = y;\n          }\n          return model;\n        })\n      }\n      return level;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n\nexport function updateFeaturePoint(\n  setStore: StoreSetter,\n  feature_level: Level,\n  feature_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.site.levels.map(level => {\n      if (level === feature_level) {\n        level.features.map(feature => {\n          if (feature.uuid === feature_uuid) {\n            feature.x = x;\n            feature.y = y;\n          }\n          return feature;\n        })\n      }\n      return level;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n\nexport function addLane(start_uuid: string, end_uuid: string, level_uuid: string) {\n  console.log(`addLane(${start_uuid}, ${end_uuid})`);\n  let site = useStore.getState().site;\n  for (let level of site.levels) {\n    if (level.uuid === level_uuid) {\n      // look up the vertex indices\n      // TODO: something cooler than this\n      let start_idx = -1;\n      let end_idx = -1;\n      for (let i = 0; i < level.vertices.length; i++) {\n        if (level.vertices[i].uuid === start_uuid) {\n          start_idx = i;\n        }\n        if (level.vertices[i].uuid === end_uuid) {\n          end_idx = i;\n        }\n      }\n      if (start_idx < 0 || end_idx < 0) {\n        return;\n      }\n\n      let lane = new EditorLane();\n      lane.uuid = generate_uuid();\n      lane.start_idx = start_idx;\n      lane.end_idx = end_idx;\n\n      level.lanes = [...level.lanes, lane];\n      break;\n    }\n  }\n\n  useStore.setState({\n    site: site,\n    repaintCount: useStore.getState().repaintCount + 1,\n  });\n}\n","import React from 'react';\nimport {\n  EditorConstraint,\n  EditorDoor,\n  EditorFloor,\n  EditorImage,\n  EditorLane,\n  EditorMeasurement,\n  EditorModel,\n  EditorWall,\n  setSelection,\n  useStore,\n} from './Store';\nimport { EditorParam } from './EditorParam';\nimport { Level } from './Level';\nimport { Vertex } from './Vertex';\nimport { Feature } from './Feature';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nfunction FeatureTreeItem(props: { feature: Feature }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.feature.uuid}\n      key={props.feature.uuid}\n      label={`${props.feature.x}, ${props.feature.y}`}\n      onClick={(event) => {\n        setSelection(setStore, props.feature);\n      }}\n    >\n    </TreeItem>\n  );\n}\n\nfunction ModelTreeItem(props: { model: EditorModel }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.model.uuid}\n      key={props.model.uuid}\n      label={`${props.model.instance_name}`}\n      onClick={(event) => {\n        setSelection(setStore, props.model);\n      }}\n    >\n    </TreeItem>\n  );\n}\n\n\nfunction ConstraintTreeItem(props: { constraint: EditorConstraint }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.constraint.uuid}\n      key={props.constraint.uuid}\n      label={`${props.constraint.ids[0].substring(1, 9)} - ${props.constraint.ids[1].substring(1, 9)}`}\n      onClick={(event) => {\n        setSelection(setStore, props.constraint);\n      }}\n    >\n      {props.constraint.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction DoorTreeItem(props: { door: EditorDoor }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.door.start_idx} => ${props.door.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.door.uuid}\n      key={props.door.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.door);\n      }}\n      label={label} />\n  );\n}\n\nfunction ParamTreeItem(props: { param: EditorParam }): JSX.Element {\n  return (\n    <TreeItem\n      nodeId={props.param.uuid}\n      key={props.param.uuid}\n      label={`${props.param.name} = ${props.param.value}`}\n    />\n  );\n}\n\nfunction ImageTreeItem(props: { image: EditorImage }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.image.uuid}\n      key={props.image.uuid}\n      label={props.image.filename}\n      onClick={(event) => {\n        setSelection(setStore, props.image);\n      }}\n    >\n      {props.image.params.map((param) => <ParamTreeItem param={param} />)}\n      <TreeItem\n        nodeId={`${props.image.uuid}_features`}\n        key={`${props.image.uuid}_features`}\n        label=\"features\"\n      >\n        {props.image.features.map((feature) => <FeatureTreeItem feature={feature} />)}\n      </TreeItem>\n    </TreeItem>\n  );\n}\n\nfunction FloorTreeItem(props: { floor: EditorFloor }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = 'floor (' + props.floor.vertex_indices.map((idx) => idx.toString()).join(', ') + ')';\n  return(\n    <TreeItem\n      nodeId={props.floor.uuid}\n      key={props.floor.uuid}\n      label={label}\n      onClick={(event) => {\n        setSelection(setStore, props.floor);\n      }}\n    >\n      {props.floor.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction WallTreeItem(props: { wall: EditorWall }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.wall.start_idx} => ${props.wall.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.wall.uuid}\n      key={props.wall.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.wall);\n      }}\n      label={label} />\n  );\n}\n\nfunction MeasurementTreeItem(props: { measurement: EditorMeasurement }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.measurement.start_idx}-${props.measurement.end_idx}) = ${props.measurement.distance}`;\n  return(\n    <TreeItem\n      nodeId={props.measurement.uuid}\n      key={props.measurement.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.measurement);\n      }}\n      label={label} />\n  );\n}\n\nfunction LaneTreeItem(props: { lane: EditorLane }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.lane.start_idx} => ${props.lane.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.lane.uuid}\n      key={props.lane.uuid}\n      label={label}\n      onClick={(event) => {\n        setSelection(setStore, props.lane);\n      }}\n    />\n  );\n}\n\nfunction VertexTreeItem(props: { vertex: Vertex }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  let label = \"(\" + props.vertex.x + \", \" + props.vertex.y + \")\";\n  if (props.vertex.name)\n    label = props.vertex.name + ': ' + label;\n  return (\n    <TreeItem\n      nodeId={props.vertex.uuid}\n      key={props.vertex.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.vertex);\n      }}\n      label={label}>\n      {props.vertex.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction LevelTreeItem(props: { level: Level }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.level.uuid}\n      key={props.level.uuid}\n      label={props.level.name}\n      onClick={(event) => {\n        setSelection(setStore, props.level);\n      }}>\n\n      <TreeItem nodeId={props.level.uuid + '_constraints'} label=\"constraints\">\n        {props.level.constraints.map(constraint => <ConstraintTreeItem constraint={constraint} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_doors'} label=\"doors\">\n        {props.level.doors.map(door => <DoorTreeItem door={door} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_features'} label=\"features\">\n        {props.level.features.map(feature => <FeatureTreeItem feature={feature} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_floors'} label=\"floors\">\n        {props.level.floors.map(floor => <FloorTreeItem floor={floor} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_images'} label=\"images\">\n        {props.level.images.map(image => <ImageTreeItem image={image} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_lanes'} label=\"lanes\">\n        {props.level.lanes.map(lane => <LaneTreeItem lane={lane} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_measurements'} label=\"measurements\">\n        {props.level.measurements.map(measurement => <MeasurementTreeItem measurement={measurement} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_models'} label=\"models\">\n        {props.level.models.map(model => <ModelTreeItem model={model} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_vertices'} label=\"vertices\">\n        {props.level.vertices.map(vertex => <VertexTreeItem vertex={vertex} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_walls'} label=\"walls\">\n        {props.level.walls.map(wall => <WallTreeItem wall={wall} /> )}\n      </TreeItem>\n    </TreeItem>\n  );\n}\n\nexport function SiteTreeView(): JSX.Element {\n  const site = useStore(state => state.site);\n\n  if (site.name === '') {\n    return (\n      <div style={{margin: '1em'}}>\n        <p>\n          No map loaded.\n        </p>\n        <p>\n          To load a map, click the menu icon in the upper-left.\n        </p>\n      </div>\n    );\n  }\n \n  // defaultExpanded={[building.uuid + '_levels']}\n  return (\n    <TreeView\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId={site.uuid + '_name'} label={\"site name: \" + site.name} />\n      <TreeItem nodeId={site.uuid + '_filename'} label={\"filename: \" + site.filename} />\n      <TreeItem\n        nodeId={site.uuid + '_ref'}\n        label={\"reference level: \" + site.reference_level_name }\n      />\n      <TreeItem nodeId={site.uuid + '_levels'} label=\"levels\">\n        {site.levels.map(level => <LevelTreeItem level={level} /> )}\n      </TreeItem>\n    </TreeView>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorDoor, setSelection } from './Store';\n\ninterface SceneDoorProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  door: EditorDoor,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneDoor(props: SceneDoorProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.1, 0.4, 0.4);\n    if (selection && selection.uuid === props.door.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.door.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 1.0 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.door.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.door);\n      }}\n    >\n      <boxGeometry args={[len, 0.5, 2]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Text } from '@react-three/drei'\nimport { Feature } from './Feature';\nimport { Level } from './Level';\nimport {\n  useStore,\n  repaintPropertyEditor,\n  setSelection,\n  updateFeaturePoint,\n} from './Store';\nimport { ToolID } from './ToolID';\n\ninterface SceneFeatureProps {\n  feature: Feature,\n  elevation: number,\n  level: Level,\n}\n\nexport function SceneFeature(props: SceneFeatureProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const isMoveToolActive = useStore(state => state.activeTool === ToolID.MOVE);\n  const [ dragActive, setDragActive ] = React.useState(false);\n\n  const [x, y] = props.level.transformPoint(props.feature.x, props.feature.y);\n\n  let color = \"rgb(200, 200, 0)\";\n  if (selection && selection.uuid === props.feature.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  return (\n    <group>\n      <mesh\n        position={[x, y, 0.25 + props.elevation]}\n        scale={1.0}\n        rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n        key={props.feature.uuid}\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n        onPointerDown={(event) => {\n          setSelection(setStore, props.feature);\n          if (!isMoveToolActive)\n            return;\n          event.stopPropagation();\n          setDragActive(true);\n          if (event.target) {\n            (event.target as HTMLElement).setPointerCapture(event.pointerId);\n          }\n        }}\n        onPointerUp={(event) => {\n          event.stopPropagation();\n          setDragActive(false);\n          if (event.target) {\n            (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n          }\n          repaintPropertyEditor(setStore);\n        }}\n        onPointerMove={(event) => {\n          if (dragActive) {\n            event.stopPropagation();\n            if (editorMode === '2d') {\n              const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n              updateFeaturePoint(setStore, props.level, props.feature.uuid, px, py);\n            }\n            else {\n              let intersection_point = new THREE.Vector3();\n              event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n              const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n              updateFeaturePoint(setStore, props.level, props.feature.uuid, px, py);\n            }\n          }\n        }}\n      >\n        <cylinderGeometry args={[0.05, 0.15, 0.4, 16]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <Text color=\"blue\" position={[x, y, 0.36 + props.elevation]}>\n        {props.feature.name}\n      </Text>\n    </group>\n  );\n}\n","import React from 'react';\nimport * as THREE from 'three';\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorFloor, setSelection } from './Store';\n\ntype SceneFloorProps = {\n  floor: EditorFloor;\n  level: Level;\n  vertices: Vertex[];\n  elevation: number;\n}\n\nexport function SceneFloor(props: SceneFloorProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const shape = React.useMemo(() => {\n    const shape = new THREE.Shape();\n    let started = false;\n\n    for (const v of props.vertices) {\n      const [t_x, t_y] = props.level.transformPoint(v.x, v.y);\n      if (!started)\n      {\n        shape.moveTo(t_x, t_y);\n        started = true;\n      }\n      else\n        shape.lineTo(t_x, t_y);\n    }\n    const [v0_x, v0_y] = props.level.transformPoint(props.vertices[0].x, props.vertices[0].y);\n    shape.lineTo(v0_x, v0_y);\n    return shape;\n  }, [props.vertices, props.level])\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(1, 1, 1);\n    if (selection && selection.uuid === props.floor.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.floor.uuid]);\n\n  return (\n    <mesh\n      key={props.floor.uuid}\n      position={[0, 0, -0.1]}\n      onClick={(event) => {\n        event.stopPropagation()\n        console.log('floor onClick')\n        setSelection(setStore, props.floor)\n      }}\n    >\n      <extrudeGeometry args={[shape, { 'depth': 0.1, 'bevelEnabled': false } ]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n\n  /*\n      <meshStandardMaterial color={color} transparent={true} opacity={0.5} />\n  return (\n    <gridHelper\n      args={[100, 100]}\n      rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n      position={new THREE.Vector3(50, -50, elevation)}/>\n  );\n   */\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorLane, setSelection } from './Store';\nimport { CoordinateSystem } from './CoordinateSystem';\n\ninterface SceneLaneProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  lane: EditorLane,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneLane(props: SceneLaneProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n  const coordinateSystem = useStore(state => state.site.coordinate_system);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const laneWidth = coordinateSystem === CoordinateSystem.Legacy ? 0.5 : 0.02;\n  const laneHeight = laneWidth / 10;\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.6, 0.05, 0.05);\n    if (selection && selection.uuid === props.lane.uuid) {\n      color.setRGB(0.8, 0.3, 0.01);\n    }\n    return color;\n  }, [selection, props.lane.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, laneHeight/2 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.lane.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.lane);\n      }}\n    >\n      <boxGeometry args={[len, laneWidth, laneHeight]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n//<meshStandardMaterial color={color} transparent={true} opacity={0.7} />\n","import React from 'react'\nimport * as THREE from 'three'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\nimport { useLoader } from '@react-three/fiber';\nimport { Level } from './Level';\nimport { useStore, EditorImage } from './Store';\n\ntype SceneImageProps = {\n  image: EditorImage,\n  elevation: number,\n  level: Level,\n}\n\nexport function SceneImage(props: SceneImageProps): JSX.Element {\n  //const selection = useStore(state => state.selection)\n  const url_base = useStore(state => state.site.url_base);\n  //const setStore = useStore(state => state.set);\n  const [ texture ] = useLoader(TextureLoader, [url_base + props.image.filename]);\n  //useLoader.preload(TextureLoader, [url_base + props.image.filename]);\n\n  let width_meters = 50.0;\n  let height_meters = 50.0;\n\n  if (texture) {\n    texture.magFilter = THREE.NearestFilter;\n    texture.minFilter = THREE.NearestFilter;\n    width_meters = texture.image.width * props.level.scale;\n    height_meters = texture.image.height * props.level.scale;\n    // console.log(`texture size: ${width_meters}, ${height_meters}`);\n  }\n\n  const x = props.image.offset.x;\n  const y = props.image.offset.y;\n  const scale = 1; // todo...\n  const yaw = props.image.yaw;\n\n  return (\n    <mesh\n      position={[x + width_meters / 2, y - height_meters / 2, props.elevation - 0.05 + .01]}\n      scale={scale}\n      rotation={new THREE.Euler(0, yaw, 0)}\n      key={props.image.uuid}\n    >\n      <boxGeometry args={[width_meters, height_meters, 0.1, 8]} />\n      <meshStandardMaterial map={texture} color={[1.0, 1.0, 1.0]} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorMeasurement, setSelection } from './Store';\n\ninterface SceneMeasurementProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  measurement: EditorMeasurement,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneMeasurement(props: SceneMeasurementProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.6, 0.1, 0.6);\n    if (selection && selection.uuid === props.measurement.uuid) {\n      color.setRGB(0.8, 0.3, 0.01);\n    }\n    return color;\n  }, [selection, props.measurement.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 0.2 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.measurement.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.measurement);\n      }}\n    >\n      <boxGeometry args={[len, 0.5, 0.1]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Level } from './Level';\nimport { useStore, EditorModel, setSelection, updateModelPoint } from './Store';\nimport { ToolID } from './ToolID';\n\ninterface SceneModelProps {\n  model: EditorModel,\n  elevation: number,\n  level: Level,\n  level_uuid: string,\n}\n\nexport function SceneModel(props: SceneModelProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const isMoveToolActive = useStore(state => state.activeTool === ToolID.MOVE);\n  const [ dragActive, setDragActive ] = React.useState(false);\n\n  const [x, y] = props.level.transformPoint(props.model.x, props.model.y);\n\n  let color = \"rgb(128, 128, 128)\";\n  if (selection && selection.uuid === props.model.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  return (\n    <mesh\n      position={[x, y, 0.25 + props.elevation]}\n      scale={1.0}\n      rotation={new THREE.Euler(Math.PI / 2, props.model.yaw, 0)}\n      key={props.model.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.model);\n      }}\n      onPointerDown={(event) => {\n        if (!isMoveToolActive)\n          return;\n        event.stopPropagation();\n        setDragActive(true);\n        if (event.target) {\n          (event.target as HTMLElement).setPointerCapture(event.pointerId);\n        }\n      }}\n      onPointerUp={(event) => {\n        event.stopPropagation();\n        setDragActive(false);\n        if (event.target) {\n          (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n        }\n      }}\n      onPointerMove={(event) => {\n        if (dragActive) {\n          event.stopPropagation();\n          if (editorMode === '2d') {\n            const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n            updateModelPoint(setStore, props.level_uuid, props.model.uuid, px, py);\n          }\n          else {\n            let intersection_point = new THREE.Vector3();\n            event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n            const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n            updateModelPoint(setStore, props.level_uuid, props.model.uuid, px, py);\n          }\n        }\n      }}\n    >\n      <boxGeometry args={[0.4, 0.4, 0.4, 8]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Text } from '@react-three/drei'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport {\n  useStore,\n  repaintPropertyEditor,\n  setSelection,\n  setActiveUUID,\n  setActiveMotionTool,\n  updateVertexPoint,\n  addLane,\n} from './Store';\nimport { ToolID } from './ToolID';\nimport { CoordinateSystem } from './CoordinateSystem';\n\ninterface SceneVertexProps {\n  vertex: Vertex,\n  elevation: number,\n  level: Level,\n  level_uuid: string,\n}\n\nexport function SceneVertex(props: SceneVertexProps): JSX.Element {\n  //console.log('SceneVertex()');\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const activeTool = useStore(state => state.activeTool);\n  const activeUUID = useStore(state => state.activeUUID);\n  const activeMotionTool = useStore(state => state.activeMotionTool);\n  const coordinateSystem = useStore(state => state.site.coordinate_system);\n  const captureTools = [ToolID.MOVE, ToolID.ADD_LANE];\n\n  const [activeMotionLinePoint, setActiveMotionLinePoint] = React.useState<[number, number]>([0, 0]);\n  const [showActiveMotionGeometry, setShowActiveMotionGeometry] = React.useState(false);\n  const updateActiveMotionGeometry = React.useCallback(self => {\n    self.setFromPoints(\n      [\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(activeMotionLinePoint[0], activeMotionLinePoint[1], 0)\n      ]);\n  }, [activeMotionLinePoint]);\n\n  // todo: inflate vertex diameter when far away?\n  const vertexDiameter = coordinateSystem === CoordinateSystem.Legacy ? 0.1 : 0.01;\n\n  const [x, y] = props.level.transformPoint(props.vertex.x, props.vertex.y);\n\n  let color = \"rgb(0, 128, 0)\";\n  if (selection && selection.uuid === props.vertex.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  //const lineGeometry = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(0, 0, 0), new THREE.Vector3(1, 1, 1)]);\n  return (\n    <group>\n      <mesh\n        position={[x, y, vertexDiameter/2 + props.elevation]}\n        scale={1.0}\n        rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n        key={props.vertex.uuid}\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n        onPointerDown={(event) => {\n          //console.log(`vertex onPointerDown uuid=${props.vertex.uuid}`);\n          if (activeTool === ToolID.SELECT) {\n            setSelection(setStore, props.vertex);\n            return;\n          }\n          else if (captureTools.includes(activeTool)) {\n            event.stopPropagation();\n            setActiveMotionTool(activeTool);\n            setActiveUUID(props.vertex.uuid);\n            if (event.target) {\n              (event.target as HTMLElement).setPointerCapture(event.pointerId);\n            }\n          }\n        }}\n        onPointerUp={(event) => {\n          event.stopPropagation();\n          if (event.target) {\n            (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n          }\n          setShowActiveMotionGeometry(false);\n          repaintPropertyEditor(setStore);\n\n          //console.log(`vertex onPointerUp uuid=${props.vertex.uuid} activeMotionTool=${activeMotionTool}`);\n          if (activeMotionTool === ToolID.ADD_LANE) {\n            // calculate if we released the pointer on an existing vertex\n            // if so, add a new lane between those vertices\n            //console.log(`activeUUID: ${activeUUID} props.vertex.uuid: ${props.vertex.uuid}`);\n            if (activeUUID !== props.vertex.uuid) {\n              addLane(activeUUID, props.vertex.uuid, props.level.uuid);\n            }\n          }\n          setActiveMotionTool(ToolID.NONE);\n        }}\n        onPointerMove={(event) => {\n          if (activeMotionTool === ToolID.NONE)\n            return;\n\n          event.stopPropagation();\n\n          let [mouse_x, mouse_y] = [0, 0];\n          if (editorMode === '2d') {\n            [mouse_x, mouse_y] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n          }\n          else if (editorMode === '3d') {\n            let intersection_point = new THREE.Vector3();\n            event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n            [mouse_x, mouse_y] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n          }\n          else {\n            return;\n          }\n\n          if (activeMotionTool === ToolID.MOVE) {\n            updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, mouse_x, mouse_y);\n          }\n          else if (activeMotionTool === ToolID.ADD_LANE) {\n            setShowActiveMotionGeometry(true);\n            setActiveMotionLinePoint([mouse_x - x, mouse_y - y]);\n          }\n        }}\n      >\n        <cylinderGeometry args={[vertexDiameter, vertexDiameter, vertexDiameter, 16]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <Text color=\"blue\" position={[x, y, 1.5 * vertexDiameter + props.elevation]}>\n        {props.vertex.name}\n      </Text>\n      {showActiveMotionGeometry && <lineSegments position={[x, y, props.elevation + 0.3]}>\n        <bufferGeometry attach=\"geometry\" onUpdate={updateActiveMotionGeometry} />\n        <lineBasicMaterial attach=\"material\" color={'#000000'} linewidth={20} linecap={'round'} />\n      </lineSegments>}\n    </group>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Vertex } from './Vertex';\nimport { Level } from './Level';\nimport { useStore, EditorWall, setSelection } from './Store';\n\ninterface SceneWallProps {\n  vertex_start: Vertex,\n  vertex_end: Vertex,\n  wall: EditorWall,\n  level: Level,\n  elevation: number,\n}\n\nexport function SceneWall(props: SceneWallProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const [cx, cy] = props.level.transformPoint((v1.x + v2.x) / 2, (v1.y + v2.y) / 2);\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) * props.level.scale;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.1, 0.1, 0.9);\n    if (selection && selection.uuid === props.wall.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.wall.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 1.0 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.wall.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.wall);\n      }}\n    >\n      <boxGeometry args={[len, 0.1, 2]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React, { Suspense } from 'react'\nimport { Level } from './Level';\nimport { SceneDoor } from './SceneDoor';\nimport { SceneFeature } from './SceneFeature';\nimport { SceneFloor } from './SceneFloor';\nimport { SceneLane } from './SceneLane';\nimport { SceneImage } from './SceneImage';\nimport { SceneMeasurement } from './SceneMeasurement';\nimport { SceneModel } from './SceneModel';\nimport { SceneVertex } from './SceneVertex';\nimport { SceneWall } from './SceneWall';\nimport { useStore } from './Store';\n\ntype SceneLevelProps = {\n  level: Level\n}\n\nexport function SceneLevel(props: SceneLevelProps): JSX.Element {\n  const z = props.level.elevation / 2;\n  useStore(state => state.selection);  // needed to ensure repaints after de-selection\n\n  return (\n    <group>\n      {props.level.models.map(model =>\n        <SceneModel\n          key={model.uuid}\n          model={model}\n          level={props.level}\n          level_uuid={props.level.uuid}\n          elevation={z} />)}\n\n      {props.level.vertices.map((vertex) =>\n        <SceneVertex\n          key={vertex.uuid}\n          vertex={vertex}\n          level={props.level}\n          level_uuid={props.level.uuid}\n          elevation={z} />)}\n\n      {props.level.features.map(feature =>\n        <SceneFeature\n          key={feature.uuid}\n          feature={feature}\n          level={props.level}\n          elevation={z} />)}\n\n      {props.level.walls.map((wall) =>\n        <SceneWall\n          key={wall.uuid}\n          wall={wall}\n          level={props.level}\n          vertex_start={props.level.vertices[wall.start_idx]}\n          vertex_end={props.level.vertices[wall.end_idx]}\n          elevation={z} />)}\n\n      {props.level.doors.map((door) =>\n        <SceneDoor\n          key={door.uuid}\n          door={door}\n          level={props.level}\n          vertex_start={props.level.vertices[door.start_idx]}\n          vertex_end={props.level.vertices[door.end_idx]}\n          elevation={z} />)}\n\n      {props.level.floors.map((floor) =>\n        <SceneFloor\n          key={floor.uuid}\n          floor={floor}\n          level={props.level}\n          vertices={floor.vertex_indices.map((idx) => props.level.vertices[idx])}\n          elevation={z} />)}\n\n      {props.level.lanes.map(lane =>\n        <SceneLane\n          key={lane.uuid}\n          lane={lane}\n          level={props.level}\n          vertex_start={props.level.vertices[lane.start_idx]}\n          vertex_end={props.level.vertices[lane.end_idx]}\n          elevation={z} />)}\n\n      <Suspense fallback={null}>\n        {props.level.images.filter(image => image.isLegacyDefaultImage).map(image =>\n          <SceneImage\n            key={image.uuid}\n            image={image}\n            level={props.level}\n            elevation={z} />)}\n      </Suspense>\n\n      {props.level.measurements.map(meas =>\n        <SceneMeasurement\n          key={meas.uuid}\n          measurement={meas}\n          level={props.level}\n          vertex_start={props.level.vertices[meas.start_idx]}\n          vertex_end={props.level.vertices[meas.end_idx]}\n          elevation={z} />)}\n    </group>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { RobotTelemetry } from './Store';\nimport { Text } from '@react-three/drei'\n\ninterface SceneRobotProps {\n  telemetry: RobotTelemetry\n}\n\nexport function SceneRobot(props: SceneRobotProps): JSX.Element {\n  const color = new THREE.Color(0, 0.8, 0.8);\n  const color_pointer = new THREE.Color(0, 0.5, 0.5);\n  const color_text = new THREE.Color(0, 0.5, 0.5);\n  const radius = 0.008;\n  const height = 0.015;\n  const heading = props.telemetry.heading;\n  const x = props.telemetry.x;\n  const y = props.telemetry.y;\n  const z = props.telemetry.z; // todo: deal with multiple levels\n  const pointer_x = x + radius/2 * Math.cos(heading);\n  const pointer_y = y + radius/2 * Math.sin(heading);\n  return (\n    <group>\n      <mesh\n        position={[x, y, z + height / 2]}\n        rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n        scale={1.0}\n        key={props.telemetry.name}\n      >\n        <cylinderGeometry args={[radius, radius, height, 16]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <mesh\n        position={[pointer_x, pointer_y, z + height * 1.1]}\n        rotation={new THREE.Euler(0, 0, heading)}\n        scale={1.0}\n        key={props.telemetry.name + '_pointer'}\n      >\n        <planeGeometry args={[radius, radius/4]} />\n        <meshStandardMaterial color={color_pointer} />\n      </mesh>\n      <Text fontSize={radius/3} color={color_text} position={[x, y + radius/2, z + height + 0.001]}>\n        {props.telemetry.name}\n      </Text>\n    </group>\n  );\n}\n","import * as THREE from 'three'\nimport React from 'react'\nimport { useStore } from './Store';\nimport { SceneLevel } from './SceneLevel';\nimport { CoordinateSystem } from './CoordinateSystem';\nimport { useFrame } from '@react-three/fiber';\nimport { SceneRobot } from './SceneRobot';\n\ntype SceneSiteProps = {\n}\n\nexport function SceneSite(props: SceneSiteProps): JSX.Element {\n  const site = useStore(state => state.site);\n  useStore(state => state.selection);  // needed to ensure repaints after de-selection\n  useStore(state => state.repaintCount);  // needed to ensure repaints after tweaks\n  const setStore = useStore(state => state.set);\n  const robots = useStore(state => state.mqtt_robot_telemetry);\n\n  useFrame(state => {\n    if (state.camera instanceof THREE.OrthographicCamera) {\n      const c: THREE.OrthographicCamera = state.camera as THREE.OrthographicCamera;\n      //const scale = 1000;\n      const center_x = c.matrixWorld.elements[12];\n      const center_y = c.matrixWorld.elements[13];\n      const center_z = c.matrixWorld.elements[14];\n      setStore(state => {\n        state.cameraPose = {\n          position: state.cameraPose.position.set(center_x, center_y, center_z),\n          target: state.cameraPose.target,\n          zoom: state.cameraPose.zoom,\n        };\n      });\n    }\n  });\n\n  return (\n    <group>\n      {(site.coordinate_system === CoordinateSystem.Legacy) && <pointLight position={[10, 10, 10]} />}\n      {site.levels.map((level) => <SceneLevel key={level.uuid} level={level} />)}\n      {robots.map((robot) => <SceneRobot telemetry={robot} />)}\n    </group>\n  );\n}\n","import React from 'react';\n//import { Text } from '@react-three/drei'\nimport * as THREE from 'three'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\nimport { useStore, addVertex } from './Store';\nimport { ToolID } from './ToolID';\n\ntype SceneMapTileProps = {\n  x: number,\n  y: number,\n  zoom: number,\n}\n\nexport function SceneMapTile(props: SceneMapTileProps): JSX.Element {\n  const activeTool = useStore(state => state.activeTool);\n  const editorMode = useStore(state => state.editorMode);\n  //const site = useStore(state => state.site);\n  //const setStore = useStore(state => state.set);\n\n  const key = `${props.zoom}_${props.x}_${props.y}`;\n\n  // compute the world distance of a side of this tile\n  const scale = 1000;\n  const side_len = 1.000 * 256 * scale / Math.pow(2, props.zoom);\n\n  // compute the world x and y coords of the center of this tile\n  const wx = props.x * 256 * scale / Math.pow(2, props.zoom) + side_len / 2;\n  const wy = -1 * (props.y * 256 * scale / Math.pow(2, props.zoom) + side_len / 2);\n\n  const url = `https://tiles.demo.open-rmf.org/tiles/${props.zoom}/${props.x}/${props.y}.png`;\n  const [texture, setTexture] = React.useState<THREE.Texture>();\n  React.useEffect(() => { new TextureLoader().load(url, setTexture)}, [url]);\n  if (texture && props.zoom === 18) {\n    texture.magFilter = THREE.NearestFilter;\n    //texture.minFilter = THREE.NearestFilter;\n    //texture.encoding = THREE.LinearEncoding; // not sure why this is needed...\n    //texture.encoding = THREE.sRGBEncoding; // not sure why this is needed...\n  }\n\n  return (\n    <group>\n      <mesh\n        position={[wx, wy, -0.05]}\n        scale={1}\n        rotation={new THREE.Euler(0, 0, 0)}\n        key={key}\n        onPointerDown={event => {\n          event.stopPropagation();\n          if (activeTool === ToolID.ADD_VERTEX) {\n            if (editorMode === '2d') {\n              addVertex(event.unprojectedPoint.x, event.unprojectedPoint.y);\n\n              /*\n              const [px, py] = props.level.inverseTransformPoint(event.unprojectedPoint.x, event.unprojectedPoint.y);\n              updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, px, py);\n              */\n            }\n            else {\n              /*\n              let intersection_point = new THREE.Vector3();\n              event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n              const [px, py] = props.level.inverseTransformPoint(intersection_point.x, intersection_point.y);\n              updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, px, py);\n              */\n            }\n          }\n        }}\n      >\n        <boxGeometry args={[side_len, side_len, 0.1, 8]} />\n        <meshStandardMaterial key={texture ? 'texture' : 'notexture'} map={texture} color={[1, 1, 1]} />\n      </mesh>\n    </group>\n  );\n}\n\n/*\n * debugging debris here...\n<Text fontSize={10 * scale / Math.pow(2, props.zoom)} color=\"blue\" position={[wx, wy, 10.2]}>\n  {key}\n</Text>\n */\n","import * as THREE from 'three'\nimport React from 'react';\n//import { useStore } from './Store';\nimport { useThree } from '@react-three/fiber';\nimport { SceneMapTile } from './SceneMapTile';\nimport { disableEditorTools } from './Store';\n\ntype SceneMapProps = {\n}\n\n/*\nfunction r(value: number): string {\n  return (value >= 0 ? '+' : '') + (Math.round(value * 10000) / 10000).toFixed(4);\n}\n\nfunction printMatrix(name: string, m: THREE.Matrix4) {\n  console.log(name);\n  const e = m.elements;\n  // it's stored column-major...\n  console.log(`${r(e[0])} ${r(e[4])} ${r(e[8])} ${r(e[12])}`);\n  console.log(`${r(e[1])} ${r(e[5])} ${r(e[9])} ${r(e[13])}`);\n  console.log(`${r(e[2])} ${r(e[6])} ${r(e[10])} ${r(e[14])}`);\n  console.log(`${r(e[3])} ${r(e[7])} ${r(e[11])} ${r(e[15])}`);\n}\n\nfunction printVector(name: string, v: THREE.Vector4) {\n  console.log(`${name}: ${r(v.x)} ${r(v.y)} ${r(v.z)} ${r(v.w)}`);\n}\n*/\n\nfunction clamp(v: number, v_min: number, v_max: number): number {\n  if (v < v_min)\n    return v_min;\n  else if (v > v_max)\n    return v_max;\n  return v;\n}\n\ntype TileDescription = {\n  x: number,\n  y: number,\n  zoom: number,\n}\n\nexport function SceneMap(props: SceneMapProps): JSX.Element {\n  const [tiles, setTiles] = React.useState<TileDescription[]>([]);\n  const viewport = useThree(state => state.viewport);\n  const camera = useThree(state => state.camera);\n  const canvasSize = useThree(state => state.size);\n  const currentPerformance = useThree(state => state.performance.current);\n\n  React.useEffect(() => {\n    // recalculate visible tiles after camera-control motion is completed\n    // in the future, could also have a useFrame() handler checking if \n    // currentPerformance is <1 to have the tiles recalculate while the\n    // motion is in-flight\n    if (currentPerformance === 1) {\n      //console.log('recalculate tiles');\n      if (camera instanceof THREE.OrthographicCamera) {\n        const c: THREE.OrthographicCamera = camera as THREE.OrthographicCamera;\n        /*\n        console.log(`orthographic camera: ${c.left} ${c.right}, ${c.top}, ${c.bottom}, ${c.zoom}`);\n        console.log(`  viewport: ${viewport.width}, ${viewport.height}`);\n        console.log(`  dpr: ${viewport.dpr}`);\n        console.log(`  aspect: ${viewport.aspect}`);\n        console.log(`  canvas size: ${canvasSize.width}, ${canvasSize.height}`);\n        printMatrix('projection', camera.projectionMatrix);\n        printMatrix('projectionMatrixInverse', camera.projectionMatrixInverse);\n        printMatrix('matrixWorld', camera.matrixWorld);\n        printMatrix('matrixWorldInverse', camera.matrixWorldInverse);\n         */\n        // find world-coordinate bounds of the viewport: web mercator (0, 0) => (256, -256)\n        const scale = 1000;\n\n        const center_x = camera.matrixWorld.elements[12];\n        const center_y = camera.matrixWorld.elements[13];\n        const right_x = (center_x + c.right / c.zoom);\n        const left_x = (center_x + c.left / c.zoom);\n        const top_y = -(center_y + c.top / c.zoom);\n        const bottom_y = -(center_y + c.bottom / c.zoom);\n        //console.log(`extents: (${r(left_x)}, ${r(top_y)}) - (${r(right_x)}, ${r(bottom_y)})`);\n\n        // calculate web mercator zoom level do put a few tiles on the screen\n        // todo: incorporate the number of pixels in the canvas; small resolutions don't need as many.\n        let zoom_level = Math.ceil(1.5 + Math.log(scale * 256 / (right_x - left_x)) / Math.log(2));\n        const MAX_ZOOM = 18;\n        if (zoom_level < 0)\n          zoom_level = 0;\n        else if (zoom_level > MAX_ZOOM)\n          zoom_level = MAX_ZOOM;\n        //console.log(`  zoom: ${zoom_level}`);\n\n        disableEditorTools(zoom_level < 17);\n\n        let left_x_grid_idx = Math.floor(left_x / (256 * scale) * Math.pow(2, zoom_level));\n        let right_x_grid_idx = Math.floor(right_x / (256 * scale) * Math.pow(2, zoom_level));\n        // invert Y since we're operating in 4th quadrant to keep +z = \"up\"\n        let top_y_grid_idx = Math.floor(top_y / (256 * scale) * Math.pow(2, zoom_level));\n        let bottom_y_grid_idx = Math.floor(bottom_y / (256 * scale) * Math.pow(2, zoom_level));\n        //console.log(`  grid: (${left_x_grid_idx}, ${top_y_grid_idx}) - (${right_x_grid_idx}, ${bottom_y_grid_idx})`);\n\n\n        //const PHI_MAX = 85.05112877980659;  // web mercator... 2*atan(e^pi) - pi/2\n        //let top_y_grid_idx = Math.pow(2, zoom_level) - 1 - Math.floor(1 / (2 * PHI_MAX) * Math.pow(2, zoom_level) * (top_y + PHI_MAX));\n        //let bottom_y_grid_idx = Math.pow(2, zoom_level) - 1 - Math.ceil(1 / (2 * PHI_MAX) * Math.pow(2, zoom_level) * (bottom_y + PHI_MAX));\n        //const bottom_y_grid_idx = Math.floor(1 / 360 * Math.pow(2, zoom_level) * (right_x + 180));\n\n        const max_cell = Math.pow(2, zoom_level) - 1;\n        left_x_grid_idx = clamp(left_x_grid_idx, 0, max_cell);\n        right_x_grid_idx = clamp(right_x_grid_idx, 0, max_cell);\n        top_y_grid_idx = clamp(top_y_grid_idx, 0, max_cell);\n        bottom_y_grid_idx = clamp(bottom_y_grid_idx, 0, max_cell);\n\n        /*\n        console.log(`horizontal ${left_x},${right_x} => ${left_x_grid_idx},${right_x_grid_idx}`);\n        console.log(`vertical ${bottom_y},${top_y} => ${bottom_y_grid_idx},${top_y_grid_idx}`);\n         */\n\n        let next_tiles = Array<TileDescription>();\n        for (let y_idx = top_y_grid_idx; y_idx <= bottom_y_grid_idx; y_idx++) {\n          for (let x_idx = left_x_grid_idx; x_idx <= right_x_grid_idx; x_idx++) {\n            //console.log(`looking for tile (${x_idx}, ${y_idx}, ${zoom_level})`);\n            //const tile_str = `${x_idx}_${y_idx}_${zoom_level}`;\n            const tile_desc = { x: x_idx, y: y_idx, zoom: zoom_level, visible: true };\n            next_tiles.push(tile_desc);\n          }\n        }\n        setTiles(next_tiles);\n        console.log('setTiles()');\n\n        /*\n        const upper_left = new THREE.Vector4(c.left, c.top, 0, 1);\n        upper_left.applyMatrix4(camera.projectionMatrix);\n        upper_left.applyMatrix4(camera.matrixWorld);\n        //const upper_left_cast: THREE.Vector4 = camera.matrixWorld * camera.projectionMatrix * upper_left;\n        printVector('upper_left', upper_left);\n         */\n      }\n    }\n  }, [currentPerformance, camera, viewport, canvasSize]);\n\n  /*\n  useFrame(state => {\n    //console.log(`viewport: ${state.viewport.width}, ${state.viewport.height}, ${state.viewport.factor}`);\n    //console.log(`camera: ${state.camera.projectionMatrix.elements}  ${state.camera.matrixWorld.elements}`);\n    //console.log(`viewport: ${state.viewport.width}, ${state.viewport.height}, ${state.viewport.factor}`);\n    //console.log(`camera class: ${typeof state.camera.constructor.name}`);\n  });\n  */\n\n  return (\n    <group>\n      {tiles.map(tile_desc =>\n        <SceneMapTile\n          x={tile_desc.x}\n          y={tile_desc.y}\n          zoom={tile_desc.zoom}\n          key={`${tile_desc.zoom}_${tile_desc.x}_${tile_desc.y}`}\n        />\n      )}\n    </group>\n  );\n}\n","import * as THREE from 'three';\nimport { Canvas } from '@react-three/fiber';\nimport React, { useRef } from 'react';\nimport { OrbitControls } from '@react-three/drei';\nimport { PerspectiveCamera, OrthographicCamera } from '@react-three/drei';\nimport { CoordinateSystem } from './CoordinateSystem';\n\nimport { useStore, clearSelection } from './Store';\nimport { SceneSite } from './SceneSite';\nimport { SceneMap } from './SceneMap';\n\ntype EditorSceneProps = {\n};\n\nexport function EditorScene(props: EditorSceneProps): JSX.Element {\n  const showMap = useStore(state => (state.site.coordinate_system !== CoordinateSystem.Legacy));\n  const setStore = useStore(state => state.set);\n  //const clearSelection = useStore(state => state.clearSelection);\n  const editorMode = useStore(state => state.editorMode);\n  const cameraInitialPose = useStore(state => state.cameraInitialPose);\n\n  const Controls = (): JSX.Element => {\n    THREE.Object3D.DefaultUp = new THREE.Vector3(0, 0, 1);\n    const perspective_camera = useRef<THREE.Camera>(null);\n    const orthographic_camera = useRef<THREE.Camera>(null);\n    const enableMotionControls = useStore(state => state.enableMotionControls);\n\n    // todo: there is probably a better way to do this than having two cameras\n    return (\n      <>\n        <PerspectiveCamera\n          ref={perspective_camera}\n          position={cameraInitialPose.position}\n          fov={60}\n          makeDefault={editorMode === '3d'}\n        />\n        <OrthographicCamera\n          ref={orthographic_camera}\n          position={[cameraInitialPose.target.x, cameraInitialPose.target.y, cameraInitialPose.target.z + 100]}\n          zoom={cameraInitialPose.zoom}\n          makeDefault={editorMode === '2d'}\n        />\n        {perspective_camera && orthographic_camera && <OrbitControls\n          enableDamping={false}\n          screenSpacePanning={editorMode === '3d' ? false : true}\n          target={cameraInitialPose.target}\n          camera={editorMode === '3d' ? perspective_camera.current! : orthographic_camera.current!}\n          maxPolarAngle={editorMode === '3d' ? Infinity : 0}\n          minAzimuthAngle={editorMode === '3d' ? -Infinity : 0}\n          maxAzimuthAngle={editorMode === '3d' ? Infinity : 0}\n          mouseButtons={{\n            LEFT: THREE.MOUSE.PAN,\n            MIDDLE: -1,\n            RIGHT: THREE.MOUSE.ROTATE,\n          }}\n          touches={{\n            ONE: THREE.TOUCH.PAN,\n            TWO: THREE.TOUCH.ROTATE\n          }}\n          enabled={enableMotionControls}\n          regress={true}\n        />}\n      </>\n    );\n  }\n\n  console.log('EditorScene()');\n  return (\n    <Canvas\n      frameloop=\"demand\"\n      mode=\"concurrent\"\n      linear={true}\n      onPointerMissed={() => {\n        clearSelection(setStore);\n      }}\n    >\n      <Controls />\n      <axesHelper />\n      <ambientLight intensity={1.0}/>\n      <SceneSite />\n      {showMap && <SceneMap />}\n\n    </Canvas>\n  )\n}\n/*\n      <Suspense fallback={null} >\n      <pointLight position={[10, 10, 10]} />\n      </Suspense>\n*/\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { useStore } from './Store';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  noSelectionDiv: {\n  },\n  table: {\n    padding: '0px',\n    margin: '0px'\n  },\n  tableHead: {\n  },\n  tableHeadRow: {\n    borderBottomStyle: 'solid',\n    borderBottom: '1px',\n    borderBottomColor: theme.palette.primary.main,\n  },\n  tableHeadCell: {\n    fontWeight: 'bold',\n    padding: '0px',\n    paddingLeft: '5px',\n  },\n  tableCell: {\n    padding: '0px',\n    paddingLeft: '5px',\n  }\n}));\n\n/*\n      <TableHead className={classes.tableHead}>\n        <TableRow className={classes.tableHeadRow}>\n          <TableCell className={classes.tableHeadCell}>Property Name</TableCell>\n          <TableCell className={classes.tableHeadCell}>Property Value</TableCell>\n        </TableRow>\n      </TableHead>\n */\n\nexport default function PropertyEditor(): JSX.Element {\n  const classes = useStyles();\n  const selection = useStore(state => state.selection);\n  useStore(state => state.propertyRepaintCount);  // repaint during tool moves\n\n  if (!selection) {\n    return (<div className={classes.noSelectionDiv}></div>);\n  }\n\n  return (\n    <Table className={classes.table}>\n      <TableHead>\n        <TableCell className={classes.tableHeadCell}>{selection.object_type_name}</TableCell>\n        <TableCell className={classes.tableHeadCell}></TableCell>\n      </TableHead>\n      <TableBody>\n        {selection.props.map(prop =>\n          <TableRow>\n            <TableCell className={classes.tableCell}>{prop.name}</TableCell>\n            <TableCell className={classes.tableCell}>{prop.get_value()}</TableCell>\n          </TableRow>\n        )}\n        {selection.params.map(param =>\n          <TableRow>\n            <TableCell className={classes.tableCell}>{param.name}</TableCell>\n            <TableCell className={classes.tableCell}>{param.value.toString()}</TableCell>\n          </TableRow>\n        )}\n      </TableBody>\n    </Table>\n  );\n}\n","import { useStore } from './Store';\nimport { Site } from './Site';\nimport YAML from 'yaml';\n\n\nexport function YAMLParser(yaml_text: string, url_base: string): Site {\n  const site = Site.fromYAML(yaml_text);\n  site.url_base = url_base;\n  const cameraInitialPose = site.computeInitialCameraPose();\n\n  useStore.setState({\n    site: site,\n    selection: null,\n    cameraInitialPose: cameraInitialPose\n  });\n\n  return site;\n}\n\nexport async function YAMLRetriever(url_base: string, resource_name: string): Promise<void> {\n  await fetch(url_base + resource_name)\n    .then(response => response.text())\n    .then(text => YAMLParser(text, url_base))\n}\n\nexport async function YAMLRetrieveDemo(name: string): Promise<void> {\n  await YAMLRetriever(\n    process.env.PUBLIC_URL + `/demos/${name}/`,\n    `${name}.building.yaml`);\n}\n\nexport async function YAMLSender(url: string): Promise<void> {\n  Object.getPrototypeOf(YAML.YAMLMap).maxFlowStringSingleLineLength = 10000;\n  const { site } = useStore.getState();\n  let yaml_text: string = site.toYAMLString();\n  let yaml_size = new Blob([yaml_text]).size;  // utf-8 encoding length\n  await fetch(url, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/x-yaml',\n      'content-length': yaml_size.toString(),\n    },\n    body: yaml_text,\n  });\n}\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MapIcon from '@material-ui/icons/Map';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { YAMLParser } from './YAMLParser';\nimport { useStore } from './Store';\nimport YAML from 'yaml';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  directoryButton: {\n    fontSize: theme.typography.h5.fontSize\n  },\n  filename: {\n    fontSize: theme.typography.h5.fontSize,\n    textDecoration: 'underline'\n  },\n  dialog: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\ntype OpenDialogProps = {\n  open: boolean;\n  onOpen: () => void; //filename: string, handle: FileSystemDirectoryHandle | undefined) => void;\n  onCancel: () => void;\n};\n\nexport default function OpenDialog(props: OpenDialogProps): JSX.Element {\n  const classes = useStyles(props);\n  const [buildingFileNames, setBuildingFileNames] = React.useState<string[]>([]);\n  const [directoryHandle, setDirectoryHandle] = React.useState<FileSystemDirectoryHandle>();\n\n  const onDirectoryClick = async () => {\n    setBuildingFileNames([]);\n    const handle = await window.showDirectoryPicker();\n    await setDirectoryHandle(handle);\n    for await (const entry of handle.values()) {\n      if (entry.name.endsWith('.building.yaml'))\n        setBuildingFileNames(previous => [...previous, entry.name]);\n    }\n  }\n\n  const loadFile = async(filename: string) => {\n    if (directoryHandle) {\n      const fileHandle = await directoryHandle.getFileHandle(filename);\n      const file = await fileHandle.getFile();\n      const text = await file.text();\n      YAMLParser(text, '');\n\n      let site = useStore.getState().site;\n      site.filename = filename;\n      site.save = async () => {\n        const fileHandle = await directoryHandle.getFileHandle(filename, {create: true});\n        const writable = await fileHandle.createWritable();\n        Object.getPrototypeOf(YAML.YAMLMap).maxFlowStringSingleLineLength = 10000;\n        await writable.write(site.toYAMLString());\n        await writable.close();\n      }\n\n      useStore.setState({site: site});\n    }\n    props.onOpen();\n  }\n\n  const buildingFileList = () => {\n    if (buildingFileNames.length > 0)\n      return (\n        <div>\n          <List\n            subheader={\n              <ListSubheader component=\"div\">\n                Available Files\n              </ListSubheader>\n            }\n          >\n            {buildingFileNames.map((filename) =>\n              <ListItem button key={filename}>\n                <ListItemIcon>\n                  <MapIcon />\n                </ListItemIcon>\n                <ListItemText primary={filename} onClick={e => {loadFile(filename)}} />\n              </ListItem>)\n            }\n          </List>\n        </div>\n      );\n  }\n\n  return (\n    <Dialog open={props.open} onClose={props.onCancel}>\n      <DialogTitle>Open Building Map</DialogTitle>\n      <DialogContent className={classes.dialog}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onDirectoryClick}>\n          Select Directory...\n        </Button>\n        {buildingFileList()}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onCancel} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useRef } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport YAML from 'yaml';\n\nimport { Site } from './Site';\nimport { useStore } from './Store';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  directoryButton: {\n    fontSize: theme.typography.h5.fontSize\n  },\n  filename: {\n    fontSize: theme.typography.h5.fontSize,\n    textDecoration: 'underline'\n  },\n  dialog: {\n    backgroundColor: theme.palette.background.paper,\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\ntype NewDialogProps = {\n  open: boolean;\n  onNew: () => void;\n  onCancel: () => void;\n  close: () => void;\n};\n\nexport default function NewDialog(props: NewDialogProps): JSX.Element {\n  const classes = useStyles(props);\n  // const [buildingFileNames, setBuildingFileNames] = React.useState<string[]>([]);\n  const [directoryHandle, setDirectoryHandle] = React.useState<FileSystemDirectoryHandle>();\n  const site_name = useRef<HTMLInputElement>();\n\n  const onDirectoryClick = async () => {\n    //setBuildingFileNames([]);\n    const handle = await window.showDirectoryPicker({ writable: true});\n    //handle.requestPermission({ writable: true });\n    setDirectoryHandle(handle);\n    /*\n    for await (const entry of handle.values()) {\n      if (entry.name.endsWith('.building.yaml'))\n        setBuildingFileNames(previous => [...previous, entry.name]);\n    }\n    */\n  }\n\n  const createNewMap = () => {\n    if (directoryHandle) {\n      const site = Site.fromNewCommand();\n      if (site_name.current) {\n        site.name = site_name.current?.value;\n        site.filename = site_name.current?.value + '.building.yaml';\n        site.save = async () => {\n          const fileHandle = await directoryHandle.getFileHandle(site.filename, {create: true});\n          const writable = await fileHandle.createWritable();\n          Object.getPrototypeOf(YAML.YAMLMap).maxFlowStringSingleLineLength = 10000;\n          await writable.write(site.toYAMLString());\n          await writable.close();\n        }\n      }\n      const cameraInitialPose = site.computeInitialCameraPose();\n      useStore.setState({\n        site: site,\n        selection: null,\n        cameraInitialPose: cameraInitialPose,\n      });\n      props.close();\n    }\n  }\n\n  /*\n  const loadFile = async(filename: string) => {\n    if (directoryHandle) {\n      const fileHandle = await directoryHandle.getFileHandle(filename);\n      const file = await fileHandle.getFile();\n      const text = await file.text();\n      YAMLParser(text, '');\n    }\n    props.onOpen();\n  }\n  */\n\n  /*\n  const buildingFileList = () => {\n    if (buildingFileNames.length > 0)\n      return (\n        <div>\n          <List\n            subheader={\n              <ListSubheader component=\"div\">\n                Available Files\n              </ListSubheader>\n            }\n          >\n            {buildingFileNames.map((filename) =>\n              <ListItem button key={filename}>\n                <ListItemIcon>\n                  <MapIcon />\n                </ListItemIcon>\n                <ListItemText primary={filename} onClick={e => {loadFile(filename)}} />\n              </ListItem>)\n            }\n          </List>\n        </div>\n      );\n  }\n  */\n\n  const isFileSystemAccessible = (typeof window['showDirectoryPicker'] === \"function\");\n\n  return (\n    <Dialog open={props.open} onClose={props.onCancel}>\n      <DialogTitle>New Site Map</DialogTitle>\n      <DialogContent className={classes.dialog}>\n        {isFileSystemAccessible ?\n          <>\n            <div>\n              <Button variant=\"contained\" color=\"primary\" onClick={onDirectoryClick}>\n                Select Directory...\n              </Button>\n            </div>\n            <div>\n              <TextField id=\"site-name\" inputRef={site_name} variant=\"outlined\" label=\"Site Name\" />\n            </div>\n          </>\n          :\n          <div>\n            Unfortunately, this browser does not support the File System Access API.\n          </div>\n        }\n      </DialogContent>\n      <DialogActions>\n        <>\n          {isFileSystemAccessible ?\n            <Button onClick={createNewMap} color=\"primary\">\n              OK\n            </Button>\n            : <></>\n          }\n          <Button onClick={props.onCancel} color=\"primary\">\n            Cancel\n          </Button>\n        </>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useRef } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\n\nimport { useStore, RobotTelemetry } from './Store';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport mqtt from 'mqtt';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  dialog: {\n    backgroundColor: theme.palette.background.paper,\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\ntype MqttDialogProps = {\n  open: boolean;\n  close: () => void;\n};\n\nexport default function NewDialog(props: MqttDialogProps): JSX.Element {\n  const classes = useStyles(props);\n  const broker_host = useRef<HTMLInputElement>();\n  const broker_port = useRef<HTMLInputElement>();\n\n  const onOK = () => {\n    // todo: use host/port strings\n    const client = mqtt.connect(\"ws://localhost:9001\");\n    client.on('connect', () => {\n      console.log('MQTT connected!');\n      client.subscribe('/robots/#');\n    });\n    client.on('message', (topic, payload, packet) => {\n      //if (top\n      console.log('topic: ' + topic + '   payload: ' + payload);\n      const topic_tokens = topic.split('/');\n      if (topic_tokens.length === 4 &&\n        topic_tokens[1] === \"robots\" &&\n        topic_tokens[3] === \"state\") {\n        const robot_name = topic_tokens[2];\n        console.log('robot name: ' + robot_name);\n        let telemetry_payload = {};\n        try {\n          telemetry_payload = JSON.parse(payload.toString());\n        }\n        catch (e) {\n          console.log('unable to parse: ' + payload.toString());\n        }\n        if ('latitude' in telemetry_payload &&\n          'longitude' in telemetry_payload) {\n\n          // a bit of trig to convert lat/lon to web mercator\n          // the extra 1000 scale is needed to make the drag-threshold\n          // detection work nicely in OrbitControls\n          const lat_webm = 256000 * (telemetry_payload['longitude'] + 180) / 360;\n          const lat_radians = telemetry_payload['latitude'] * Math.PI / 180;\n          const lon_webm = -(128000 - 256000 * Math.log(Math.tan(Math.PI / 4 + lat_radians / 2)) / (2 * Math.PI));\n          console.log(`telemetry: (${telemetry_payload['latitude']}, ${telemetry_payload['longitude']}) -> (${lat_webm}, ${lon_webm})`);\n\n          // deal with heading\n          let heading = 0;\n          if ('heading' in telemetry_payload) {\n            heading = telemetry_payload['heading'];  // todo: radians?\n          }\n\n          let robots = useStore.getState().mqtt_robot_telemetry;\n          let found_robot = false;\n          robots = robots.map(robot => {\n            if (robot.name === robot_name) {\n              let updated_robot: RobotTelemetry = {\n                name: robot.name,\n                x: lat_webm,\n                y: lon_webm,\n                z: 0,\n                heading: heading,\n              };\n              found_robot = true;\n              return updated_robot;\n            }\n            else {\n              return robot;\n            }\n          });\n          if (!found_robot) {\n            const robot_telemetry = {\n              name: robot_name,\n              x: lat_webm,\n              y: lon_webm,\n              z: 0,\n              heading: heading,\n            };\n            robots = [...robots, robot_telemetry];\n          }\n          useStore.setState({ mqtt_robot_telemetry: robots });\n        }\n      }\n    });\n    useStore.setState({ mqtt_client: client });\n    props.close();\n  }\n  /*\n  useStore.setState({\n    site: site,\n    selection: null,\n    cameraInitialPose: cameraInitialPose,\n  });\n  props.close();\n  */\n\n  return (\n    <Dialog open={props.open} onClose={props.close}>\n      <DialogTitle>MQTT Connection</DialogTitle>\n      <DialogContent className={classes.dialog}>\n        <div>\n          <TextField\n            id=\"broker-host\"\n            inputRef={broker_host}\n            variant=\"outlined\"\n            label=\"Broker Host\"\n            defaultValue=\"localhost\" />\n        </div>\n        <div>\n          <TextField\n            id=\"broker-port\"\n            inputRef={broker_port}\n            type=\"number\"\n            variant=\"outlined\"\n            label=\"Broker Port\"\n            defaultValue=\"9001\" />\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onOK} color=\"primary\">\n          OK\n        </Button>\n        <Button onClick={props.close} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useCallback } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport { useStore, setEditorMode, clearSelection, setActiveTool } from './Store';\nimport { ToolID } from './ToolID';\nimport { Site } from './Site';\nimport OpenDialog from './OpenDialog';\nimport NewDialog from './NewDialog';\nimport MqttDialog from './MqttDialog';\nimport { YAMLRetriever, YAMLRetrieveDemo, YAMLSender } from './YAMLParser';\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\nimport PanToolIcon from '@material-ui/icons/PanTool';\nimport RouterIcon from '@material-ui/icons/Router';\n\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DirectionsCarIcon from '@material-ui/icons/DirectionsCar';\nimport TextureIcon from '@material-ui/icons/Texture';\n\nimport * as THREE from 'three';\n\nconst StyledToggleButtonGroup = withStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(0.5),\n    marginRight: 5\n  },\n  grouped: {\n    //marginRight: theme.spacing(0.5),\n    //marginLeft: theme.spacing(0.5),\n    //margin: theme.spacing(0.5),\n    color: theme.palette.primary.contrastText,\n    //background: theme.palette.primary.dark,\n    \"&.Mui-selected:hover, &:hover\": {\n      background: theme.palette.primary.dark,\n    },\n    \"&.Mui-selected\": {\n      background: theme.palette.primary.dark,\n      color: theme.palette.primary.contrastText\n    },\n    /*\n    '&:not(:first-child)': {\n      borderRadius: '5px',\n    },\n    '&:first-child': {\n      borderRadius: '5px',\n    },\n    */\n  },\n}))(ToggleButtonGroup);\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  appTitle: {\n    marginRight: 20\n  },\n  filler: {\n    flex: 1\n  }\n}));\n\nexport default function MainMenu(props: React.PropsWithChildren<{}>): JSX.Element {\n  const classes = useStyles(props);\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState(null);\n  const [isOpenDialogOpen, setIsOpenDialogOpen] = React.useState(false);\n  const [isNewDialogOpen, setIsNewDialogOpen] = React.useState(false);\n  const [isMqttDialogOpen, setIsMqttDialogOpen] = React.useState(false);\n  const [snackOpen, setSnackOpen] = React.useState(false);\n  const [snackMessage, setSnackMessage] = React.useState('');\n  const [mapType, setMapType] = React.useState('');\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const activeTool = useStore(state => state.activeTool);\n  const disableEditorTools = useStore(state => state.disableEditorTools);\n\n  const onModeChange = (event: React.MouseEvent<HTMLElement>, newMode: string | null) => {\n    if (newMode !== null) {\n      if (editorMode === '2d') {\n        /*\n        const x = store.cameraPose.position.x;\n        const y = store.cameraPose.position.y;\n        console.log(`previous 2d center point: ${x}, ${y}`);\n         */\n        setStore(state => {\n          state.cameraInitialPose = {\n            position: new THREE.Vector3(state.cameraPose.position.x + 2, state.cameraPose.position.y - 2, 10),\n            target: new THREE.Vector3(state.cameraPose.position.x, state.cameraPose.position.y, 0),\n            zoom: 20,\n          };\n        });\n      }\n      setEditorMode(setStore, newMode);\n      clearSelection(setStore);\n    }\n  };\n\n  const onToolChange = (event: React.MouseEvent<HTMLElement>, newTool: ToolID | null) => {\n    if (newTool !== null) {\n      setActiveTool(newTool);\n      clearSelection(setStore);\n    }\n  }\n\n  const save = useCallback(\n    async () => {\n      if (mapType === 'local_file') {\n        //setSnackMessage('Cannot save. Local file save not yet implemented.');\n        //setSnackOpen(true);\n        useStore.getState().site.save();\n      }\n      else if (mapType === 'local_rest') {\n        try {\n          await YAMLSender('http://localhost:8000/map_file');\n        } catch (error) {\n          setSnackMessage('Error while saving to local REST server');\n          setSnackOpen(true);\n        }\n      }\n      else if (mapType === 'demo') {\n        setSnackMessage('Cannot save. Demo maps are read-only.');\n        setSnackOpen(true);\n      }\n      else {\n        setSnackMessage('Cannot save. No map loaded.');\n        setSnackOpen(true);\n      }\n    },\n    [mapType]\n  );\n\n  const snackClose = () => {\n    setSnackOpen(false);\n  }\n\n  React.useEffect(() => {\n    if (disableEditorTools)\n      return;\n\n    const keyDown = (event: KeyboardEvent) => {\n      let key = event.key.toLowerCase();\n      if (key === 'm') {\n        setActiveTool(ToolID.MOVE);\n        clearSelection(setStore);\n      } else if (key === 'escape') {\n        setActiveTool(ToolID.SELECT);\n        clearSelection(setStore);\n      } else if (key === 'v') {\n        setActiveTool(ToolID.ADD_VERTEX);\n        clearSelection(setStore);\n      } else if (key === 'l') {\n        setActiveTool(ToolID.ADD_LANE);\n        clearSelection(setStore);\n      } else if (key === 's' && event.ctrlKey) {\n        event.preventDefault();\n        save();\n        return false;\n      }\n    };\n\n    window.addEventListener('keydown', keyDown);\n    return () => {\n      window.removeEventListener('keydown', keyDown);\n    };\n  }, [setStore, save, disableEditorTools]);\n\n  React.useEffect(() => {\n    setStore(state => {\n      state.enableMotionControls = (activeTool === ToolID.SELECT);\n    });\n  }, [activeTool, setStore]);\n\n  return (\n    <AppBar position=\"fixed\">\n      <ToolBar>\n        <IconButton\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"Menu\"\n          onClick={(e: any) => { setMenuAnchorEl(e.currentTarget); }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          keepMounted\n          anchorEl={menuAnchorEl}\n          open={Boolean(menuAnchorEl)}\n          onClose={() => setMenuAnchorEl(null)}\n          getContentAnchorEl={null}\n          anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\n          transformOrigin={{vertical: 'top', horizontal: 'center'}}\n          transitionDuration={0.0}\n        >\n          <MenuItem\n            onClick={() => {\n              setIsNewDialogOpen(true);\n              setMapType('local_file');\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <InsertDriveFileIcon />\n            </ListItemIcon>\n            <ListItemText>\n              New site map...\n            </ListItemText>\n          </MenuItem>\n\n          <MenuItem\n            onClick={() => {\n              const site = Site.fromNewCommand();\n              const cameraInitialPose = site.computeInitialCameraPose();\n              useStore.setState({\n                site: site,\n                selection: null,\n                cameraInitialPose: cameraInitialPose,\n              });\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <InsertDriveFileIcon />\n            </ListItemIcon>\n            <ListItemText>\n              New geo-located site\n            </ListItemText>\n          </MenuItem>\n          <Divider />\n          <MenuItem\n            onClick={async () => {\n              try {\n                await YAMLRetriever('http://localhost:8000/', 'map_file');\n                setMapType('local_rest');\n              } catch (error) {\n                setSnackMessage('could not open file from localhost:8000');\n                setSnackOpen(true);\n              }\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open map from localhost:8000\n            </ListItemText>\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              await YAMLRetrieveDemo('office');\n              setMapType('demo');\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open demo map\n            </ListItemText>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              setIsOpenDialogOpen(true);\n              setMapType('local_file');\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open map from local file...\n            </ListItemText>\n          </MenuItem>\n          <Divider />\n          <MenuItem\n            onClick={() => {\n              save();\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <SaveIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Save\n            </ListItemText>\n          </MenuItem>\n          <Divider />\n          <MenuItem\n            onClick={() => {\n              setIsMqttDialogOpen(true);\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <RouterIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Connect MQTT...\n            </ListItemText>\n          </MenuItem>\n        </Menu>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.appTitle}>\n          Traffic Editor\n        </Typography>\n        <div className={classes.filler} />\n        <StyledToggleButtonGroup\n          value={activeTool}\n          size=\"small\"\n          exclusive\n          onChange={onToolChange}\n          aria-label=\"tool\"\n        >\n          <ToggleButton value={ToolID.SELECT}>\n            <Tooltip title=\"Select tool [Escape]\">\n              <PanToolIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={ToolID.MOVE} disabled={disableEditorTools}>\n            <Tooltip title=\"Move tool [M]\">\n              <OpenWithIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={ToolID.ADD_VERTEX} disabled={disableEditorTools}>\n            <Tooltip title=\"Add vertex [V]\">\n              <AddCircleIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={ToolID.ADD_LANE} disabled={disableEditorTools}>\n            <Tooltip title=\"Add lane [L]\">\n              <DirectionsCarIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={ToolID.ADD_WALL} disabled={disableEditorTools}>\n            <Tooltip title=\"Add wall [W]\">\n              <TextureIcon />\n            </Tooltip>\n          </ToggleButton>\n        </StyledToggleButtonGroup>\n        <StyledToggleButtonGroup\n          value={editorMode}\n          size=\"small\"\n          exclusive\n          onChange={onModeChange}\n          aria-label=\"editor mode\"\n        >\n          <ToggleButton value=\"3d\">\n            3D\n          </ToggleButton>\n          <ToggleButton value=\"2d\">\n            2D\n          </ToggleButton>\n        </StyledToggleButtonGroup>\n      </ToolBar>\n      <NewDialog\n        open={isNewDialogOpen}\n        onNew={() => {}}\n        onCancel={() => setIsNewDialogOpen(false)}\n        close={() => setIsNewDialogOpen(false)}\n      />\n      <OpenDialog\n        open={isOpenDialogOpen}\n        onOpen={() => setIsOpenDialogOpen(false)}\n        onCancel={() => setIsOpenDialogOpen(false)}\n      />\n      <MqttDialog\n        open={isMqttDialogOpen}\n        close={() => setIsMqttDialogOpen(false)}\n      />\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        open={snackOpen}\n        onClose={snackClose}\n        autoHideDuration={2000}\n        transitionDuration={0}\n        TransitionProps={{\n          appear: false,\n        }}\n        action={\n          <React.Fragment>\n            <IconButton onClick={snackClose}>\n              <CloseIcon />\n            </IconButton>\n          </React.Fragment>\n        }\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={snackClose}>\n          {snackMessage}\n        </MuiAlert>\n      </Snackbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport { SiteTreeView } from './SiteTreeView';\nimport { EditorScene } from './EditorScene';\nimport PropertyEditor from './PropertyEditor';\nimport MainMenu from './MainMenu';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    minHeight: '100vh',\n  },\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar,\n  workingArea: {\n    backgroundColor: \"black\",\n    height: `calc(100vh - 64px)`,\n  },\n  gridLeftColumn: {\n    borderRight: '5px',\n    borderRightStyle: 'solid',\n    borderRightColor: theme.palette.primary.main,\n  },\n  propertyGridItem: {\n    borderTop: '5px',\n    borderTopStyle: 'solid',\n    borderTopColor: theme.palette.primary.main,\n  }\n}));\n\nexport default function App(props: React.PropsWithChildren<{}>): JSX.Element {\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes.root}>\n      <MainMenu />\n      <div className={classes.toolbarMargin} />\n      <Grid container spacing={0}>\n        <Grid className={classes.gridLeftColumn} container xs={3} direction=\"column\" spacing={0}>\n          <Grid item style={{height: '40vh', overflow: 'auto'}}>\n            <SiteTreeView />\n          </Grid>\n          <Grid item className={classes.propertyGridItem} style={{height: '40vh', overflow: 'auto'}}>\n            <PropertyEditor />\n          </Grid>\n        </Grid>\n        <Grid item xs={9} className={classes.workingArea}>\n          <EditorScene />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}