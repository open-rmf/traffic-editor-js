{"version":3,"sources":["EditorStore.ts","EditorParam.ts","EditorObject.ts","Level.ts","Building.ts","BuildingSummary.tsx","SceneDoor.tsx","SceneFloor.tsx","SceneLane.tsx","SceneImage.tsx","SceneMeasurement.tsx","SceneModel.tsx","SceneVertex.tsx","SceneWall.tsx","SceneLevel.tsx","SceneBuilding.tsx","EditorScene.tsx","PropertyEditor.tsx","YAMLParser.ts","OpenDialog.tsx","MainMenu.tsx","App.tsx","index.tsx"],"names":["EditorToolID","EditorParam","type_idx","name","value","uuid","_name","data","p","generate_uuid","EditorObject","params","params_yaml","param_name","this","push","fromYAML","node","YAML","YAMLMap","param","param_value_node","YAMLSeq","add","flow","key","Level","elevation","scale","doors","vertices","walls","measurements","floors","lanes","models","images","features","constraints","map","constraint","toYAML","door","length","isLegacyDefaultImage","filename","feature","floor","lane","layers_node","image","toLayerYAML","measurement","model","vertex","wall","sum","count","meas","dx","start_idx","x","end_idx","dy","y","d_pixels","Math","sqrt","distance","level","EditorImage","layer_name","EditorConstraint","EditorDoor","EditorFeature","EditorFloor","fromLayerYAML","EditorLane","EditorModel","EditorMeasurement","EditorVertex","EditorWall","calculateScale","Building","url_base","levels","reference_level_name","yaml_doc","Document","levels_node","get","lifts_node","toString","lineWidth","minContentWidth","vec_min","THREE","Infinity","vec_max","bb","computeBoundingBox","target","min","max","position","z","yaml_text","yaml","parse","building","level_name","level_data","parseDocument","paramsToYAML","paramsFromYAML","vertex_indices","vertices_node","vertex_index","vertex_idx","offset","yaw","color","visible","blob","Blob","color_node","transform_node","_blob","console","log","size","feature_yaml","ids","model_name","instance_name","is_static","useStore","create","set","selection","editorMode","enableMotionControls","activeTool","SELECT","repaintCount","cameraInitialPose","fn","produce","setSelection","setStore","newSelection","state","clearSelection","setActiveTool","newTool","updateVertexPoint","level_uuid","vertex_uuid","updateModelPoint","model_uuid","FeatureTreeItem","props","TreeItem","nodeId","label","onClick","event","ModelTreeItem","ConstraintTreeItem","substring","ParamTreeItem","DoorTreeItem","ImageTreeItem","FloorTreeItem","idx","join","WallTreeItem","MeasurementTreeItem","LaneTreeItem","VertexTreeItem","LevelTreeItem","BuildingSummary","style","margin","TreeView","defaultCollapseIcon","defaultExpandIcon","SceneDoor","v1","vertex_start","v2","vertex_end","cx","cy","len","xyrot","atan2","React","useMemo","setRGB","rotation","stopPropagation","args","SceneFloor","shape","started","v","lineTo","moveTo","v0","SceneLane","SceneImage","useLoader","TextureLoader","texture","width_meters","height_meters","magFilter","minFilter","width","height","SceneMeasurement","SceneModel","isMoveToolActive","MOVE","useState","dragActive","setDragActive","PI","onPointerDown","setPointerCapture","pointerId","onPointerUp","releasePointerCapture","onPointerMove","px","unprojectedPoint","py","intersection_point","ray","intersectPlane","SceneVertex","Text","SceneWall","SceneLevel","filter","SceneBuilding","EditorScene","Controls","DefaultUp","perspective_camera","useRef","orthographic_camera","PerspectiveCamera","ref","fov","makeDefault","OrthographicCamera","zoom","OrbitControls","enableDamping","screenSpacePanning","camera","current","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","mouseButtons","LEFT","MIDDLE","PAN","RIGHT","ROTATE","touches","ONE","TWO","enabled","frameloop","onPointerMissed","fallback","useStyles","makeStyles","theme","noSelectionDiv","table","padding","tableHead","tableHeadRow","borderBottomStyle","borderBottom","borderBottomColor","palette","primary","main","tableHeadCell","fontWeight","paddingLeft","tableCell","PropertyEditor","classes","className","rows","TableRow","TableCell","Table","TableHead","TableBody","YAMLParser","computeInitialCameraPose","setState","YAMLRetriever","resource_name","a","fetch","then","response","text","YAMLRetrieveDemo","process","YAMLSender","url","Object","getPrototypeOf","maxFlowStringSingleLineLength","getState","toYAMLString","yaml_size","method","headers","body","directoryButton","fontSize","typography","h5","textDecoration","dialog","backgroundColor","background","paper","OpenDialog","buildingFileNames","setBuildingFileNames","directoryHandle","setDirectoryHandle","onDirectoryClick","window","showDirectoryPicker","handle","entry","endsWith","previous","values","loadFile","getFileHandle","fileHandle","getFile","file","onOpen","Dialog","open","onClose","onCancel","DialogTitle","DialogContent","Button","variant","List","subheader","ListSubheader","component","ListItem","button","ListItemIcon","ListItemText","e","buildingFileList","DialogActions","StyledToggleButtonGroup","withStyles","root","light","spacing","marginRight","grouped","contrastText","dark","ToggleButtonGroup","flex","menuButton","marginLeft","appTitle","filler","MainMenu","menuAnchorEl","setMenuAnchorEl","isOpenDialogOpen","setIsOpenDialogOpen","snackOpen","setSnackOpen","snackMessage","setSnackMessage","mapType","setMapType","save","useCallback","snackClose","useEffect","keyDown","toLowerCase","ctrlKey","preventDefault","addEventListener","removeEventListener","AppBar","IconButton","aria-label","currentTarget","keepMounted","anchorEl","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","transitionDuration","MenuItem","Divider","Typography","exclusive","onChange","ToggleButton","Tooltip","title","newMode","setEditorMode","Snackbar","autoHideDuration","TransitionProps","appear","action","Fragment","severity","flexGrow","minHeight","toolbarMargin","mixins","toolbar","workingArea","gridLeftColumn","borderRight","borderRightStyle","borderRightColor","propertyGridItem","borderTop","borderTopStyle","borderTopColor","App","Grid","container","xs","direction","item","overflow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0825131.chunk.js","sourcesContent":["import create from 'zustand';\nimport produce from 'immer';\nimport * as THREE from 'three';\nimport { v4 as generate_uuid } from 'uuid';\nimport YAML from 'yaml';\n//import { EditorParam } from './EditorParam'\nimport { EditorObject } from './EditorObject';\nimport { Building } from './Building';\n\nexport class EditorVertex extends EditorObject {\n  x: number = 0;\n  y: number = 0;\n  name: string = '';\n\n  static fromYAML(data: any): EditorVertex {\n    let vertex = new EditorVertex();\n    vertex.uuid = generate_uuid();\n    vertex.x = data[0];\n    vertex.y = -data[1];\n    vertex.name = data[3];\n    vertex.paramsFromYAML(data[4]);\n\n    return vertex;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.x);\n    node.add(-this.y);\n    node.add(0.0);\n    node.add(this.name);\n    if (this.params.length)\n      node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorWall extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorWall {\n    let wall = new EditorWall();\n    wall.uuid = generate_uuid();\n    wall.paramsFromYAML(data[2]);\n    wall.start_idx = data[0];\n    wall.end_idx = data[1];\n    return wall;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorMeasurement extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n  distance: number = 1;\n\n  static fromYAML(data: any): EditorMeasurement {\n    let measurement = new EditorMeasurement();\n    measurement.uuid = generate_uuid();\n    measurement.start_idx = data[0];\n    measurement.end_idx = data[1];\n    measurement.distance = data[2]['distance'][1];\n    return measurement;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    let params_yaml = this.paramsToYAML();\n    params_yaml.add({ key: 'distance', value: [3, this.distance] });\n    node.add(params_yaml);\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorLane extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorLane {\n    let lane = new EditorLane();\n    lane.uuid = generate_uuid();\n    lane.paramsFromYAML(data[2]);\n    lane.start_idx = data[0];\n    lane.end_idx = data[1];\n    return lane;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorDoor extends EditorObject {\n  start_idx: number = -1;\n  end_idx: number = -1;\n\n  static fromYAML(data: any): EditorDoor {\n    let door = new EditorDoor();\n    door.uuid = generate_uuid();\n    door.paramsFromYAML(data[2]);\n    door.start_idx = data[0];\n    door.end_idx = data[1];\n    return door;\n  }\n\n  toYAML(): YAML.YAMLSeq {\n    let node = new YAML.YAMLSeq();\n    node.add(this.start_idx);\n    node.add(this.end_idx);\n    node.add(this.paramsToYAML());\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorFloor extends EditorObject {\n  vertex_indices: number[] = [];\n\n  static fromYAML(data: any): EditorFloor {\n    let floor = new EditorFloor();\n    floor.uuid = generate_uuid();\n    floor.paramsFromYAML(data['parameters']);\n    floor.vertex_indices = data['vertices'].map((vertex_idx: number) => vertex_idx);\n    return floor;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'parameters', value: this.paramsToYAML() });\n\n    let vertices_node = new YAML.YAMLSeq();\n    for (const vertex_index of this.vertex_indices) {\n      vertices_node.add(vertex_index);\n    }\n    vertices_node.flow = true;\n    node.add({ key: 'vertices', value: vertices_node });\n    return node;\n  }\n}\n\nexport class EditorImage extends EditorObject {\n  name: string = '';\n  filename: string = '';\n  offset: THREE.Vector3 = new THREE.Vector3(0, 0, 0);\n  yaw: number = 0;\n  scale: number = 1;\n  isLegacyDefaultImage: boolean = false;\n  color: number[] = [1, 1, 1, 1];\n  visible: boolean = true;\n  features: EditorFeature[] = [];\n  blob: Blob = new Blob([]);\n\n  static fromLayerYAML(layer_name: string, data: any): EditorImage {\n    //console.log(data);\n    let image = new EditorImage();\n    image.uuid = generate_uuid();\n    image.name = layer_name;\n    image.filename = data['filename'];\n    image.color = data['color'];\n    image.offset.x = data['transform']['translation_x'];\n    image.offset.y = data['transform']['translation_y'];\n    image.scale = data['transform']['scale'];\n    image.yaw = data['transform']['yaw'];\n    image.isLegacyDefaultImage = false;\n    image.visible = data['visible'];\n    image.features = data['features'].map((feature_yaml: any) => EditorFeature.fromYAML(feature_yaml));\n    return image;\n  }\n\n  toLayerYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    let color_node = new YAML.YAMLSeq();\n    color_node.add(this.color[0]);\n    color_node.add(this.color[1]);\n    color_node.add(this.color[2]);\n    color_node.add(this.color[3]);\n    color_node.flow = true;\n    node.add({ key: 'color', value: color_node });\n    node.add({ key: 'features', value: this.features.map(feature => feature.toYAML()) });\n    node.add({ key: 'filename', value: this.filename });\n    let transform_node = new YAML.YAMLMap();\n    transform_node.add({ key: 'scale', value: this.scale });\n    transform_node.add({ key: 'translation_x', value: this.offset.x });\n    transform_node.add({ key: 'translation_y', value: this.offset.y });\n    transform_node.add({ key: 'yaw', value: this.yaw });\n    node.add({ key: 'transform', value: transform_node });\n    node.add({ key: 'visible', value: this.visible });\n    return node;\n  }\n\n  loadBlob(_blob: Blob): void {\n    this.blob = _blob;\n    console.log(`image ${this.filename} retrieved ${this.blob.size} bytes`);\n  }\n}\n\nexport class EditorConstraint extends EditorObject {\n  ids: string[] = [];\n\n  static fromYAML(data: any): EditorConstraint {\n    let constraint = new EditorConstraint();\n    constraint.uuid = generate_uuid();\n    constraint.ids = [ data['ids'][0], data['ids'][1] ];\n    return constraint;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'ids', value: this.ids });\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorFeature extends EditorObject {\n  name: string = '';\n  x: number = 0;\n  y: number = 0;\n\n  static fromYAML(data: any): EditorFeature {\n    let feature = new EditorFeature();\n    feature.uuid = data['id'];\n    feature.name = data['name'];\n    feature.x = data['x'];\n    feature.y = data['y'];\n    return feature;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'id', value: this.uuid });\n    node.add({ key: 'name', value: this.name });\n    node.add({ key: 'x', value: this.x });\n    node.add({ key: 'y', value: this.y });\n    node.flow = true;\n    return node;\n  }\n}\n\nexport class EditorModel extends EditorObject {\n  model_name: string = '';\n  instance_name: string = '';\n  is_static: boolean = true;\n  x: number = 0;\n  y: number = 0;\n  z: number = 0;\n  yaw: number = 0;\n\n  static fromYAML(data: any): EditorModel {\n    let model = new EditorModel();\n    model.uuid = generate_uuid();\n    model.model_name = data['model_name'];\n    model.instance_name = data['name'];\n    model.is_static = data['static'];\n    model.x = data['x'];\n    model.y = -data['y'];\n    model.yaw = data['yaw'];\n    model.z = data['z'];\n    return model;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    node.add({ key: 'model_name', value: this.model_name });\n    node.add({ key: 'name', value: this.instance_name });\n    node.add({ key: 'static', value: this.is_static });\n    node.add({ key: 'x', value: this.x });\n    node.add({ key: 'y', value: -this.y });\n    node.add({ key: 'yaw', value: this.yaw });\n    node.add({ key: 'z', value: this.z });\n    node.flow = true;\n    return node;\n  }\n}\n\nexport enum EditorToolID {\n  SELECT,\n  MOVE,\n}\n\nexport interface CameraPose {\n  position: THREE.Vector3,\n  target: THREE.Vector3\n}\n\nexport interface EditorStoreState {\n  building: Building,\n  selection: EditorObject | null,\n  editorMode: string,\n  enableMotionControls: boolean,\n  activeTool: EditorToolID,\n  cameraInitialPose: CameraPose,\n  repaintCount: number,\n  set: (fn: (draftState: EditorStoreState) => void) => void\n}\n/*\n\n  setSelection: (newSelection: EditorObject) => void,\n  clearSelection: () => void,\n  setEditorMode: (newEditorMode: string) => void,\n\n  setEnableMotionControls: (newEnableMotionControls: boolean) => void,\n\n  setActiveTool: (newActiveTool: EditorToolID) => void,\n\n  //updateVertexPoint: (level_uuid: string, vertex_uuid: string, x: number, y:number) => void,\n}\n*/\n\nexport const useStore = create<EditorStoreState>(set => ({\n  building: new Building(),\n  selection: null,\n  editorMode: '2d',\n  enableMotionControls: true,\n  activeTool: EditorToolID.SELECT,\n  repaintCount: 0,\n  cameraInitialPose: {\n    position: new THREE.Vector3(0, 0, 5),\n    target: new THREE.Vector3(0, 0, 0),\n  },\n  set: fn => set(produce(fn)),\n}));\n\ntype StoreSetter = (fn: (draftState: EditorStoreState) => void) => void;\n\nexport function setSelection(setStore: StoreSetter, newSelection: EditorObject) {\n  setStore(state => {\n    state.selection = newSelection;\n  });\n}\n\nexport function clearSelection(setStore: StoreSetter) {\n  setStore(state => {\n    state.selection = null;\n  });\n}\n\nexport function setEditorMode(setStore: StoreSetter, newMode: string) {\n  setStore(state => {\n    state.editorMode = newMode;\n  });\n}\n\nexport function setActiveTool(setStore: StoreSetter, newTool: EditorToolID) {\n  setStore(state => {\n    state.activeTool = newTool;\n  });\n}\n\nexport function updateVertexPoint(\n  setStore: StoreSetter,\n  level_uuid: string,\n  vertex_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.building.levels.map(level => {\n      if (level.uuid === level_uuid) {\n        level.vertices.map(vertex => {\n          if (vertex.uuid === vertex_uuid) {\n            vertex.x = x;\n            vertex.y = y;\n          }\n          return vertex;\n        })\n      }\n      return level;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n\nexport function updateModelPoint(\n  setStore: StoreSetter,\n  level_uuid: string,\n  model_uuid: string,\n  x: number,\n  y: number) {\n  setStore(state => {\n    state.building.levels.map(level => {\n      if (level.uuid === level_uuid) {\n        level.models.map(model => {\n          if (model.uuid === model_uuid) {\n            model.x = x;\n            model.y = y;\n          }\n          return model;\n        })\n      }\n      return level;\n    });\n    state.repaintCount = state.repaintCount + 1;\n  });\n}\n/*\n  const setStoreState = useStore(state => state.set);\n  const setSelection = useStore(state => state.setSelection);\n*/\n\n/*\n  setSelection: (newSelection: EditorObject) => set(state => ({ selection: newSelection })),\n  clearSelection: () => set(state => ({ selection: null })),\n\n  setEditorMode: (newEditorMode: string) => set(state => ({ editorMode: newEditorMode })),\n\n  setEnableMotionControls: (newEnableMotionControls: boolean) => set(state => ({ enableMotionControls: newEnableMotionControls })),\n\n  setActiveTool: (newActiveTool: EditorToolID) => set(state => ({ activeTool: newActiveTool })),\n\n  //updateVertexPoint: (level_uuid: string, vertex_uuid: string, x: number, y:number) => set(state => {\n}))\n*/\n","//import YAML from 'yaml'\nimport { v4 as generate_uuid } from 'uuid'\n\nexport class EditorParam {\n  type_idx: number = 0;\n  name: string = '';\n  value: any = 0;\n  uuid: string = '';\n\n  static fromYAML(_name: string, data: any): EditorParam {\n    let p = new EditorParam();\n    p.name = _name;\n    p.type_idx = data[0];\n    p.value = data[1];\n    p.uuid = generate_uuid();\n    return p;\n  }\n}\n","import YAML from 'yaml'\nimport { EditorParam } from './EditorParam';\n\nexport class EditorObject {\n  uuid: string = '';\n  params: EditorParam[] = [];\n\n  paramsFromYAML(params_yaml: any): void {\n    for (const param_name in params_yaml) {\n      this.params.push(EditorParam.fromYAML(param_name, params_yaml[param_name]));\n    }\n  }\n\n  paramsToYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n    for (const param of this.params) {\n      let param_value_node = new YAML.YAMLSeq();\n      param_value_node.add(param.type_idx);\n      param_value_node.add(param.value);\n      param_value_node.flow = true;\n      node.add({ key: param.name, value: param_value_node });\n    }\n    node.flow = true;\n    return node;\n  }\n}\n\n\n","import YAML from 'yaml';\nimport { v4 as generate_uuid } from 'uuid';\nimport { EditorObject } from './EditorObject';\n//import { EditorParam } from './EditorParam';\nimport {\n  EditorDoor,\n  EditorVertex,\n  EditorWall,\n  EditorMeasurement,\n  EditorFloor,\n  EditorImage,\n  EditorLane,\n  EditorModel,\n  EditorFeature,\n  EditorConstraint } from './EditorStore';\n\nexport class Level extends EditorObject {\n  name: string = '';\n  elevation: number = 0;\n  scale: number = 1.234;\n  doors: EditorDoor[] = [];\n  vertices: EditorVertex[] = [];\n  walls: EditorWall[] = [];\n  measurements: EditorMeasurement[] = [];\n  floors: EditorFloor[] = [];\n  lanes: EditorLane[] = [];\n  models: EditorModel[] = [];\n  images: EditorImage[] = [];\n  features: EditorFeature[] = [];\n  constraints: EditorConstraint[] = [];\n\n  static fromYAML(_name: string, data: any): Level {\n    let level = new Level();\n    level.uuid = generate_uuid();\n    level.name = _name;\n\n    if (data['drawing'] && data['drawing']['filename']) {\n      let image = new EditorImage();\n      image.uuid = generate_uuid();\n      image.filename = data['drawing']['filename'];\n      image.isLegacyDefaultImage = true;\n      level.images.push(image);\n    }\n\n    level.elevation = data['elevation'];\n    level.constraints = data['constraints'].map((constraint: any) => EditorConstraint.fromYAML(constraint));\n    level.doors = data['doors'].map((door: any) => EditorDoor.fromYAML(door));\n    level.features = data['features'].map((feature: any) => EditorFeature.fromYAML(feature));\n    level.floors = data['floors'].map((floor: any) => EditorFloor.fromYAML(floor));\n    for (const layer_name in data['layers']) {\n      level.images.push(EditorImage.fromLayerYAML(layer_name, data['layers'][layer_name]));\n    }\n    level.lanes = data['lanes'].map((lane: any) => EditorLane.fromYAML(lane));\n    level.models = data['models'].map((model: any) => EditorModel.fromYAML(model));\n    level.measurements = data['measurements'].map((measurement: any) => EditorMeasurement.fromYAML(measurement));\n    level.vertices = data['vertices'].map((vertex: any) => EditorVertex.fromYAML(vertex));\n    level.walls = data['walls'].map((wall: any) => EditorWall.fromYAML(wall));\n\n    level.calculateScale();\n\n    return level;\n  }\n\n  toYAML(): YAML.YAMLMap {\n    let node = new YAML.YAMLMap();\n\n    node.add({ key: 'constraints', value: this.constraints.map(constraint => constraint.toYAML()) });\n    node.add({ key: 'doors', value: this.doors.map(door => door.toYAML()) });\n\n    if (this.images.length > 0 && this.images[0].isLegacyDefaultImage) {\n      node.add({ key: 'drawing', value: { 'filename': this.images[0].filename } });\n    }\n\n    node.add({ key: 'elevation', value: this.elevation });\n    node.add({ key: 'features', value: this.features.map(feature => feature.toYAML()) });\n    node.add({ key: 'flattened_x_offset', value: 0 });\n    node.add({ key: 'flattened_y_offset', value: 0 });\n    node.add({ key: 'floors', value: this.floors.map(floor => floor.toYAML()) });\n    node.add({ key: 'lanes', value: this.lanes.map(lane => lane.toYAML()) });\n\n    let layers_node = new YAML.YAMLMap();\n    for (const image of this.images) {\n      if (!image.isLegacyDefaultImage) {\n        layers_node.add({ key: image.name, value: image.toLayerYAML() });\n      }\n    }\n    node.add({ key: 'layers', value: layers_node });\n    node.add({ key: 'measurements', value: this.measurements.map(measurement => measurement.toYAML()) });\n    node.add({ key: 'models', value: this.models.map(model => model.toYAML()) });\n    node.add({ key: 'vertices', value: this.vertices.map(vertex => vertex.toYAML()) });\n    node.add({ key: 'walls', value: this.walls.map(wall => wall.toYAML()) });\n    return node;\n  }\n\n  calculateScale(): void {\n    let sum = 0.0;\n    let count = 0;\n    for (const meas of this.measurements) {\n      count++;\n      const dx = this.vertices[meas.start_idx].x - this.vertices[meas.end_idx].x;\n      const dy = this.vertices[meas.start_idx].y - this.vertices[meas.end_idx].y;\n      const d_pixels = Math.sqrt(dx*dx + dy*dy);\n      sum += meas.distance / d_pixels;\n    }\n\n    if (count > 0) {\n      this.scale = sum / count;\n    }\n    else {\n      this.scale = 0.05;  // just use something sane...\n    }\n  }\n}\n","import YAML from 'yaml';\nimport * as THREE from 'three';\nimport { v4 as generate_uuid } from 'uuid';\nimport { EditorObject } from './EditorObject';\nimport { CameraPose } from './EditorStore';\nimport { Level } from './Level';\n\nexport class Building extends EditorObject {\n  name: string = '';\n  url_base: string = '';\n  levels: Level[] = [];\n  reference_level_name: string = '';\n  yaml_doc: YAML.Document = new YAML.Document();;\n\n  static fromYAML(yaml_text: string): Building {\n    const yaml = YAML.parse(yaml_text);\n    let building = new Building();\n    building.uuid = generate_uuid();\n    building.name = yaml['name'];\n    for (const level_name in yaml['levels']) {\n      const level_data = yaml['levels'][level_name];\n      building.levels.push(Level.fromYAML(level_name, level_data));\n    }\n    if (yaml['reference_level_name']) {\n      building.reference_level_name = yaml['reference_level_name'];\n    }\n    else {\n      if (building.levels.length > 0) {\n        building.reference_level_name = building.levels[0].name;\n      }\n    }\n    building.yaml_doc = YAML.parseDocument(yaml_text);\n    return building;\n  }\n\n  toYAMLString(): string {\n    let yaml_doc = new YAML.Document(new YAML.YAMLMap());\n    let levels_node = new YAML.YAMLMap();\n    for (const level of this.levels) {\n      levels_node.add({ key: level.name, value: level.toYAML() });\n    }\n    yaml_doc.add({ key: 'crowd_sim', value: this.yaml_doc.get('crowd_sim') });\n    yaml_doc.add({ key: 'levels', value: levels_node });\n\n    let lifts_node = new YAML.YAMLMap();\n    // todo: add lifts to this map node\n    // only use flow style to enforce whitespace similarity for empty maps\n    lifts_node.flow = true;\n\n    yaml_doc.add({ key: 'lifts', value: lifts_node });\n    yaml_doc.add({ key: 'name', value: this.name });\n    return yaml_doc.toString({lineWidth: 0, minContentWidth: 2});\n  }\n\n  computeBoundingBox(): THREE.Box3 {\n    let vec_min = new THREE.Vector3(Infinity, Infinity, Infinity);\n    let vec_max = new THREE.Vector3(-Infinity, -Infinity, -Infinity);\n    for (const level of this.levels) {\n      for (const vertex of level.vertices) {\n        if (vertex.x < vec_min.x)\n          vec_min.x = vertex.x;\n        if (vertex.x > vec_max.x)\n          vec_max.x = vertex.x;\n  \n        if (vertex.y < vec_min.y)\n          vec_min.y = vertex.y;\n        if (vertex.y > vec_max.y)\n          vec_max.y = vertex.y;\n      }\n    }\n    return new THREE.Box3(vec_min, vec_max);\n  }\n\n  computeInitialCameraPose(): CameraPose {\n    const bb: THREE.Box3 = this.computeBoundingBox();\n    const target = new THREE.Vector3(\n      (bb.min.x + bb.max.x) / 2.0 / 50,\n      (bb.min.y + bb.max.y) / 2.0 / 50,\n      0.0);\n    const position = new THREE.Vector3(\n      target.x + 10,\n      target.y - 10,\n      target.z + 10);\n    return {\n      position: position,\n      target: target\n    };\n  }\n}\n","import React from 'react';\nimport {\n  EditorConstraint,\n  EditorDoor,\n  EditorFeature,\n  EditorFloor,\n  EditorImage,\n  EditorLane,\n  EditorMeasurement,\n  EditorModel,\n  EditorVertex,\n  EditorWall,\n  setSelection,\n  useStore,\n} from './EditorStore';\nimport { EditorParam } from './EditorParam';\nimport { Level } from './Level';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nfunction FeatureTreeItem(props: { feature: EditorFeature }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.feature.uuid}\n      key={props.feature.uuid}\n      label={`${props.feature.x}, ${props.feature.y}`}\n      onClick={(event) => {\n        setSelection(setStore, props.feature);\n      }}\n    >\n    </TreeItem>\n  );\n}\n\nfunction ModelTreeItem(props: { model: EditorModel }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.model.uuid}\n      key={props.model.uuid}\n      label={`${props.model.instance_name}`}\n      onClick={(event) => {\n        setSelection(setStore, props.model);\n      }}\n    >\n    </TreeItem>\n  );\n}\n\n\nfunction ConstraintTreeItem(props: { constraint: EditorConstraint }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.constraint.uuid}\n      key={props.constraint.uuid}\n      label={`${props.constraint.ids[0].substring(1, 9)} - ${props.constraint.ids[1].substring(1, 9)}`}\n      onClick={(event) => {\n        setSelection(setStore, props.constraint);\n      }}\n    >\n      {props.constraint.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction DoorTreeItem(props: { door: EditorDoor }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.door.start_idx} => ${props.door.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.door.uuid}\n      key={props.door.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.door);\n      }}\n      label={label} />\n  );\n}\n\nfunction ParamTreeItem(props: { param: EditorParam }): JSX.Element {\n  return (\n    <TreeItem\n      nodeId={props.param.uuid}\n      key={props.param.uuid}\n      label={`${props.param.name} = ${props.param.value}`}\n    />\n  );\n}\n\nfunction ImageTreeItem(props: { image: EditorImage }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  return (\n    <TreeItem\n      nodeId={props.image.uuid}\n      key={props.image.uuid}\n      label={props.image.filename}\n      onClick={(event) => {\n        setSelection(setStore, props.image);\n      }}\n    >\n      {props.image.params.map((param) => <ParamTreeItem param={param} />)}\n      <TreeItem\n        nodeId={`${props.image.uuid}_features`}\n        key={`${props.image.uuid}_features`}\n        label=\"features\"\n      >\n        {props.image.features.map((feature) => <FeatureTreeItem feature={feature} />)}\n      </TreeItem>\n    </TreeItem>\n  );\n}\n\nfunction FloorTreeItem(props: { floor: EditorFloor }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = 'floor (' + props.floor.vertex_indices.map((idx) => idx.toString()).join(', ') + ')';\n  return(\n    <TreeItem\n      nodeId={props.floor.uuid}\n      key={props.floor.uuid}\n      label={label}\n      onClick={(event) => {\n        setSelection(setStore, props.floor);\n      }}\n    >\n      {props.floor.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction WallTreeItem(props: { wall: EditorWall }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.wall.start_idx} => ${props.wall.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.wall.uuid}\n      key={props.wall.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.wall);\n      }}\n      label={label} />\n  );\n}\n\nfunction MeasurementTreeItem(props: { measurement: EditorMeasurement }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.measurement.start_idx}-${props.measurement.end_idx}) = ${props.measurement.distance}`;\n  return(\n    <TreeItem\n      nodeId={props.measurement.uuid}\n      key={props.measurement.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.measurement);\n      }}\n      label={label} />\n  );\n}\n\nfunction LaneTreeItem(props: { lane: EditorLane }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  const label = `(${props.lane.start_idx} => ${props.lane.end_idx})`;\n  return(\n    <TreeItem\n      nodeId={props.lane.uuid}\n      key={props.lane.uuid}\n      label={label}\n      onClick={(event) => {\n        setSelection(setStore, props.lane);\n      }}\n    />\n  );\n}\n\nfunction VertexTreeItem(props: { vertex: EditorVertex }): JSX.Element {\n  const setStore = useStore(state => state.set);\n  let label = \"(\" + props.vertex.x + \", \" + props.vertex.y + \")\";\n  if (props.vertex.name)\n    label = props.vertex.name + ': ' + label;\n  return (\n    <TreeItem\n      nodeId={props.vertex.uuid}\n      key={props.vertex.uuid}\n      onClick={(event) => {\n        setSelection(setStore, props.vertex);\n      }}\n      label={label}>\n      {props.vertex.params.map((param) => <ParamTreeItem param={param} />)}\n    </TreeItem>\n  );\n}\n\nfunction LevelTreeItem(props: { level: Level }): JSX.Element {\n  return (\n    <TreeItem nodeId={props.level.uuid} key={props.level.uuid} label={props.level.name}>\n      <TreeItem nodeId={props.level.uuid + '_constraints'} label=\"constraints\">\n        {props.level.constraints.map((constraint) => <ConstraintTreeItem constraint={constraint} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_doors'} label=\"doors\">\n        {props.level.doors.map((door) => <DoorTreeItem door={door} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_features'} label=\"features\">\n        {props.level.features.map((feature) => <FeatureTreeItem feature={feature} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_floors'} label=\"floors\">\n        {props.level.floors.map((floor) => <FloorTreeItem floor={floor} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_images'} label=\"images\">\n        {props.level.images.map((image) => <ImageTreeItem image={image} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_lanes'} label=\"lanes\">\n        {props.level.lanes.map((lane) => <LaneTreeItem lane={lane} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_measurements'} label=\"measurements\">\n        {props.level.measurements.map((measurement) => <MeasurementTreeItem measurement={measurement} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_models'} label=\"models\">\n        {props.level.models.map((model) => <ModelTreeItem model={model} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_vertices'} label=\"vertices\">\n        {props.level.vertices.map((vertex) => <VertexTreeItem vertex={vertex} /> )}\n      </TreeItem>\n      <TreeItem nodeId={props.level.uuid + '_walls'} label=\"walls\">\n        {props.level.walls.map((wall) => <WallTreeItem wall={wall} /> )}\n      </TreeItem>\n    </TreeItem>\n  );\n}\n\nexport default function BuildingSummary(): JSX.Element {\n  const building = useStore(state => state.building);\n\n  if (building.name === '') {\n    return (\n      <div style={{margin: '1em'}}>\n        <p>\n          No map loaded.\n        </p>\n        <p>\n          To load a map, click the menu icon in the upper-left.\n        </p>\n      </div>\n    );\n  }\n \n  // defaultExpanded={[building.uuid + '_levels']}\n  return (\n    <TreeView\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId={building.uuid + '_name'} label={\"name: \" + building.name} />\n      <TreeItem nodeId={building.uuid + '_ref'} label={\"reference level: \" + building.reference_level_name } />\n      <TreeItem nodeId={building.uuid + '_levels'} label=\"levels\">\n        {building.levels.map((level) => <LevelTreeItem level={level} /> )}\n      </TreeItem>\n    </TreeView>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { useStore, EditorVertex, EditorDoor, setSelection } from './EditorStore';\n\ninterface SceneDoorProps {\n  vertex_start: EditorVertex,\n  vertex_end: EditorVertex,\n  door: EditorDoor,\n  elevation: number,\n}\n\nexport function SceneDoor(props: SceneDoorProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const cx = (v1.x + v2.x) / 2 / 50;\n  const cy = (v1.y + v2.y) / 2 / 50;\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) / 50;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.1, 0.4, 0.4);\n    if (selection && selection.uuid === props.door.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.door.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 1.0 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.door.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.door);\n      }}\n    >\n      <boxGeometry args={[len, 0.5, 2]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { useStore, EditorVertex, EditorFloor, setSelection } from './EditorStore';\n\ntype SceneFloorProps = {\n  floor: EditorFloor;\n  vertices: EditorVertex[];\n  elevation: number;\n}\n\nexport function SceneFloor(props: SceneFloorProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n  //const setSelection = useStore(state => state.setSelection)\n\n  const shape = React.useMemo(() => {\n    const shape = new THREE.Shape();\n    let started = false;\n\n    for (const v of props.vertices) {\n      if (!started)\n      {\n        shape.moveTo(v.x / 50, v.y / 50)\n        started = true\n      }\n      else\n        shape.lineTo(v.x / 50, v.y / 50)\n    }\n    const v0 = props.vertices[0]\n    shape.lineTo(v0.x / 50, v0.y / 50)\n    return shape\n  }, [props.vertices])\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(1, 1, 1);\n    if (selection && selection.uuid === props.floor.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.floor.uuid]);\n\n  return (\n    <mesh\n      key={props.floor.uuid}\n      onClick={(event) => {\n        event.stopPropagation()\n        console.log('floor onClick')\n        setSelection(setStore, props.floor)\n      }}\n    >\n      <extrudeGeometry args={[shape, { 'depth': 0.1, 'bevelEnabled': false } ]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n\n  /*\n      <meshStandardMaterial color={color} transparent={true} opacity={0.5} />\n  return (\n    <gridHelper\n      args={[100, 100]}\n      rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n      position={new THREE.Vector3(50, -50, elevation)}/>\n  );\n   */\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { useStore, EditorVertex, EditorLane, setSelection } from './EditorStore';\n\ninterface SceneLaneProps {\n  vertex_start: EditorVertex,\n  vertex_end: EditorVertex,\n  lane: EditorLane,\n  elevation: number,\n}\n\nexport function SceneLane(props: SceneLaneProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n  //const setSelection = useStore(state => state.setSelection)\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const cx = (v1.x + v2.x) / 2 / 50;\n  const cy = (v1.y + v2.y) / 2 / 50;\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) / 50;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.4, 0.05, 0.05);\n    if (selection && selection.uuid === props.lane.uuid) {\n      color.setRGB(0.8, 0.3, 0.01);\n    }\n    return color;\n  }, [selection, props.lane.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 0.2 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.lane.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.lane);\n      }}\n    >\n      <boxGeometry args={[len, 1.0, 0.1]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\nimport { useLoader } from '@react-three/fiber';\nimport { useStore, EditorImage, setSelection } from './EditorStore';\n\ntype SceneImageProps = {\n  image: EditorImage,\n  elevation: number,\n}\n\nexport function SceneImage(props: SceneImageProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const url_base = useStore(state => state.building.url_base);\n  const setStore = useStore(state => state.set);\n  const [ texture ] = useLoader(TextureLoader, [url_base + props.image.filename]);\n\n  let width_pixels = 128;\n  let height_pixels = 128;\n\n  let width_meters = 50.0;\n  let height_meters = 50.0;\n\n  if (texture) {\n    texture.magFilter = THREE.NearestFilter;\n    texture.minFilter = THREE.NearestFilter;\n    width_pixels = texture.image.width;\n    height_pixels = texture.image.height;\n    width_meters = width_pixels / 50;\n    height_meters = height_pixels / 50;\n  }\n\n  const x = 0; //props.image.x / 50.0;\n  const y = 0; //props.image.y / 50.0;\n  const scale = 1.0;\n  const yaw = 0.0;\n  // <meshStandardMaterial color={color} />\n  // rotation={new THREE.Euler(Math.PI / 2, yaw, 0)}\n\n  return (\n    <mesh\n      position={[width_meters / 2, -height_meters / 2, props.elevation + 0.1]}\n      scale={scale}\n      rotation={new THREE.Euler(0, yaw, 0)}\n      key={props.image.uuid}\n    >\n      <boxGeometry args={[width_meters, height_meters, 0.1, 8]} />\n      <meshStandardMaterial map={texture} color={[1.0, 1.0, 1.0]} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { useStore, EditorVertex, EditorMeasurement, setSelection } from './EditorStore';\n\ninterface SceneMeasurementProps {\n  vertex_start: EditorVertex,\n  vertex_end: EditorVertex,\n  measurement: EditorMeasurement,\n  elevation: number,\n}\n\nexport function SceneMeasurement(props: SceneMeasurementProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const cx = (v1.x + v2.x) / 2 / 50;\n  const cy = (v1.y + v2.y) / 2 / 50;\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) / 50;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.6, 0.1, 0.6);\n    if (selection && selection.uuid === props.measurement.uuid) {\n      color.setRGB(0.8, 0.3, 0.01);\n    }\n    return color;\n  }, [selection, props.measurement.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 0.2 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.measurement.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.measurement);\n      }}\n    >\n      <boxGeometry args={[len, 0.5, 0.1]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { useStore, EditorModel, EditorToolID, setSelection, updateModelPoint } from './EditorStore';\n\ninterface SceneModelProps {\n  model: EditorModel,\n  elevation: number,\n  level_uuid: string,\n}\n\nexport function SceneModel(props: SceneModelProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const isMoveToolActive = useStore(state => state.activeTool === EditorToolID.MOVE);\n  const [ dragActive, setDragActive ] = React.useState(false);\n\n  const x = props.model.x / 50.0;\n  const y = props.model.y / 50.0;\n\n  let color = \"rgb(128, 128, 128)\";\n  if (selection && selection.uuid === props.model.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  return (\n    <mesh\n      position={[x, y, 0.25 + props.elevation]}\n      scale={1.0}\n      rotation={new THREE.Euler(Math.PI / 2, props.model.yaw, 0)}\n      key={props.model.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.model);\n      }}\n      onPointerDown={(event) => {\n        if (!isMoveToolActive)\n          return;\n        event.stopPropagation();\n        setDragActive(true);\n        if (event.target) {\n          (event.target as HTMLElement).setPointerCapture(event.pointerId);\n        }\n      }}\n      onPointerUp={(event) => {\n        event.stopPropagation();\n        setDragActive(false);\n        if (event.target) {\n          (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n        }\n      }}\n      onPointerMove={(event) => {\n        if (dragActive) {\n          event.stopPropagation();\n          if (editorMode === '2d') {\n            const px = event.unprojectedPoint.x * 50;\n            const py = event.unprojectedPoint.y * 50;\n            updateModelPoint(setStore, props.level_uuid, props.model.uuid, px, py);\n          }\n          else {\n            let intersection_point = new THREE.Vector3();\n            event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n            updateModelPoint(setStore, props.level_uuid, props.model.uuid, intersection_point.x * 50, intersection_point.y * 50);\n          }\n        }\n      }}\n    >\n      <boxGeometry args={[0.4, 0.4, 0.4, 8]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { Text } from '@react-three/drei'\nimport { useStore, EditorVertex, EditorToolID, setSelection, updateVertexPoint } from './EditorStore';\n\ninterface SceneVertexProps {\n  vertex: EditorVertex,\n  elevation: number,\n  level_uuid: string,\n}\n\nexport function SceneVertex(props: SceneVertexProps): JSX.Element {\n  const selection = useStore(state => state.selection);\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const isMoveToolActive = useStore(state => state.activeTool === EditorToolID.MOVE);\n  const [ dragActive, setDragActive ] = React.useState(false);\n\n  const x = props.vertex.x / 50.0;\n  const y = props.vertex.y / 50.0;\n\n  let color = \"rgb(0, 128, 0)\";\n  if (selection && selection.uuid === props.vertex.uuid) {\n    color = \"rgb(255, 100, 10)\";\n  }\n\n  return (\n    <group>\n      <mesh\n        position={[x, y, 0.25 + props.elevation]}\n        scale={1.0}\n        rotation={new THREE.Euler(Math.PI / 2, 0, 0)}\n        key={props.vertex.uuid}\n        onClick={(event) => {\n          event.stopPropagation();\n          setSelection(setStore, props.vertex);\n        }}\n        onPointerDown={(event) => {\n          if (!isMoveToolActive)\n            return;\n          event.stopPropagation();\n          setDragActive(true);\n          if (event.target) {\n            (event.target as HTMLElement).setPointerCapture(event.pointerId);\n          }\n        }}\n        onPointerUp={(event) => {\n          event.stopPropagation();\n          setDragActive(false);\n          if (event.target) {\n            (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n          }\n        }}\n        onPointerMove={(event) => {\n          if (dragActive) {\n            event.stopPropagation();\n            if (editorMode === '2d') {\n              const px = event.unprojectedPoint.x * 50;\n              const py = event.unprojectedPoint.y * 50;\n              updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, px, py);\n            }\n            else {\n              let intersection_point = new THREE.Vector3();\n              event.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), props.elevation), intersection_point);\n              updateVertexPoint(setStore, props.level_uuid, props.vertex.uuid, intersection_point.x * 50, intersection_point.y * 50);\n            }\n          }\n        }}\n      >\n        <cylinderGeometry args={[0.3, 0.3, 0.2, 8]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <Text color=\"blue\" position={[x, y, 0.5 + props.elevation]}>\n        {props.vertex.name}\n      </Text>\n    </group>\n  );\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { useStore, EditorVertex, EditorWall, setSelection } from './EditorStore';\n\ninterface SceneWallProps {\n  vertex_start: EditorVertex,\n  vertex_end: EditorVertex,\n  wall: EditorWall,\n  elevation: number,\n}\n\nexport function SceneWall(props: SceneWallProps): JSX.Element {\n  const selection = useStore(state => state.selection)\n  //const setSelection = useStore(state => state.setSelection)\n  const setStore = useStore(state => state.set);\n\n  const v1 = props.vertex_start;\n  const v2 = props.vertex_end;\n  const cx = (v1.x + v2.x) / 2 / 50;\n  const cy = (v1.y + v2.y) / 2 / 50;\n  const dx = v2.x - v1.x;\n  const dy = v2.y - v1.y;\n  const len = Math.sqrt(dx*dx + dy*dy) / 50;\n  const xyrot = Math.atan2(dy, dx);\n\n  const color: THREE.Color = React.useMemo(() => {\n    let color = new THREE.Color(0.1, 0.1, 0.7);\n    if (selection && selection.uuid === props.wall.uuid) {\n      color.setRGB(1, 0.4, 0.1);\n    }\n    return color;\n  }, [selection, props.wall.uuid]);\n\n  return (\n    <mesh\n      position={[cx, cy, 1.0 + props.elevation]}\n      rotation={new THREE.Euler(0, 0, xyrot)}\n      scale={1.0}\n      key={props.wall.uuid}\n      onClick={(event) => {\n        event.stopPropagation();\n        setSelection(setStore, props.wall);\n      }}\n    >\n      <boxGeometry args={[len, 0.1, 2]} />\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n}\n","import React from 'react'\nimport { Level } from './Level';\nimport { SceneDoor } from './SceneDoor';\nimport { SceneFloor } from './SceneFloor';\nimport { SceneLane } from './SceneLane';\nimport { SceneImage } from './SceneImage';\nimport { SceneMeasurement } from './SceneMeasurement';\nimport { SceneModel } from './SceneModel';\nimport { SceneVertex } from './SceneVertex';\nimport { SceneWall } from './SceneWall';\nimport { useStore } from './EditorStore';\n\ntype SceneLevelProps = {\n  level: Level\n}\n\nexport function SceneLevel(props: SceneLevelProps): JSX.Element {\n  const z = props.level.elevation / 2;\n  useStore(state => state.selection);  // needed to ensure repaints after de-selection\n\n  return (\n    <group>\n      {props.level.models.map(model =>\n        <SceneModel\n          key={model.uuid}\n          model={model}\n          level_uuid={props.level.uuid}\n          elevation={z} />)}\n\n      {props.level.vertices.map((vertex) =>\n        <SceneVertex\n          key={vertex.uuid}\n          vertex={vertex}\n          level_uuid={props.level.uuid}\n          elevation={z} />)}\n\n      {props.level.walls.map((wall) =>\n        <SceneWall\n          key={wall.uuid}\n          wall={wall}\n          vertex_start={props.level.vertices[wall.start_idx]}\n          vertex_end={props.level.vertices[wall.end_idx]}\n          elevation={z} />)}\n\n      {props.level.doors.map((door) =>\n        <SceneDoor\n          key={door.uuid}\n          door={door}\n          vertex_start={props.level.vertices[door.start_idx]}\n          vertex_end={props.level.vertices[door.end_idx]}\n          elevation={z} />)}\n\n      {props.level.floors.map((floor) =>\n        <SceneFloor\n          key={floor.uuid}\n          floor={floor}\n          vertices={floor.vertex_indices.map((idx) => props.level.vertices[idx])}\n          elevation={z} />)}\n\n      {props.level.lanes.map(lane =>\n        <SceneLane\n          key={lane.uuid}\n          lane={lane}\n          vertex_start={props.level.vertices[lane.start_idx]}\n          vertex_end={props.level.vertices[lane.end_idx]}\n          elevation={z} />)}\n\n      {props.level.images.filter(image => image.isLegacyDefaultImage).map(image =>\n        <SceneImage\n          key={image.uuid}\n          image={image}\n          elevation={z} />)}\n\n      {props.level.measurements.map(meas =>\n        <SceneMeasurement\n          key={meas.uuid}\n          measurement={meas}\n          vertex_start={props.level.vertices[meas.start_idx]}\n          vertex_end={props.level.vertices[meas.end_idx]}\n          elevation={z} />)}\n    </group>\n  );\n}\n","import React from 'react'\nimport { useStore } from './EditorStore';\nimport { SceneLevel } from './SceneLevel';\n\ntype SceneBuildingProps = {\n}\n\nexport function SceneBuilding(props: SceneBuildingProps): JSX.Element {\n  const building = useStore(state => state.building);\n  useStore(state => state.selection);  // needed to ensure repaints after de-selection\n  useStore(state => state.repaintCount);  // needed to ensure repaints after tweaks\n\n  return (\n    <group>\n      {building.levels.map((level) => <SceneLevel key={level.uuid} level={level} />)}\n    </group>\n  );\n}\n","import * as THREE from 'three'\nimport { Canvas } from '@react-three/fiber'\nimport React, { useRef, Suspense } from 'react'\nimport { OrbitControls } from '@react-three/drei'\nimport { PerspectiveCamera, OrthographicCamera } from '@react-three/drei'\n\nimport { useStore, clearSelection } from './EditorStore';\nimport { SceneBuilding } from './SceneBuilding';\n\ntype EditorSceneProps = {\n};\n\nexport function EditorScene(props: EditorSceneProps): JSX.Element {\n  const setStore = useStore(state => state.set);\n  //const clearSelection = useStore(state => state.clearSelection);\n  const editorMode = useStore(state => state.editorMode);\n  const cameraInitialPose = useStore(state => state.cameraInitialPose);\n\n  const Controls = (): JSX.Element => {\n    THREE.Object3D.DefaultUp = new THREE.Vector3(0, 0, 1);\n    const perspective_camera = useRef<THREE.Camera>(null);\n    const orthographic_camera = useRef<THREE.Camera>(null);\n    const enableMotionControls = useStore(state => state.enableMotionControls);\n\n    // todo: there is probably a better way to do this than having two cameras\n    return (\n      <>\n        <PerspectiveCamera\n          ref={perspective_camera}\n          position={cameraInitialPose.position}\n          fov={60}\n          makeDefault={editorMode === '3d'}\n        />\n        <OrthographicCamera\n          ref={orthographic_camera}\n          position={[cameraInitialPose.target.x, cameraInitialPose.target.y, cameraInitialPose.target.z + 5]}\n          zoom={20}\n          makeDefault={editorMode === '2d'}\n        />\n        {perspective_camera && orthographic_camera && <OrbitControls\n          enableDamping={false}\n          screenSpacePanning={editorMode === '3d' ? false : true}\n          target={cameraInitialPose.target}\n          camera={editorMode === '3d' ? perspective_camera.current! : orthographic_camera.current!}\n          maxPolarAngle={editorMode === '3d' ? Infinity : 0}\n          minAzimuthAngle={editorMode === '3d' ? -Infinity : 0}\n          maxAzimuthAngle={editorMode === '3d' ? Infinity : 0}\n          mouseButtons={{\n            LEFT: -1,\n            MIDDLE: THREE.MOUSE.PAN,\n            RIGHT: THREE.MOUSE.ROTATE,\n          }}\n          touches={{\n            ONE: THREE.TOUCH.PAN,\n            TWO: THREE.TOUCH.ROTATE\n          }}\n          enabled={enableMotionControls}\n        />}\n      </>\n    );\n  }\n\n  console.log('EditorScene()');\n  return (\n    <Canvas\n      frameloop=\"demand\"\n      onPointerMissed={() => {\n        clearSelection(setStore);\n      }}\n    >\n      <Controls />\n      <axesHelper />\n      <ambientLight />\n      <pointLight position={[10, 10, 10]} />\n      <Suspense fallback={null} >\n        <SceneBuilding />\n      </Suspense>\n    </Canvas>\n  )\n}\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { useStore } from './EditorStore';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  noSelectionDiv: {\n  },\n  table: {\n    padding: '0px',\n    margin: '0px'\n  },\n  tableHead: {\n  },\n  tableHeadRow: {\n    borderBottomStyle: 'solid',\n    borderBottom: '1px',\n    borderBottomColor: theme.palette.primary.main,\n  },\n  tableHeadCell: {\n    fontWeight: 'bold',\n    padding: '0px',\n    paddingLeft: '5px',\n  },\n  tableCell: {\n    padding: '0px',\n    paddingLeft: '5px',\n  }\n}));\n\nexport default function PropertyEditor(): JSX.Element {\n  const classes = useStyles();\n  const selection = useStore(state => state.selection);\n\n  if (!selection) {\n    return (<div className={classes.noSelectionDiv}></div>);\n  }\n\n  let rows = selection.params.map((param) => (\n    <TableRow>\n      <TableCell className={classes.tableCell}>{param.name}</TableCell>\n      <TableCell className={classes.tableCell}>{param.value.toString()}</TableCell>\n    </TableRow>\n  ));\n\n  // todo: add any other class-specific stuff\n\n  return (\n    <Table className={classes.table}>\n      <TableHead className={classes.tableHead}>\n        <TableRow className={classes.tableHeadRow}>\n          <TableCell className={classes.tableHeadCell}>Property Name</TableCell>\n          <TableCell className={classes.tableHeadCell}>Property Value</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows}\n      </TableBody>\n    </Table>\n  );\n}\n","import { useStore } from './EditorStore'\nimport { Building } from './Building'\nimport YAML from 'yaml'\n\n\nexport function YAMLParser(yaml_text: string, url_base: string): Building {\n  const building = Building.fromYAML(yaml_text);\n  building.url_base = url_base;\n  const cameraInitialPose = building.computeInitialCameraPose();\n\n  useStore.setState({\n    building: building,\n    selection: null,\n    cameraInitialPose: cameraInitialPose\n  });\n\n  return building;\n}\n\nexport async function YAMLRetriever(url_base: string, resource_name: string): Promise<void> {\n  await fetch(url_base + resource_name)\n    .then(response => response.text())\n    .then(text => YAMLParser(text, url_base))\n}\n\nexport async function YAMLRetrieveDemo(name: string): Promise<void> {\n  await YAMLRetriever(\n    process.env.PUBLIC_URL + `/demos/${name}/`,\n    `${name}.building.yaml`);\n}\n\nexport async function YAMLSender(url: string): Promise<void> {\n  Object.getPrototypeOf(YAML.YAMLMap).maxFlowStringSingleLineLength = 10000;\n  const { building } = useStore.getState();\n  let yaml_text: string = building.toYAMLString();\n  let yaml_size = new Blob([yaml_text]).size;  // utf-8 encoding length\n  await fetch(url, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/x-yaml',\n      'content-length': yaml_size.toString(),\n    },\n    body: yaml_text,\n  });\n}\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MapIcon from '@material-ui/icons/Map';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { YAMLParser } from './YAMLParser';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  directoryButton: {\n    fontSize: theme.typography.h5.fontSize\n  },\n  filename: {\n    fontSize: theme.typography.h5.fontSize,\n    textDecoration: 'underline'\n  },\n  dialog: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\ntype OpenDialogProps = {\n  open: boolean;\n  onOpen: () => void; //filename: string, handle: FileSystemDirectoryHandle | undefined) => void;\n  onCancel: () => void;\n};\n\nexport default function OpenDialog(props: OpenDialogProps): JSX.Element {\n  const classes = useStyles(props);\n  const [buildingFileNames, setBuildingFileNames] = React.useState<string[]>([]);\n  const [directoryHandle, setDirectoryHandle] = React.useState<FileSystemDirectoryHandle>();\n\n  const onDirectoryClick = async () => {\n    setBuildingFileNames([]);\n    const handle = await window.showDirectoryPicker();\n    await setDirectoryHandle(handle);\n    for await (const entry of handle.values()) {\n      if (entry.name.endsWith('.building.yaml'))\n        setBuildingFileNames(previous => [...previous, entry.name]);\n    }\n  }\n\n  const loadFile = async(filename: string) => {\n    if (directoryHandle) {\n      const fileHandle = await directoryHandle.getFileHandle(filename);\n      const file = await fileHandle.getFile();\n      const text = await file.text();\n      YAMLParser(text, '');\n    }\n    props.onOpen();\n  }\n\n  const buildingFileList = () => {\n    if (buildingFileNames.length > 0)\n      return (\n        <div>\n          <List\n            subheader={\n              <ListSubheader component=\"div\">\n                Available Files\n              </ListSubheader>\n            }\n          >\n            {buildingFileNames.map((filename) =>\n              <ListItem button key={filename}>\n                <ListItemIcon>\n                  <MapIcon />\n                </ListItemIcon>\n                <ListItemText primary={filename} onClick={e => {loadFile(filename)}} />\n              </ListItem>)\n            }\n          </List>\n        </div>\n      );\n  }\n\n  return (\n    <Dialog open={props.open} onClose={props.onCancel}>\n      <DialogTitle>Open Building Map</DialogTitle>\n      <DialogContent className={classes.dialog}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onDirectoryClick}>\n          Select Directory...\n        </Button>\n        {buildingFileList()}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onCancel} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useCallback } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport { useStore, EditorToolID, setEditorMode, clearSelection, setActiveTool } from './EditorStore';\nimport OpenDialog from './OpenDialog';\nimport { YAMLRetriever, YAMLRetrieveDemo, YAMLSender } from './YAMLParser';\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\nimport PanToolIcon from '@material-ui/icons/PanTool';\n\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst StyledToggleButtonGroup = withStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(0.5),\n    marginRight: 5\n  },\n  grouped: {\n    //marginRight: theme.spacing(0.5),\n    //marginLeft: theme.spacing(0.5),\n    //margin: theme.spacing(0.5),\n    color: theme.palette.primary.contrastText,\n    //background: theme.palette.primary.dark,\n    \"&.Mui-selected:hover, &:hover\": {\n      background: theme.palette.primary.dark,\n    },\n    \"&.Mui-selected\": {\n      background: theme.palette.primary.dark,\n      color: theme.palette.primary.contrastText\n    },\n    /*\n    '&:not(:first-child)': {\n      borderRadius: '5px',\n    },\n    '&:first-child': {\n      borderRadius: '5px',\n    },\n    */\n  },\n}))(ToggleButtonGroup);\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  appTitle: {\n    marginRight: 20\n  },\n  filler: {\n    flex: 1\n  }\n}));\n\n\nexport default function MainMenu(props: React.PropsWithChildren<{}>): JSX.Element {\n  const classes = useStyles(props);\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState(null);\n  const [isOpenDialogOpen, setIsOpenDialogOpen] = React.useState(false);\n  const [snackOpen, setSnackOpen] = React.useState(false);\n  const [snackMessage, setSnackMessage] = React.useState('');\n  const [mapType, setMapType] = React.useState('');\n  const setStore = useStore(state => state.set);\n  const editorMode = useStore(state => state.editorMode);\n  const activeTool = useStore(state => state.activeTool);\n  //const setEditorMode = useStore(state => state.setEditorMode);\n  //const setActiveTool = useStore(state => state.setActiveTool);\n  //const clearSelection = useStore(state => state.clearSelection);\n\n  const onModeChange = (event: React.MouseEvent<HTMLElement>, newMode: string | null) => {\n    if (newMode !== null) {\n      setEditorMode(setStore, newMode);\n      clearSelection(setStore);\n    }\n  };\n\n  const onToolChange = (event: React.MouseEvent<HTMLElement>, newTool: EditorToolID | null) => {\n    if (newTool !== null) {\n      setActiveTool(setStore, newTool);\n      clearSelection(setStore);\n    }\n  }\n\n  const save = useCallback(\n    async () => {\n      if (mapType === 'local_file') {\n        setSnackMessage('Cannot save. Local file save not yet implemented.');\n        setSnackOpen(true);\n      }\n      else if (mapType === 'local_rest') {\n        try {\n          await YAMLSender('http://localhost:8000/map_file');\n        } catch (error) {\n          setSnackMessage('Error while saving to local REST server');\n          setSnackOpen(true);\n        }\n      }\n      else if (mapType === 'demo') {\n        setSnackMessage('Cannot save. Demo maps are read-only.');\n        setSnackOpen(true);\n      }\n      else {\n        setSnackMessage('Cannot save. No map loaded.');\n        setSnackOpen(true);\n      }\n    },\n    [mapType]\n  );\n\n  const snackClose = () => {\n    setSnackOpen(false);\n  }\n\n  React.useEffect(() => {\n    const keyDown = (event: KeyboardEvent) => {\n      let key = event.key.toLowerCase();\n      if (key === 'm') {\n        setActiveTool(setStore, EditorToolID.MOVE);\n        clearSelection(setStore);\n      } else if (key === 'escape') {\n        setActiveTool(setStore, EditorToolID.SELECT);\n        clearSelection(setStore);\n      } else if (key === 's' && event.ctrlKey) {\n        event.preventDefault();\n        save();\n        return false;\n      }\n    };\n\n    window.addEventListener('keydown', keyDown);\n    return () => {\n      window.removeEventListener('keydown', keyDown);\n    };\n  }, [setStore, save]);\n\n  return (\n    <AppBar position=\"fixed\">\n      <ToolBar>\n        <IconButton\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"Menu\"\n          onClick={(e: any) => { setMenuAnchorEl(e.currentTarget); }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          keepMounted\n          anchorEl={menuAnchorEl}\n          open={Boolean(menuAnchorEl)}\n          onClose={() => setMenuAnchorEl(null)}\n          getContentAnchorEl={null}\n          anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\n          transformOrigin={{vertical: 'top', horizontal: 'center'}}\n          transitionDuration={0.0}\n        >\n          <MenuItem\n            onClick={async () => {\n              try {\n                await YAMLRetriever('http://localhost:8000/', 'map_file');\n                setMapType('local_rest');\n              } catch (error) {\n                setSnackMessage('could not open file from localhost:8000');\n                setSnackOpen(true);\n              }\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open map from localhost:8000\n            </ListItemText>\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              await YAMLRetrieveDemo('office');\n              setMapType('demo');\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open demo map\n            </ListItemText>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              setIsOpenDialogOpen(true);\n              setMapType('local_file');\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Open map from local file...\n            </ListItemText>\n          </MenuItem>\n          <Divider />\n          <MenuItem\n            onClick={() => {\n              save();\n              setMenuAnchorEl(null);\n            }}\n          >\n            <ListItemIcon>\n              <SaveIcon />\n            </ListItemIcon>\n            <ListItemText>\n              Save\n            </ListItemText>\n          </MenuItem>\n        </Menu>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.appTitle}>\n          Traffic Editor\n        </Typography>\n        <div className={classes.filler} />\n        <StyledToggleButtonGroup\n          value={activeTool}\n          size=\"small\"\n          exclusive\n          onChange={onToolChange}\n          aria-label=\"tool\"\n        >\n          <ToggleButton value={EditorToolID.SELECT}>\n            <Tooltip title=\"Select tool [Escape]\">\n              <PanToolIcon />\n            </Tooltip>\n          </ToggleButton>\n          <ToggleButton value={EditorToolID.MOVE}>\n            <Tooltip title=\"Move tool [m]\">\n              <OpenWithIcon />\n            </Tooltip>\n          </ToggleButton>\n        </StyledToggleButtonGroup>\n        <StyledToggleButtonGroup\n          value={editorMode}\n          size=\"small\"\n          exclusive\n          onChange={onModeChange}\n          aria-label=\"editor mode\"\n        >\n          <ToggleButton value=\"3d\">3D</ToggleButton>\n          <ToggleButton value=\"2d\">2D</ToggleButton>\n        </StyledToggleButtonGroup>\n      </ToolBar>\n      <OpenDialog\n        open={isOpenDialogOpen}\n        onOpen={() => setIsOpenDialogOpen(false)}\n        onCancel={() => setIsOpenDialogOpen(false)}\n      />\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        open={snackOpen}\n        onClose={snackClose}\n        autoHideDuration={2000}\n        transitionDuration={0}\n        TransitionProps={{\n          appear: false,\n        }}\n        action={\n          <React.Fragment>\n            <IconButton onClick={snackClose}>\n              <CloseIcon />\n            </IconButton>\n          </React.Fragment>\n        }\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={snackClose}>\n          {snackMessage}\n        </MuiAlert>\n      </Snackbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport BuildingSummary from './BuildingSummary';\nimport { EditorScene } from './EditorScene';\nimport PropertyEditor from './PropertyEditor';\nimport MainMenu from './MainMenu';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    minHeight: '100vh',\n  },\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar,\n  workingArea: {\n    backgroundColor: \"black\",\n    height: `calc(100vh - 64px)`,\n  },\n  gridLeftColumn: {\n    borderRight: '5px',\n    borderRightStyle: 'solid',\n    borderRightColor: theme.palette.primary.main,\n  },\n  propertyGridItem: {\n    borderTop: '5px',\n    borderTopStyle: 'solid',\n    borderTopColor: theme.palette.primary.main,\n  }\n}));\n\nexport default function App(props: React.PropsWithChildren<{}>): JSX.Element {\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes.root}>\n      <MainMenu />\n      <div className={classes.toolbarMargin} />\n      <Grid container spacing={0}>\n        <Grid className={classes.gridLeftColumn} container xs={3} direction=\"column\" spacing={0}>\n          <Grid item style={{height: '40vh', overflow: 'auto'}}>\n            <BuildingSummary />\n          </Grid>\n          <Grid item className={classes.propertyGridItem} style={{height: '40vh', overflow: 'auto'}}>\n            <PropertyEditor />\n          </Grid>\n        </Grid>\n        <Grid item xs={9} className={classes.workingArea}>\n          <EditorScene />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}