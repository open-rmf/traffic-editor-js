{"version":3,"sources":["OpenDialog.tsx","Building.ts","BuildingSummary.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","directoryButton","fontSize","typography","h5","filename","textDecoration","dialog","backgroundColor","palette","background","paper","OpenDialog","props","classes","React","useState","buildingFileNames","setBuildingFileNames","directoryHandle","setDirectoryHandle","onDirectoryClick","a","window","showDirectoryPicker","handle","entry","name","endsWith","previous","values","Dialog","open","onClose","onCancel","DialogTitle","DialogContent","className","Button","variant","color","onClick","length","List","subheader","ListSubheader","component","map","ListItem","button","ListItemIcon","ListItemText","primary","e","onOpen","buildingFileList","DialogActions","Building","xml","_filename","this","getFileHandle","fileHandle","getFile","file","text","BuildingSummary","building","root","flexGrow","flex","menuButton","marginLeft","marginRight","toolbarMargin","mixins","toolbar","App","menuAnchorEl","setMenuAnchorEl","openDialogOpen","setOpenDialogOpen","onOpenDialogOpen","load_file","AppBar","position","IconButton","aria-label","event","currentTarget","keepMounted","anchorEl","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","Typography","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5861258.chunk.js","sourcesContent":["import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MapIcon from '@material-ui/icons/Map';\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  directoryButton: {\n    fontSize: theme.typography.h5.fontSize\n  },\n  filename: {\n    fontSize: theme.typography.h5.fontSize,\n    textDecoration: 'underline'\n  },\n  dialog: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\ntype OpenDialogProps = {\n  open: boolean;\n  onOpen: (filename: string, handle: FileSystemDirectoryHandle | undefined) => void;\n  onCancel: () => void;\n};\n\nexport default function OpenDialog(props: OpenDialogProps): JSX.Element {\n  const classes = useStyles(props);\n  const [buildingFileNames, setBuildingFileNames] = React.useState<string[]>([]);\n  const [directoryHandle, setDirectoryHandle] = React.useState<FileSystemDirectoryHandle>();\n\n  const onDirectoryClick = async () => {\n    setBuildingFileNames([]);\n    const handle = await window.showDirectoryPicker();\n    await setDirectoryHandle(handle);\n    for await (const entry of handle.values()) {\n      if (entry.name.endsWith('.building.yaml'))\n        setBuildingFileNames(previous => [...previous, entry.name]);\n    }\n  }\n\n  const buildingFileList = () => {\n    if (buildingFileNames.length > 0)\n      return (\n        <div>\n          <List\n            subheader={\n              <ListSubheader component=\"div\">\n                Available Files\n              </ListSubheader>\n            }\n          >\n            {buildingFileNames.map((filename) =>\n              <ListItem button>\n                <ListItemIcon>\n                  <MapIcon />\n                </ListItemIcon>\n                <ListItemText primary={filename} onClick={e => props.onOpen(filename, directoryHandle)} />\n              </ListItem>)\n            }\n          </List>\n        </div>\n      );\n  }\n\n  return (\n    <Dialog open={props.open} onClose={props.onCancel}>\n      <DialogTitle>Open Building Map</DialogTitle>\n      <DialogContent className={classes.dialog}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onDirectoryClick}>\n          Select Directory...\n        </Button>\n        {buildingFileList()}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onCancel} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","export default class Building\n{\n  xml: string = '';\n  filename: string = '';\n  \n  async load_file(_filename: string, directoryHandle: FileSystemDirectoryHandle): Promise<boolean>\n  {\n    this.filename = _filename;\n    const fileHandle = await directoryHandle.getFileHandle(_filename);\n    const file = await fileHandle.getFile();\n    this.xml = await file.text();\n    return true;\n  }\n}\n","import Building from './Building';\n\ntype BuildingSummaryProps = {\n  building: Building;\n}\n\nexport default function BuildingSummary(props: BuildingSummaryProps): JSX.Element {\n  return (\n    <div>\n      <h3>{props.building.filename}</h3>\n      {props.building.xml}\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport OpenDialog from './OpenDialog';\nimport Building from './Building';\nimport BuildingSummary from './BuildingSummary';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  flex: {\n    flex: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  toolbarMargin: theme.mixins.toolbar\n}));\n\nexport default function App(props: React.PropsWithChildren<{}>): JSX.Element {\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState(null);\n  const [openDialogOpen, setOpenDialogOpen] = React.useState(false);\n  const [building, setBuilding] = React.useState(new Building());\n\n  const classes = useStyles(props);\n\n  const menuClick = (event: any) => {\n    setMenuAnchorEl(event.currentTarget);\n  }\n\n  const menuClose = () => {\n    setMenuAnchorEl(null);\n  }\n\n  const menuOpen = () => {\n    setOpenDialogOpen(true);\n    setMenuAnchorEl(null);\n  }\n\n  const onOpenDialogClose = () => {\n    setOpenDialogOpen(false);\n  }\n\n  const onOpenDialogOpen = async (filename: string, handle: FileSystemDirectoryHandle | undefined) => {\n    setOpenDialogOpen(false);\n    if (handle) {\n      await building.load_file(filename, handle);\n      // todo: this doesn't force an immediate re-render of BuildingSummary :(\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <ToolBar>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={menuClick}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Menu\n            keepMounted\n            anchorEl={menuAnchorEl}\n            open={Boolean(menuAnchorEl)}\n            onClose={menuClose}\n            getContentAnchorEl={null}\n            anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\n            transformOrigin={{vertical: 'top', horizontal: 'center'}}\n          >\n            <MenuItem onClick={menuOpen}>Open Building Map</MenuItem>\n          </Menu>\n          <Typography\n            variant=\"h5\"\n            color=\"inherit\"\n            className={classes.flex}\n          >\n            Traffic Editor\n          </Typography>\n        </ToolBar>\n      </AppBar>\n      <div className={classes.toolbarMargin} />\n      <OpenDialog open={openDialogOpen} onOpen={onOpenDialogOpen} onCancel={onOpenDialogClose} />\n      <BuildingSummary building={building} />\n      {!building.filename && <div>Click the menu icon above to load a building.</div>}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}